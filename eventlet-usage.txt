https://opendev.org/openstack/aodh/src/branch/master/releasenotes/notes/remove-eventlet-18ada1cff213af5e.yaml#n4 : Remove eventlet from Aodh in favour of threaded approach
https://opendev.org/openstack/aodh/src/branch/master/releasenotes/source/locale/de/LC_MESSAGES/releasenotes.po#n241 : msgid "Remove eventlet from Aodh in favour of threaded approach"
https://opendev.org/openstack/aodh/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n437 : msgid "Remove eventlet from Aodh in favour of threaded approach"
https://opendev.org/openstack/aodh/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n438 : msgstr "Remove eventlet from Aodh in favour of threaded approach"
https://opendev.org/openstack/aodh/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n231 : msgid "Remove eventlet from Aodh in favour of threaded approach"
https://opendev.org/openstack/auto-scaling-sig/src/branch/master/.zuul.yaml#n56 : eventlet_opts:
https://opendev.org/openstack/barbican/src/branch/master/barbican/cmd/keystone_listener.py#n21 : import eventlet
https://opendev.org/openstack/barbican/src/branch/master/barbican/cmd/keystone_listener.py#n29 : eventlet.monkey_patch()
https://opendev.org/openstack/barbican/src/branch/master/barbican/cmd/retry_scheduler.py#n22 : import eventlet
https://opendev.org/openstack/barbican/src/branch/master/barbican/cmd/retry_scheduler.py#n27 : eventlet.monkey_patch()
https://opendev.org/openstack/barbican/src/branch/master/barbican/cmd/worker.py#n22 : import eventlet
https://opendev.org/openstack/barbican/src/branch/master/barbican/cmd/worker.py#n27 : eventlet.monkey_patch()
https://opendev.org/openstack/barbican/src/branch/master/barbican/queue/__init__.py#n84 : executor='eventlet',
https://opendev.org/openstack/barbican/src/branch/master/barbican/queue/__init__.py#n115 : executor='eventlet',
https://opendev.org/openstack/barbican/src/branch/master/barbican/tests/queue/test_retry_scheduler.py#n18 : import eventlet
https://opendev.org/openstack/barbican/src/branch/master/barbican/tests/queue/test_retry_scheduler.py#n28 : eventlet.monkey_patch()
https://opendev.org/openstack/barbican/src/branch/master/requirements.txt#n4 : eventlet>=0.18.2,!=0.18.3,!=0.20.1  # MIT
https://opendev.org/openstack/blazar/src/branch/master/blazar/api/v1/app.py#n16 : import eventlet
https://opendev.org/openstack/blazar/src/branch/master/blazar/api/v1/app.py#n17 : eventlet.monkey_patch(
https://opendev.org/openstack/blazar/src/branch/master/blazar/cmd/api.py#n16 : import eventlet
https://opendev.org/openstack/blazar/src/branch/master/blazar/cmd/api.py#n17 : eventlet.monkey_patch(
https://opendev.org/openstack/blazar/src/branch/master/blazar/cmd/api.py#n23 : from eventlet import wsgi
https://opendev.org/openstack/blazar/src/branch/master/blazar/cmd/api.py#n59 : wsgi.server(eventlet.listen((CONF.host, CONF.port), backlog=500), app)
https://opendev.org/openstack/blazar/src/branch/master/blazar/cmd/manager.py#n16 : import eventlet
https://opendev.org/openstack/blazar/src/branch/master/blazar/cmd/manager.py#n17 : eventlet.monkey_patch()
https://opendev.org/openstack/blazar/src/branch/master/blazar/manager/service.py#n20 : import eventlet
https://opendev.org/openstack/blazar/src/branch/master/blazar/manager/service.py#n162 : event_thread = eventlet.spawn(
https://opendev.org/openstack/blazar/src/branch/master/blazar/monitor/notification_monitor.py#n38 : executor='eventlet'
https://opendev.org/openstack/blazar/src/branch/master/blazar/rpc.py#n46 : executor='eventlet',
https://opendev.org/openstack/blazar/src/branch/master/blazar/tests/manager/test_service.py#n21 : import eventlet
https://opendev.org/openstack/blazar/src/branch/master/blazar/tests/manager/test_service.py#n123 : self.eventlet = eventlet
https://opendev.org/openstack/blazar/src/branch/master/blazar/tests/manager/test_service.py#n286 : self.patch(eventlet, 'spawn')
https://opendev.org/openstack/blazar/src/branch/master/blazar/tests/manager/test_service.py#n352 : spawn = self.patch(eventlet, 'spawn')
https://opendev.org/openstack/blazar/src/branch/master/blazar/tests/manager/test_service.py#n363 : self.patch(eventlet, 'spawn').side_effect = Exception
https://opendev.org/openstack/blazar/src/branch/master/requirements.txt#n11 : eventlet!=0.18.3,!=0.20.1,!=0.21.0,!=0.23.0,!=0.25.0,>=0.18.2 # MIT
https://opendev.org/openstack/ceilometer/src/branch/master/releasenotes/notes/remove-eventlet-6738321434b60c78.yaml#n4 : Remove eventlet from Ceilometer in favour of threaded approach
https://opendev.org/openstack/ceilometer/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n914 : msgid "Remove eventlet from Ceilometer in favour of threaded approach"
https://opendev.org/openstack/ceilometer/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n915 : msgstr "Remove eventlet from Ceilometer in favour of threaded approach"
https://opendev.org/openstack/ceilometer/src/branch/master/releasenotes/source/mitaka.rst#n51 : .. releasenotes/notes/remove-eventlet-6738321434b60c78.yaml @ f24ea44401b8945c9cb8a34b2aedebba3c040691
https://opendev.org/openstack/ceilometer/src/branch/master/releasenotes/source/mitaka.rst#n53 : - Remove eventlet from Ceilometer in favour of threaded approach
https://opendev.org/openstack/ceilometer/src/branch/master/test-requirements.txt#n2 : eventlet>=0.30.1 # MIT
https://opendev.org/openstack/charm-manila/src/branch/master/src/templates/mitaka/logging.conf#n43 : [logger_eventletwsgi]
https://opendev.org/openstack/charm-manila/src/branch/master/src/templates/mitaka/logging.conf#n46 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/charm-manila-ganesha/src/branch/master/src/templates/rocky/logging.conf#n43 : [logger_eventletwsgi]
https://opendev.org/openstack/charm-manila-ganesha/src/branch/master/src/templates/rocky/logging.conf#n46 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/cinder/src/branch/master/cinder/__init__.py#n21 : import eventlet  # noqa
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/api.py#n25 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n30 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n130 : return eventlet.tpool.Proxy(result)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n165 : return eventlet.tpool.Proxy(writer)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n170 : return eventlet.tpool.Proxy(reader)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n192 : The object writer methods must not have any logging calls, as eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n193 : has a bug (https://github.com/eventlet/eventlet/issues/432) that would
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n202 : The object reader methods must not have any logging calls, as eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n203 : has a bug (https://github.com/eventlet/eventlet/issues/432) that would
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n403 : md5 = eventlet.tpool.execute(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n413 : LOG.debug('Calling eventlet.sleep(0)')
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n414 : eventlet.sleep(0)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n620 : shalist = eventlet.tpool.execute(self._calculate_sha, data)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n772 : eventlet.sleep(0)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/chunkeddriver.py#n869 : eventlet.sleep(0)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n55 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n135 : meta_obj = eventlet.tpool.Proxy(rados.Object(self._client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n153 : meta_obj = eventlet.tpool.Proxy(rados.Object(self._client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n166 : meta_obj = eventlet.tpool.Proxy(rados.Object(self._client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n175 : meta_obj = eventlet.tpool.Proxy(rados.Object(self._client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n340 : client = eventlet.tpool.Proxy(self.rados.Rados(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n413 : eventlet.tpool.Proxy(volume.rbd_image).discard(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n417 : eventlet.tpool.Proxy(volume.rbd_image).discard(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n495 : eventlet.tpool.Proxy(self.rbd.RBD()).create(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n519 : base_rbd = eventlet.tpool.Proxy(self.rbd.Image(rados_client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n571 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n597 : eventlet.tpool.Proxy(self.rbd.RBD()).remove(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n625 : if src_name in eventlet.tpool.Proxy(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n630 : src_rbd = eventlet.tpool.Proxy(self.rbd.Image(client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n725 : rbds = eventlet.tpool.Proxy(self.rbd.RBD()).list(client.ioctx)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n743 : base_rbd = eventlet.tpool.Proxy(self.rbd.Image(client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n764 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n791 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n794 : base_rbd = eventlet.tpool.Proxy(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n827 : source_rbd_image = eventlet.tpool.Proxy(volume_file.rbd_image)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1000 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1007 : eventlet.tpool.Proxy(self.rbd.RBD()).create(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1017 : dest_rbd = eventlet.tpool.Proxy(self.rbd.Image(client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1026 : meta_io_proxy = eventlet.tpool.Proxy(rbd_fd)
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1132 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1220 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1236 : src_rbd = eventlet.tpool.Proxy(self.rbd.Image(client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1264 : src_rbd = eventlet.tpool.Proxy(self.rbd.Image(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1276 : self._transfer_data(eventlet.tpool.Proxy(rbd_fd), backup_name,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1294 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1297 : base_image = eventlet.tpool.Proxy(self.rbd.Image(client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1356 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1358 : base_rbd = eventlet.tpool.Proxy(self.rbd.Image(client.ioctx,
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1467 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1500 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(self)) as client:
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/drivers/ceph.py#n1570 : with eventlet.tpool.Proxy(rbd_driver.RADOSClient(
https://opendev.org/openstack/cinder/src/branch/master/cinder/backup/manager.py#n39 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/api.py#n23 : import eventlet  # noqa
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/api.py#n24 : eventlet.monkey_patch()
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/backup.py#n28 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/backup.py#n29 : eventlet.monkey_patch()
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/backup.py#n89 : _semaphore: Union[eventlet.semaphore.Semaphore,
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/scheduler.py#n23 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/scheduler.py#n24 : eventlet.monkey_patch()
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/volume.py#n25 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/volume.py#n26 : import eventlet.tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/volume.py#n33 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/cinder/src/branch/master/cinder/cmd/volume.py#n35 : eventlet.monkey_patch()
https://opendev.org/openstack/cinder/src/branch/master/cinder/image/image_utils.py#n38 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/manager.py#n54 : from eventlet import greenpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/manager.py#n55 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/opts.py#n205 : from cinder.wsgi import eventlet_server as cinder_wsgi_eventletserver
https://opendev.org/openstack/cinder/src/branch/master/cinder/opts.py#n326 : cinder_wsgi_eventletserver.socket_opts,
https://opendev.org/openstack/cinder/src/branch/master/cinder/rpc.py#n164 : executor='eventlet',
https://opendev.org/openstack/cinder/src/branch/master/cinder/scheduler/manager.py#n26 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/scheduler/manager.py#n120 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/scheduler/manager.py#n179 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/ssh_utils.py#n23 : from eventlet import pools
https://opendev.org/openstack/cinder/src/branch/master/cinder/ssh_utils.py#n59 : """A simple eventlet pool to hold ssh connections."""
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/functional/functional_helpers.py#n131 : with mock.patch('eventlet.sleep'):
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/__init__.py#n28 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/__init__.py#n35 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/__init__.py#n37 : eventlet.monkey_patch()
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/api/contrib/test_services.py#n916 : body = {'binary': '*', 'prefix': 'eventlet.', 'level': 'debug'}
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/api/contrib/test_services.py#n970 : body = {'binary': '*', 'prefix': 'eventlet.'}
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/backup/drivers/test_backup_ceph.py#n81 : @mock.patch('eventlet.sleep', spec=True)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/backup/drivers/test_backup_ceph.py#n1048 : mock.patch('eventlet.tpool.Proxy') as mock_proxy:
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/backup/drivers/test_backup_google.py#n29 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/backup/drivers/test_backup_nfs.py#n29 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/backup/drivers/test_backup_s3.py#n28 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/backup/drivers/test_backup_swift.py#n28 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/backup/test_backup.py#n23 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/fake_utils.py#n19 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/scheduler/test_scheduler.py#n74 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/scheduler/test_scheduler.py#n90 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/scheduler/test_scheduler.py#n343 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/scheduler/test_scheduler.py#n358 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/scheduler/test_scheduler.py#n372 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/scheduler/test_scheduler.py#n395 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test.py#n29 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n538 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n701 : @mock.patch('eventlet.tpool.execute')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n867 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n908 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n940 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n974 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n1029 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n1064 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_image_utils.py#n1151 : @mock.patch('eventlet.tpool.Proxy')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_utils.py#n1471 : @mock.patch('eventlet.Semaphore')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/test_utils.py#n1487 : @mock.patch('eventlet.tpool.execute')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/dell_emc/sc/test_sc.py#n17 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/dell_emc/sc/test_sc.py#n253 : self.mock_sleep = self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/dell_emc/sc/test_scapi.py#n20 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/dell_emc/sc/test_scapi.py#n5376 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n23 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n1108 : self.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n1776 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n1797 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n1828 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n1876 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n1924 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2031 : self.mock_object(eventlet, 'spawn')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2038 : eventlet.spawn.assert_called()
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2052 : self.mock_object(eventlet, 'spawn')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2055 : eventlet.spawn.assert_called()
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2057 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2084 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2107 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2129 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2190 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2216 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2250 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2286 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2305 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2331 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2357 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2389 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2421 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2451 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2486 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2521 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2556 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n2787 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3427 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3461 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3518 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3554 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3647 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3680 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3720 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3757 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3783 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3827 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n3950 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4229 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4390 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4429 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4480 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4501 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4516 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4534 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4558 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ds8k_proxy.py#n4578 : @mock.patch.object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ibm_flashsystem.py#n772 : self.sleeppatch = mock.patch('eventlet.greenthread.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/ibm/test_ibm_flashsystem_iscsi.py#n136 : self.sleeppatch = mock.patch('eventlet.greenthread.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/inspur/as13000/test_as13000_driver.py#n24 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/inspur/as13000/test_as13000_driver.py#n1248 : mock_el = self.mock_object(eventlet, 'sleep',
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/inspur/instorage/test_common.py#n21 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/inspur/instorage/test_fc_driver.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/inspur/instorage/test_iscsi_driver.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/inspur/instorage/test_replication.py#n21 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/nexenta/test_nexenta5_jsonrpc.py#n1200 : @mock.patch('eventlet.greenthread.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/synology/test_synology_common.py#n1010 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/synology/test_synology_common.py#n1032 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_kaminario.py#n138 : self.patch('eventlet.sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n23 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1293 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1448 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1513 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1548 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1654 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1872 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1927 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n1983 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/test_qnap.py#n2041 : self.mock_object(eventlet, 'sleep')
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/drivers/toyou/test_acs5000.py#n26 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n28 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3542 : eventlet.tpool._nthreads = 10
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3543 : self.assertListEqual([], eventlet.tpool._threads)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3547 : self.assertEqual(20, eventlet.tpool._nthreads)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3548 : self.assertListEqual([], eventlet.tpool._threads)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3553 : self.assertNotEqual(100, eventlet.tpool._nthreads)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3554 : self.assertListEqual([], eventlet.tpool._threads)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3560 : self.assertEqual(100, eventlet.tpool._nthreads)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3561 : self.assertListEqual([], eventlet.tpool._threads)
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3562 : eventlet.tpool._nthreads = 20
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3589 : t = eventlet.spawn(self.volume.create_volume,
https://opendev.org/openstack/cinder/src/branch/master/cinder/tests/unit/volume/test_volume.py#n3640 : t = eventlet.spawn(self.volume.create_volume, self.context,
https://opendev.org/openstack/cinder/src/branch/master/cinder/utils.py#n48 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/utils.py#n49 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/utils.py#n1007 : """Custom semaphore to workaround eventlet issues with multiprocessing."""
https://opendev.org/openstack/cinder/src/branch/master/cinder/utils.py#n1024 : concurrent_processes: int) -> Union[eventlet.Semaphore,
https://opendev.org/openstack/cinder/src/branch/master/cinder/utils.py#n1035 : return eventlet.Semaphore(limit)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api21.py#n23 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api21.py#n908 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api21.py#n925 : eventlet.sleep(datc.DEFAULT_SNAP_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api21.py#n935 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api21.py#n942 : eventlet.sleep(datc.DEFAULT_SI_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api21.py#n952 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api22.py#n23 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api22.py#n958 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api22.py#n975 : eventlet.sleep(datc.DEFAULT_SNAP_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api22.py#n985 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api22.py#n992 : eventlet.sleep(datc.DEFAULT_SI_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_api22.py#n1002 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/datera/datera_iscsi.py#n19 : from eventlet.green import threading
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/dell_emc/sc/storagecenter_api.py#n21 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/dell_emc/sc/storagecenter_api.py#n200 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/dell_emc/sc/storagecenter_api.py#n2361 : eventlet.sleep(sleep)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/dell_emc/sc/storagecenter_common.py#n15 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/dell_emc/sc/storagecenter_common.py#n1560 : eventlet.sleep(self.failback_timeout)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/hitachi/hbsd_replication.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/hitachi/hbsd_rest_api.py#n23 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/hpe/nimble.py#n30 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/hpe/nimble.py#n247 : eventlet.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/hpe/nimble.py#n1263 : eventlet.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/hpe/nimble.py#n1469 : eventlet.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/hpe/nimble.py#n2118 : eventlet.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_helper.py#n22 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_helper.py#n525 : eventlet.sleep(5)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_helper.py#n568 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_proxy.py#n65 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_proxy.py#n443 : eventlet.spawn(self._wait_flashcopy, src_luns, tgt_luns)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_proxy.py#n768 : eventlet.spawn(self._wait_flashcopy, [src_lun], [tgt_lun])
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_replication.py#n16 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_replication.py#n262 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_restclient.py#n21 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_restclient.py#n218 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/ibm_storage/ds8k_restclient.py#n307 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/storwize_svc/replication.py#n19 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/ibm/storwize_svc/storwize_svc_common.py#n23 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/inspur/as13000/as13000_driver.py#n26 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/inspur/as13000/as13000_driver.py#n789 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/inspur/instorage/instorage_common.py#n23 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/inspur/instorage/replication.py#n19 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/kaminario/kaminario_common.py#n22 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/kaminario/kaminario_common.py#n538 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/kaminario/kaminario_common.py#n736 : eventlet.sleep(1)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/netapp/dataontap/client/api.py#n25 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/netapp/dataontap/client/api.py#n26 : from eventlet import semaphore
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/nexenta/nfs.py#n19 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/nexenta/ns5/jsonrpc.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n27 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n362 : eventlet.sleep(self.TIME_INTERVAL)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n541 : eventlet.sleep(self.TIME_INTERVAL)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n593 : eventlet.sleep(self.TIME_INTERVAL)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n654 : eventlet.sleep(self.TIME_INTERVAL)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n754 : eventlet.sleep(retrySleepTime)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n888 : eventlet.sleep(self.TIME_INTERVAL)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n902 : eventlet.sleep(self.TIME_INTERVAL)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n914 : eventlet.sleep(self.TIME_INTERVAL)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/qnap.py#n2219 : eventlet.sleep(sleepSeconds)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/rbd.py#n28 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/san/san.py#n24 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/synology/synology_common.py#n31 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/synology/synology_common.py#n783 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/synology/synology_common.py#n801 : eventlet.sleep(2)
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/drivers/toyou/acs5000/acs5000_common.py#n25 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/volume_utils.py#n41 : import eventlet
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/volume_utils.py#n42 : from eventlet import tpool
https://opendev.org/openstack/cinder/src/branch/master/cinder/volume/volume_utils.py#n558 : eventlet.sleep(0)
https://opendev.org/openstack/cinder/src/branch/master/cinder/wsgi/eventlet_server.py#n13 : """Methods for working with eventlet WSGI servers."""
https://opendev.org/openstack/cinder/src/branch/master/cinder/zonemanager/drivers/brocade/brcd_fc_zone_client_cli.py#n25 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/zonemanager/drivers/cisco/cisco_fc_san_lookup_service.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/cinder/zonemanager/drivers/cisco/cisco_fc_zone_client_cli.py#n24 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/doc/source/admin/ts-HTTP-bad-req-in-cinder-vol-log.rst#n23 : call eventlet.debug.hub_multiple_reader_prevention(False)
https://opendev.org/openstack/cinder/src/branch/master/doc/source/configuration/block-storage/config-options.rst#n15 : cinder.wsgi.eventlet_server
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/high_availability.rst#n42 : It's good to keep in mind that Cinder threading model is based on eventlet's
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n5 : through using the Python `eventlet <http://eventlet.net/>`_ and
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n9 : switches can only occur when specific eventlet or greenlet library calls are
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n23 : that trigger an eventlet context switch, the long-running thread will block
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n26 : This scenario can be avoided by adding calls to the eventlet sleep method
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n31 : from eventlet import greenthread
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n36 : time module is patched through eventlet.monkey_patch(). To be explicit, we
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n39 : MySQL access and eventlet
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n43 : with eventlet. MySQL-python uses an external C library for accessing the MySQL
https://opendev.org/openstack/cinder/src/branch/master/doc/source/contributor/threading.rst#n44 : database. Since eventlet cannot use monkey-patching to intercept blocking calls
https://opendev.org/openstack/cinder/src/branch/master/etc/cinder/logging_sample.conf#n54 : [logger_eventletwsgi]
https://opendev.org/openstack/cinder/src/branch/master/etc/cinder/logging_sample.conf#n57 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/cinder/src/branch/master/requirements.txt#n7 : eventlet>=0.30.1,!=0.32.0 # MIT
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/liberty/non-eventlet-wsgi-app.rst#n11 : https://blueprints.launchpad.net/cinder/+spec/non-eventlet-wsgi-app.
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/liberty/non-eventlet-wsgi-app.rst#n26 : * Apache/Nginx works better under the real heavy load then eventlet.
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/liberty/non-eventlet-wsgi-app.rst#n43 : Provide WSGI application based on used web-framework instead of eventlet. Leave
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/liberty/non-eventlet-wsgi-app.rst#n44 : eventlet-based WSGI application as a default option and make it configurable.
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/liberty/non-eventlet-wsgi-app.rst#n49 : Leave as is and use eventlet for REST API web serving. Use something like
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/liberty/non-eventlet-wsgi-app.rst#n88 : to Cinder API. By default, Cinder API will use eventlet and no deployer impact
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/liberty/non-eventlet-wsgi-app.rst#n124 : * Make sure usage of eventlet doesn't break WSGI in Nginx/Apache.
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/mitaka/ha-aa-tooz-locks.rst#n73 : regular thread (non-eventlet) to be safe from situations when eventlet
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/ocata/ha-aa-job-distribution.rst#n171 : since we are using an eventlet executor for the RPC server we don't have to
https://opendev.org/openstack/cinder-specs/src/branch/master/specs/pike/dynamic-log-levels.rst#n169 : "eventlet": "ERROR"
https://opendev.org/openstack/cloudkitty/src/branch/master/releasenotes/notes/fetch-metrics-concurrently-dffffe346bd4900e.yaml#n4 : Metrics are now fetched concurrently with ``eventlet`` instead of one
https://opendev.org/openstack/cloudkitty/src/branch/master/releasenotes/notes/replace-eventlet-with-futurist-60f1fe6474a5efcf.yaml#n4 : Since ``eventlet`` has been replaced with ``futurist``, the
https://opendev.org/openstack/cloudkitty/src/branch/master/releasenotes/notes/replace-eventlet-with-futurist-60f1fe6474a5efcf.yaml#n10 : The ``eventlet`` library has been replaced with ``futurist``.
https://opendev.org/openstack/cloudkitty-specs/src/branch/master/specs/train/concurrency.rst#n34 : by making use of eventlet greenthreads. CloudKitty already depends on eventlet,
https://opendev.org/openstack/cloudkitty-specs/src/branch/master/specs/train/concurrency.rst#n37 : dependency on eventlet (which could be replaced by concurrent.futures or
https://opendev.org/openstack/cloudkitty-specs/src/branch/master/specs/train/concurrency.rst#n119 : * Retrieve metrics in eventlet greenthreads.
https://opendev.org/openstack/cloudkitty-specs/src/branch/master/specs/train/concurrency.rst#n149 : * Eventlet documentation: https://eventlet.net/
https://opendev.org/openstack/cyborg/src/branch/master/cyborg/cmd/__init__.py#n16 : import eventlet
https://opendev.org/openstack/cyborg/src/branch/master/cyborg/cmd/__init__.py#n19 : eventlet.monkey_patch()
https://opendev.org/openstack/cyborg/src/branch/master/cyborg/common/rpc.py#n111 : executor='eventlet',
https://opendev.org/openstack/cyborg/src/branch/master/cyborg/tests/base.py#n28 : import eventlet
https://opendev.org/openstack/cyborg/src/branch/master/cyborg/tests/base.py#n140 : with eventlet.Timeout(max_execution_time, False):
https://opendev.org/openstack/cyborg/src/branch/master/cyborg/tests/unit/__init__.py#n24 : import eventlet
https://opendev.org/openstack/cyborg/src/branch/master/cyborg/tests/unit/__init__.py#n29 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/cyborg/src/branch/master/requirements.txt#n8 : eventlet>=0.26.0 # MIT
https://opendev.org/openstack/designate/src/branch/master/designate/backend/impl_nsd4.py#n24 : import eventlet
https://opendev.org/openstack/designate/src/branch/master/designate/backend/impl_nsd4.py#n53 : sock = eventlet.wrap_ssl(
https://opendev.org/openstack/designate/src/branch/master/designate/backend/impl_nsd4.py#n54 : eventlet.connect((self.host, self.port)),
https://opendev.org/openstack/designate/src/branch/master/designate/cmd/__init__.py#n16 : import eventlet
https://opendev.org/openstack/designate/src/branch/master/designate/cmd/__init__.py#n17 : from eventlet.green import ssl
https://opendev.org/openstack/designate/src/branch/master/designate/cmd/__init__.py#n20 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/designate/src/branch/master/designate/cmd/manage.py#n22 : import eventlet
https://opendev.org/openstack/designate/src/branch/master/designate/cmd/manage.py#n32 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/designate/src/branch/master/designate/dnsutils.py#n25 : import eventlet
https://opendev.org/openstack/designate/src/branch/master/designate/dnsutils.py#n137 : to = eventlet.Timeout(xfr_timeout())
https://opendev.org/openstack/designate/src/branch/master/designate/dnsutils.py#n151 : except eventlet.Timeout as t:
https://opendev.org/openstack/designate/src/branch/master/designate/network_api/base.py#n16 : import eventlet.patcher
https://opendev.org/openstack/designate/src/branch/master/designate/network_api/base.py#n28 : reversename = eventlet.patcher.original('dns.reversename')
https://opendev.org/openstack/designate/src/branch/master/designate/rpc.py#n202 : executor='eventlet',
https://opendev.org/openstack/designate/src/branch/master/designate/rpc.py#n217 : executor='eventlet',
https://opendev.org/openstack/designate/src/branch/master/designate/service.py#n25 : import eventlet.debug
https://opendev.org/openstack/designate/src/branch/master/designate/service.py#n154 : eventlet.debug.hub_prevent_multiple_readers(False)
https://opendev.org/openstack/designate/src/branch/master/designate/service.py#n262 : Raises no exception: it's to be run in an eventlet green thread
https://opendev.org/openstack/designate/src/branch/master/designate/tests/__init__.py#n18 : import eventlet
https://opendev.org/openstack/designate/src/branch/master/designate/tests/__init__.py#n21 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/backend/test_nsd4.py#n21 : import eventlet
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/backend/test_nsd4.py#n68 : @mock.patch.object(eventlet, 'connect')
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/backend/test_nsd4.py#n69 : @mock.patch.object(eventlet, 'wrap_ssl')
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/test_dnsutils.py#n26 : import eventlet
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/test_dnsutils.py#n138 : @mock.patch.object(eventlet.Timeout, 'cancel')
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/test_dnsutils.py#n141 : mock_from_xfr.side_effect = eventlet.Timeout()
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/test_rpc.py#n180 : executor='eventlet', serializer=mock.ANY,
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/test_rpc.py#n216 : True, 'target', 'endpoint', executor='eventlet', pool=None,
https://opendev.org/openstack/designate/src/branch/master/designate/tests/unit/test_rpc.py#n227 : True, 'target', 'endpoint', executor='eventlet', pool=None,
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n75 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:346 in run
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n78 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/poll.py:85 in wait
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n81 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/epolls.py:62 in do_poll
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n89 : /usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py:214 in main
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n95 : /usr/local/lib/python2.7/dist-packages/eventlet/event.py:121 in wait
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n98 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:294 in switch
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n103 : /usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py:214 in main
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n109 : /usr/local/lib/python2.7/dist-packages/oslo_messaging/_executors/impl_eventlet.py:96 in _executor_thread
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n163 : /usr/local/lib/python2.7/dist-packages/eventlet/greenio/base.py:326 in recv
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n166 : /usr/local/lib/python2.7/dist-packages/eventlet/greenio/base.py:201 in _trampoline
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n169 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/__init__.py:162 in trampoline
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n172 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:294 in switch
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n204 : /usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py:175 in wait
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n207 : /usr/local/lib/python2.7/dist-packages/eventlet/event.py:121 in wait
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n210 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:294 in switch
https://opendev.org/openstack/designate/src/branch/master/doc/source/contributor/gmr.rst#n312 : eventlet.wsgi.server=WARN
https://opendev.org/openstack/designate/src/branch/master/releasenotes/notes/mini-dns-tcp-c1a15742f5c71739.yaml#n4 : This manifests itself with eventlet not being able to send all the data
https://opendev.org/openstack/designate/src/branch/master/releasenotes/notes/mini-dns-tcp-c1a15742f5c71739.yaml#n7 : - Previous versions of eventlet changed the behaviour of socket.send() to
https://opendev.org/openstack/designate/src/branch/master/releasenotes/notes/mini-dns-tcp-c1a15742f5c71739.yaml#n8 : match socket.sendall(). in eventlet 0.18.0 this changed and it reverted
https://opendev.org/openstack/designate/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n852 : "Previous versions of eventlet changed the behaviour of socket.send() to "
https://opendev.org/openstack/designate/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n853 : "match socket.sendall(). in eventlet 0.18.0 this changed and it reverted to "
https://opendev.org/openstack/designate/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n857 : "Previous versions of eventlet changed the behaviour of socket.send() to "
https://opendev.org/openstack/designate/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n858 : "match socket.sendall(). in eventlet 0.18.0 this changed and it reverted to "
https://opendev.org/openstack/designate/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1230 : "messages. This manifests itself with eventlet not being able to send all the "
https://opendev.org/openstack/designate/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1234 : "messages. This manifests itself with eventlet not being able to send all the "
https://opendev.org/openstack/designate/src/branch/master/requirements.txt#n5 : eventlet>=0.26.1 # MIT
https://opendev.org/openstack/designate-specs/src/branch/master/specs/kilo/guru-meditation-reports.rst#n20 : easier especially when dealing with bugs root in deadlocks between eventlet
https://opendev.org/openstack/devstack/src/branch/master/doc/source/configuration.rst#n361 : use an alternative deployment strategy (e.g. eventlet) for services
https://opendev.org/openstack/election/src/branch/master/candidates/2025.1/Cinder/jobernar@redhat.com#n15 : backup encryption and, quite likely, the removal of eventlet to maintain
https://opendev.org/openstack/election/src/branch/master/candidates/2025.1/Heat/kajinamit@oss.nttdata.com#n10 : also a few global goals like eventlet removal being discussed now, and we aim
https://opendev.org/openstack/election/src/branch/master/candidates/rocky/Requirements/prometheanfire.txt#n17 : 3. Un-cap requirements where possible (stuff like eventlet).
https://opendev.org/openstack/election/src/branch/master/candidates/stein/Requirements/prometheanfire@gentoo.org#n9 : 2. Un-cap requirements where possible (stuff like eventlet).
https://opendev.org/openstack/election/src/branch/master/candidates/train/OpenStackSDK/mordred@inaugust.com#n37 : eventlet or other non-thread based concurrency systems.
https://opendev.org/openstack/etcd3gw/src/branch/master/etcd3gw/utils.py#n78 : _eventlet = _try_import('eventlet')
https://opendev.org/openstack/etcd3gw/src/branch/master/etcd3gw/utils.py#n79 : _patcher = _try_import('eventlet.patcher')
https://opendev.org/openstack/etcd3gw/src/branch/master/etcd3gw/utils.py#n83 : if all((_eventlet, _patcher)) and _patcher.is_monkey_patched('thread'):
https://opendev.org/openstack/futurist/src/branch/master/README.rst#n25 : executed. This library currently adds statistics gathering, an eventlet
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n15 : import eventlet
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n19 : eventlet.sleep(3)
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n25 : eventlet.sleep(1)
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n27 : eventlet.sleep(1)
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n49 : import eventlet
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n53 : eventlet.sleep(3)
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n59 : eventlet.sleep(1)
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/examples.rst#n61 : eventlet.sleep(1)
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/features.rst#n8 : * A :py:class:`.futurist.GreenThreadPoolExecutor` using `eventlet`_ green
https://opendev.org/openstack/futurist/src/branch/master/doc/source/user/features.rst#n33 : .. _eventlet: http://eventlet.net/
https://opendev.org/openstack/futurist/src/branch/master/futurist/_futures.py#n244 : object operate correctly under eventlet)
https://opendev.org/openstack/futurist/src/branch/master/futurist/_futures.py#n322 : and http://eventlet.net/doc/modules/greenpool.html for information on
https://opendev.org/openstack/futurist/src/branch/master/futurist/_green.py#n19 : from eventlet import greenpool
https://opendev.org/openstack/futurist/src/branch/master/futurist/_green.py#n20 : from eventlet import patcher as greenpatcher
https://opendev.org/openstack/futurist/src/branch/master/futurist/_green.py#n21 : from eventlet import queue as greenqueue
https://opendev.org/openstack/futurist/src/branch/master/futurist/_green.py#n23 : from eventlet.green import threading as greenthreading
https://opendev.org/openstack/futurist/src/branch/master/futurist/_utils.py#n26 : import eventlet as _eventlet  # noqa
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_executors.py#n17 : from eventlet.green import threading as green_threading
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_periodics.py#n19 : import eventlet
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_periodics.py#n20 : from eventlet.green import threading as green_threading
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_periodics.py#n51 : t = eventlet.spawn(run_what, *args, **kwargs)
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_periodics.py#n81 : 'sleep': eventlet.sleep,
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_periodics.py#n583 : eventlet.sleep(2.0)
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n15 : import eventlet
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n27 : def mini_delay(use_eventlet_sleep=False):
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n28 : if use_eventlet_sleep:
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n29 : eventlet.sleep(0.1)
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n38 : 'executor_kwargs': {}, 'use_eventlet_sleep': False}),
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n41 : 'use_eventlet_sleep': True}),
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n43 : 'executor_kwargs': {}, 'use_eventlet_sleep': True}),
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n45 : 'executor_kwargs': {}, 'use_eventlet_sleep': False}),
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n47 : 'executor_kwargs': {}, 'use_eventlet_sleep': False}),
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n63 : mini_delay, use_eventlet_sleep=self.use_eventlet_sleep))
https://opendev.org/openstack/futurist/src/branch/master/futurist/tests/test_waiters.py#n76 : mini_delay, use_eventlet_sleep=self.use_eventlet_sleep))
https://opendev.org/openstack/futurist/src/branch/master/futurist/waiters.py#n31 : from eventlet.green import threading as greenthreading
https://opendev.org/openstack/futurist/src/branch/master/futurist/waiters.py#n58 : def _ensure_eventlet(func):
https://opendev.org/openstack/futurist/src/branch/master/futurist/waiters.py#n59 : """Decorator that verifies we have the needed eventlet components."""
https://opendev.org/openstack/futurist/src/branch/master/futurist/waiters.py#n174 : @_ensure_eventlet
https://opendev.org/openstack/futurist/src/branch/master/futurist/waiters.py#n196 : @_ensure_eventlet
https://opendev.org/openstack/futurist/src/branch/master/test-requirements.txt#n2 : eventlet>=0.18.2 # MIT
https://opendev.org/openstack/glance/src/branch/master/doc/source/admin/apache-httpd.rst#n5 : In short Glance will not operate properly if tried to be ran without eventlet
https://opendev.org/openstack/glance/src/branch/master/doc/source/admin/controllingservers.rst#n82 : 2011-04-13 14:50:12    DEBUG [eventlet.wsgi.server] (21354) wsgi starting up on http://65.114.169.29:9292/
https://opendev.org/openstack/glance/src/branch/master/glance/api/common.py#n45 : if 'eventlet.posthooks' in response.request.environ:
https://opendev.org/openstack/glance/src/branch/master/glance/api/common.py#n46 : response.request.environ['eventlet.posthooks'].append(
https://opendev.org/openstack/glance/src/branch/master/glance/async_/__init__.py#n158 : either "eventlet" or "native"
https://opendev.org/openstack/glance/src/branch/master/glance/async_/__init__.py#n166 : elif thread_type == 'eventlet':
https://opendev.org/openstack/glance/src/branch/master/glance/async_/__init__.py#n171 : '(must be "native" or "eventlet")') % (thread_type))
https://opendev.org/openstack/glance/src/branch/master/glance/async_/taskflow_executor.py#n33 : _deprecated_opt = cfg.DeprecatedOpt('eventlet_executor_pool_size',
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/api.py#n27 : import eventlet
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/api.py#n32 : eventlet.patcher.monkey_patch(os=False)
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/api.py#n34 : eventlet.patcher.monkey_patch()
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/api.py#n91 : wsgi.set_eventlet_hub()
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/api.py#n106 : glance.async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/cache_prefetcher.py#n53 : glance.async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/scrubber.py#n25 : import eventlet
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/scrubber.py#n30 : eventlet.patcher.monkey_patch(os=False)
https://opendev.org/openstack/glance/src/branch/master/glance/cmd/scrubber.py#n32 : eventlet.patcher.monkey_patch()
https://opendev.org/openstack/glance/src/branch/master/glance/common/client.py#n29 : from eventlet.green import socket
https://opendev.org/openstack/glance/src/branch/master/glance/common/client.py#n30 : from eventlet.green import ssl
https://opendev.org/openstack/glance/src/branch/master/glance/common/utils.py#n26 : from eventlet import sleep
https://opendev.org/openstack/glance/src/branch/master/glance/common/utils.py#n29 : from eventlet.green import socket
https://opendev.org/openstack/glance/src/branch/master/glance/common/utils.py#n98 : iteration. This can prevent eventlet thread starvation.
https://opendev.org/openstack/glance/src/branch/master/glance/common/utils.py#n115 : after each read. This can prevent eventlet thread starvation.
https://opendev.org/openstack/glance/src/branch/master/glance/common/utils.py#n181 : An eventlet thread friendly class for reading in image data.
https://opendev.org/openstack/glance/src/branch/master/glance/common/utils.py#n185 : one image being uploaded/downloaded this prevents eventlet thread
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n34 : from eventlet.green import socket
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n35 : import eventlet.greenio
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n36 : import eventlet.wsgi
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n147 : eventlet_opts = [
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n268 : CONF.register_opts(eventlet_opts)
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n341 : sock = eventlet.listen(bind_addr,
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n347 : eventlet.sleep(0.1)
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n357 : def set_eventlet_hub():
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n359 : eventlet.hubs.use_hub('poll')
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n362 : eventlet.hubs.use_hub('selects')
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n364 : msg = _("eventlet 'poll' nor 'selects' hubs are available "
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n384 : def get_asynchronous_eventlet_pool(size=1000):
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n385 : """Return eventlet pool to caller.
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n390 : :param size: eventlet pool size
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n391 : :returns: eventlet pool
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n395 : pool = eventlet.GreenPool(size=size)
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n410 : self._logger = logging.getLogger("eventlet.wsgi.server")
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n492 : return get_asynchronous_eventlet_pool(size=self.threads)
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n501 : eventlet.wsgi.MAX_HEADER_LINE = CONF.max_header_line
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n531 : eventlet.wsgi.HttpProtocol.default_request_version = "HTTP/1.0"
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n534 : eventlet.wsgi.server(self.sock,
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n561 : eventlet.wsgi.server(sock, application, custom_pool=self.pool,
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n681 : eventlet.greenio.shutdown_safe(self.sock)
https://opendev.org/openstack/glance/src/branch/master/glance/common/wsgi.py#n689 : eventlet.wsgi.is_accepting = False
https://opendev.org/openstack/glance/src/branch/master/glance/domain/__init__.py#n503 : eventlet_deprecation_warned = False
https://opendev.org/openstack/glance/src/branch/master/glance/domain/__init__.py#n518 : if task_executor == 'eventlet':
https://opendev.org/openstack/glance/src/branch/master/glance/domain/__init__.py#n521 : if not TaskExecutorFactory.eventlet_deprecation_warned:
https://opendev.org/openstack/glance/src/branch/master/glance/domain/__init__.py#n522 : msg = _LW("The `eventlet` executor has been deprecated. "
https://opendev.org/openstack/glance/src/branch/master/glance/domain/__init__.py#n525 : TaskExecutorFactory.eventlet_deprecation_warned = True
https://opendev.org/openstack/glance/src/branch/master/glance/image_cache/drivers/common.py#n23 : from eventlet import sleep
https://opendev.org/openstack/glance/src/branch/master/glance/image_cache/drivers/common.py#n24 : from eventlet import timeout
https://opendev.org/openstack/glance/src/branch/master/glance/image_cache/drivers/common.py#n42 : SQLite DB Connection handler that plays well with eventlet,
https://opendev.org/openstack/glance/src/branch/master/glance/locale/de/LC_MESSAGES/glance.po#n1727 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/en_GB/LC_MESSAGES/glance.po#n4899 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/en_GB/LC_MESSAGES/glance.po#n4900 : msgstr "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/es/LC_MESSAGES/glance.po#n1568 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/fr/LC_MESSAGES/glance.po#n1591 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/it/LC_MESSAGES/glance.po#n1581 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/ja/LC_MESSAGES/glance.po#n1744 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/ja/LC_MESSAGES/glance.po#n1746 : "このプラットフォームでは eventlet の「poll」ハブも「selects」ハブも使用できま"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/ko_KR/LC_MESSAGES/glance.po#n1559 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/ko_KR/LC_MESSAGES/glance.po#n1560 : msgstr "이 플랫폼에서 eventlet 'poll'이나 'selects' 허브를 모두 사용할 수 없음"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/pt_BR/LC_MESSAGES/glance.po#n1555 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/pt_BR/LC_MESSAGES/glance.po#n1557 : "nem o hub 'poll' nem o 'selects' do eventlet estão disponíveis nesta "
https://opendev.org/openstack/glance/src/branch/master/glance/locale/ru/LC_MESSAGES/glance.po#n1527 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/ru/LC_MESSAGES/glance.po#n1530 : "библиотеки eventlet"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/tr_TR/LC_MESSAGES/glance.po#n1351 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/tr_TR/LC_MESSAGES/glance.po#n1353 : "bu platformda eventlet 'poll' ya da 'selects' havuzları kullanılabilirdir"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/zh_CN/LC_MESSAGES/glance.po#n1490 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/zh_CN/LC_MESSAGES/glance.po#n1491 : msgstr "在此平台上，eventlet“poll”和“selects”主数据中心都不可用"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/zh_TW/LC_MESSAGES/glance.po#n1430 : msgid "eventlet 'poll' nor 'selects' hubs are available on this platform"
https://opendev.org/openstack/glance/src/branch/master/glance/locale/zh_TW/LC_MESSAGES/glance.po#n1431 : msgstr "此平台上無法使用 eventlet 'poll' 及 'selects' 中心。"
https://opendev.org/openstack/glance/src/branch/master/glance/opts.py#n51 : glance.common.wsgi.eventlet_opts,
https://opendev.org/openstack/glance/src/branch/master/glance/scrubber.py#n19 : import eventlet
https://opendev.org/openstack/glance/src/branch/master/glance/scrubber.py#n321 : self.event = eventlet.event.Event()
https://opendev.org/openstack/glance/src/branch/master/glance/scrubber.py#n323 : self.daemon_pool = eventlet.greenpool.GreenPool(threads)
https://opendev.org/openstack/glance/src/branch/master/glance/scrubber.py#n338 : eventlet.spawn_after(self.wakeup_time, self._run, application)
https://opendev.org/openstack/glance/src/branch/master/glance/scrubber.py#n349 : self.pool = eventlet.greenpool.GreenPool(CONF.scrub_pool_size)
https://opendev.org/openstack/glance/src/branch/master/glance/tests/__init__.py#n19 : import eventlet
https://opendev.org/openstack/glance/src/branch/master/glance/tests/__init__.py#n24 : eventlet.patcher.monkey_patch(os=False)
https://opendev.org/openstack/glance/src/branch/master/glance/tests/__init__.py#n26 : eventlet.patcher.monkey_patch()
https://opendev.org/openstack/glance/src/branch/master/glance/tests/__init__.py#n30 : glance.async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/functional/__init__.py#n73 : glance.async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/functional/__init__.py#n426 : default_log_levels = eventlet.wsgi.server=DEBUG,stevedore.extension=INFO
https://opendev.org/openstack/glance/src/branch/master/glance/tests/functional/__init__.py#n608 : default_log_levels = eventlet.wsgi.server=DEBUG,stevedore.extension=INFO
https://opendev.org/openstack/glance/src/branch/master/glance/tests/functional/test_client_exceptions.py#n21 : import eventlet.patcher
https://opendev.org/openstack/glance/src/branch/master/glance/tests/functional/test_client_exceptions.py#n32 : eventlet.patcher.monkey_patch(socket=True)
https://opendev.org/openstack/glance/src/branch/master/glance/tests/functional/test_client_redirects.py#n20 : import eventlet.patcher
https://opendev.org/openstack/glance/src/branch/master/glance/tests/functional/test_client_redirects.py#n31 : eventlet.patcher.monkey_patch(socket=True)
https://opendev.org/openstack/glance/src/branch/master/glance/tests/integration/v2/base.py#n142 : 'eventlet.wsgi.server=DEBUG'
https://opendev.org/openstack/glance/src/branch/master/glance/tests/integration/v2/test_tasks_api.py#n18 : import eventlet
https://opendev.org/openstack/glance/src/branch/master/glance/tests/integration/v2/test_tasks_api.py#n90 : eventlet.sleep(0.05)
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/api/test_cmd.py#n75 : mock_set_model.assert_called_once_with('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/async_/test_async.py#n218 : def test_eventlet_model(self):
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/async_/test_async.py#n268 : def test_set_threadpool_model_eventlet(self):
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/async_/test_async.py#n269 : glance.async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/async_/test_async.py#n289 : 'eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/async_/test_async.py#n293 : glance.async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/async_/test_taskflow_executor.py#n38 : glance.async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/common/test_wsgi.py#n25 : import eventlet.patcher
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/common/test_wsgi.py#n564 : """Ensure the wsgi thread pool is an eventlet.greenpool.GreenPool."""
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/common/test_wsgi.py#n566 : self.assertIsInstance(actual, eventlet.greenpool.GreenPool)
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/common/test_wsgi.py#n591 : with mock.patch.object(eventlet.wsgi,
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/common/test_wsgi.py#n741 : 'glance.common.wsgi.eventlet.listen',
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/common/test_wsgi.py#n762 : 'glance.common.wsgi.eventlet.listen',
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/common/test_wsgi.py#n770 : 'glance.common.wsgi.eventlet.listen',
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/test_domain.py#n614 : def test_new_task_eventlet_backwards_compatibility(self):
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/test_domain.py#n617 : self.config(task_executor='eventlet', group='task')
https://opendev.org/openstack/glance/src/branch/master/glance/tests/unit/test_image_cache.py#n696 : async_.set_threadpool_model('eventlet')
https://opendev.org/openstack/glance/src/branch/master/releasenotes/notes/pike-rc-1-a5d3f6e8877b52c6.yaml#n22 : * Bug 1655727_: Invoke monkey_patching early enough for eventlet 0.20.1
https://opendev.org/openstack/glance/src/branch/master/releasenotes/notes/ussuri-final-b377a21508ada060.yaml#n18 : Bug 1863021_: eventlet monkey patch results in assert len(_active) == 1 AssertionError
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n995 : msgid "Bug 1655727_: Invoke monkey_patching early enough for eventlet 0.20.1"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n996 : msgstr "Bug 1655727_: Invoke monkey_patching early enough for eventlet 0.20.1"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1038 : msgid "Bug 1744824_: Fix py27 eventlet issue <0.22.0"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1039 : msgstr "Bug 1744824_: Fix py27 eventlet issue <0.22.0"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1172 : "Bug 1863021_: eventlet monkey patch results in assert len(_active) == 1 "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1175 : "Bug 1863021_: eventlet monkey patch results in assert len(_active) == 1 "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1501 : "eventlet.  As a result, the team backported a fix from eventlet 0.22.0 to "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1502 : "the Glance code.  (The Ocata release of OpenStack uses eventlet 0.19.0.)  "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1506 : "eventlet.  As a result, the team backported a fix from eventlet 0.22.0 to "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1507 : "the Glance code.  (The Ocata release of OpenStack uses eventlet 0.19.0.)  "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1512 : "eventlet.  As a result, the team backported a fix from eventlet 0.22.0 to "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1513 : "the Glance code.  (The Pike release of OpenStack uses eventlet 0.20.0.)  See "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1517 : "eventlet.  As a result, the team backported a fix from eventlet 0.22.0 to "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1518 : "the Glance code.  (The Pike release of OpenStack uses eventlet 0.20.0.)  See "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n493 : msgid "Bug 1655727_: Invoke monkey_patching early enough for eventlet 0.20.1"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n494 : msgstr "Bug 1655727_: eventlet 0.20.1 に十分間に合う monkey_patching 呼び出し"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n514 : "eventlet.  As a result, the team backported a fix from eventlet 0.22.0 to "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n515 : "the Glance code.  (The Ocata release of OpenStack uses eventlet 0.19.0.)  "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n518 : "Python 2.7 配布パッケージの変更により、Glance での eventlet の使用が影響を受"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n519 : "けました。その結果、チームは eventlet 0.22.0から Glance のコードに修正をバッ"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n520 : "クポートしました。OpenStack の Ocata リリースでは、eventlet 0.19.0 が使用され"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n525 : "eventlet.  As a result, the team backported a fix from eventlet 0.22.0 to "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n526 : "the Glance code.  (The Pike release of OpenStack uses eventlet 0.20.0.)  See "
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n529 : "Python 2.7 配布パッケージの変更により、Glance での eventlet の使用が影響を受"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n530 : "けました。その結果、チームは eventlet 0.22.0から Glance のコードに修正をバッ"
https://opendev.org/openstack/glance/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n531 : "クポートしました。OpenStack の Pike リリースでは、eventlet 0.20.0 が使用され"
https://opendev.org/openstack/glance/src/branch/master/requirements.txt#n6 : eventlet>=0.33.3 # MIT
https://opendev.org/openstack/glance-specs/src/branch/master/specs/kilo/sighup-conf-reload.rst#n47 : - Race conditions: Launcher does not shutdown eventlet cleanly, existing
https://opendev.org/openstack/glance-specs/src/branch/master/specs/kilo/taskflow-integration.rst#n23 : Glance currently comes with an eventlet executor which is not easily extensible
https://opendev.org/openstack/glance-specs/src/branch/master/specs/kilo/taskflow-integration.rst#n31 : executor API. This executor will route the tasks to the eventlet executor of taskflow.
https://opendev.org/openstack/glance-specs/src/branch/master/specs/kilo/taskflow-integration.rst#n32 : We will be using the `Taskflow Green Thread Pool Executor <http://docs.openstack.org/developer/taskflow/types.html#taskflow.types.futures.GreenThreadPoolExecutor>`_ which ensures that eventlet green threads are used when
https://opendev.org/openstack/glance-specs/src/branch/master/specs/kilo/taskflow-integration.rst#n34 : The initial implementation should provide the same result as the eventlet executor
https://opendev.org/openstack/glance-specs/src/branch/master/specs/kilo/taskflow-integration.rst#n41 : Use the existing eventlet executor. This approach is likely to become rewriting
https://opendev.org/openstack/glance-specs/src/branch/master/specs/liberty/approved/image-signing-and-verification-support.rst#n88 : However, eventlet.wsgi.Input file-like object that represents the image data
https://opendev.org/openstack/glance-specs/src/branch/master/specs/liberty/approved/scrub-images-in-parallel.rst#n119 : - Use eventlet to parallelize image scrubbing
https://opendev.org/openstack/glance-specs/src/branch/master/specs/liberty/approved/scrub-images-in-parallel.rst#n120 : - Monkey-patch required modules for eventlet
https://opendev.org/openstack/glance-specs/src/branch/master/specs/stein/implemented/glance/windows-support.rst#n50 : * avoid having eventlet monkey-patch the os module as this will cause
https://opendev.org/openstack/glance-specs/src/branch/master/specs/stein/implemented/glance/windows-support.rst#n67 : IIS will not be supported initially, using eventlet wsgi instead (which happens
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/_drivers/rbd.py#n25 : from eventlet import tpool
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/_drivers/rbd.py#n28 : from oslo_utils import eventletutils
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/_drivers/rbd.py#n289 : if eventletutils.is_monkey_patched('thread'):
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/_drivers/s3.py#n35 : import eventlet
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/_drivers/s3.py#n713 : pool = eventlet.greenpool.GreenPool(size=pool_size)
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/backend.py#n156 : Store where the client library relies on eventlet GreenSockets, in which
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/common/utils.py#n29 : from eventlet import sleep
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/common/utils.py#n83 : iteration. This can prevent eventlet thread starvation.
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/common/utils.py#n100 : after each read. This can prevent eventlet thread starvation.
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/common/utils.py#n128 : An eventlet thread friendly class for reading in image data.
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/common/utils.py#n132 : one image being uploaded/downloaded this prevents eventlet thread
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/tests/unit/test_rbd_store.py#n729 : @mock.patch('oslo_utils.eventletutils.is_monkey_patched')
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/tests/unit/test_rbd_store.py#n760 : @mock.patch('oslo_utils.eventletutils.is_monkey_patched')
https://opendev.org/openstack/glance_store/src/branch/master/glance_store/tests/unit/test_rbd_store.py#n785 : @mock.patch('oslo_utils.eventletutils.is_monkey_patched')
https://opendev.org/openstack/glance_store/src/branch/master/requirements.txt#n7 : eventlet!=0.18.3,!=0.20.1,>=0.18.2 # MIT
https://opendev.org/openstack/governance/src/branch/master/goals/completed/pike/python35.rst#n372 : - Glance is affected by the eventlet ssl-handshake-drop problem in py35
https://opendev.org/openstack/governance/src/branch/master/goals/completed/pike/python35.rst#n374 : - Fix will have to occur in eventlet (not sure that will actually happen)
https://opendev.org/openstack/governance/src/branch/master/goals/completed/pike/python35.rst#n377 : named 'glance-eventlet-ssl-handshake-broken-py35' so that it's obvious
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n58 : Per `the docs <https://github.com/eventlet/eventlet/blob/master/doc/testing.rst#standard-li>`_,
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n88 : subtly incompatible with eventlet's expectations. To get the Eventlet test
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n91 : it <https://github.com/eventlet/eventlet/pull/823/files#diff-029df1ae9b7431e9cdd>`_.
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n208 : .. _on-eventlet:
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n215 : <https://eventlet.readthedocs.io/en/latest/patching.html#greening-the-world>`_,
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n216 : and `greenthread <https://eventlet.readthedocs.io/en/latest/modules/greenthread.html>`.
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n221 : <https://eventlet.readthedocs.io/en/latest/design_patterns.html>`_:
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n241 : Celery and Gunicorn use eventlet.
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n390 : `Eventlet patterns <https://eventlet.readthedocs.io/en/latest/design_patterns.html>`_.
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n467 : Even if eventlet is ill, Greenlet is healthy. Eventlet depends on Greenlet.
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n557 : <https://eventlet.readthedocs.io/en/latest/asyncio/compatibility.html#asyncio-compatibility>`_
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n703 : design patterns, server, client, dispatch (see :ref:`on-eventlet`).
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n712 : | 1. **Server**       | eventlet.GreenPool,            | aiohttp.web.Application,       |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n713 : |                     | eventlet.listen,               | async (for|with), await        |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n714 : |                     | eventlet.green.socket,         | http.server.HTTPServer,        |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n715 : |                     | eventlet.green.http.server,    | http.server.TreadingHTTPServer |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n716 : |                     | eventlet.green.*Server,        | asyncio.start_server()         |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n717 : |                     | eventlet.websocket,            | StreamReader, StreamWriter,    |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n718 : |                     | eventlet.wsgi                  | asyncio.open_connection(),     |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n721 : | 2. **Client**       | eventlet.green.urllib*,        | asyncio.run(),                 |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n722 : |                     | eventlet.greenpool             | aiohttp.ClientSession,         |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n728 : | 3. **Dispatch**     | eventlet.listen,               | asyncio.Future,                |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n729 : |                     | eventlet.GreenPile             | futurist.Future,               |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n768 : asynchronous or not. By example code using ``eventlet.tpool`` can be replaced
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n798 : | 1. **coroutines**   | eventlet.GreenPool,            | async def, async with,         |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n799 : |                     | eventlet.tpool,                | async for, await, awaitlet*    |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n800 : |                     | eventlet.spawn,                |                                |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n801 : |                     | eventlet.spawn_n,              |                                |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n802 : |                     | eventlet.spawn_after           |                                |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n804 : | 2. **event loop**   | eventlet.greenthread.spawn*    | asyncio.run(),                 |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n811 : | 4. **Tasks**        | eventlet.GreenPool.spawn,      | asyncio.Task,                  |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n812 : |                     | eventlet.pools                 | asyncio.create_task()          |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n814 : | 5. **Subprocess &** | eventlet.GreenPool.spawn,      | run_in_executor(),             |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n815 : |    **threads:**     | eventlet.greenthread.spawn*    | asyncio.subprocess,            |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n816 : |                     | eventlet.tpool,                | cotyledon.Service,             |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n817 : |                     | eventlet.spawn,                | futurist.Future,               |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n818 : |                     | eventlet.spawn_n,              | concurrent.futures.Executor    |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n819 : |                     | eventlet.spawn_after           | threading.Thread,              |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n822 : | 6. **Tools**        | eventlet.green.Queue           | asyncio.Queue, queue.Queue,    |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n823 : |                     | eventlet.lock                  | asyncio.Lock, threading.Lock   |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n824 : |                     | eventlet.timeout               | asyncio.timeout, threading..., |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n825 : |                     | eventlet.semaphore             | asyncio.Semaphore,             |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n831 : | 8. **Network**      | eventlet.green.SocketServer    | Protocol                       |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n834 : | 9. **Network**      | eventlet.green.BaseHTTPServer, | StreamReader, StreamWriter,    |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n835 : | **(streams):**      | eventlet.green.httplib         | asyncio.open_connection(),     |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n836 : |                     | eventlet.websocket             | asyncio.start_server(),        |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n837 : |                     | eventlet.wsgi                  | http.server.HTTPServer,        |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n838 : |                     | eventlet.support.greendns      | http.server.TreadingHTTPServer |
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n843 : ``eventlet.patcher``, ``eventlet.hubs``, who have no meaning outside of the
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n845 : representations of third party modules like ``eventlet.zmq``.
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n848 : many tiers, depending on their usages. By example the ``eventlet.tpool``
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n962 : (at least `0.35.0 <https://github.com/eventlet/eventlet/releases/tag/v0.35.0>`_).
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n966 : can't live together in the same process <https://github.com/eventlet/eventlet/issues/673#issuecomment-740429872>`_.
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n971 : hub <https://eventlet.readthedocs.io/en/latest/migration.html#step-1-switch-to-the-asyncio-hub>`_
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n976 : As `the Asyncio hub was added within Eventlet 0.35.0 <https://github.com/eventlet/eventlet/releases/tag/v0.35.0>`_,
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1077 : https://github.com/eventlet/eventlet/issues/824
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1080 : https://github.com/eventlet/eventlet/issues/824#issuecomment-1853128741
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1088 : * https://github.com/eventlet/eventlet/pull/827
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1089 : * https://github.com/eventlet/eventlet/pull/831
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1090 : * https://github.com/eventlet/eventlet/pull/832
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1094 : * https://github.com/eventlet/eventlet/pull/817
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1095 : * https://github.com/eventlet/eventlet/pull/847
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1096 : * https://github.com/eventlet/eventlet/pull/854
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1100 : * https://github.com/eventlet/eventlet/issues/842
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1101 : * https://github.com/eventlet/eventlet/issues/861
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1102 : * https://pypi.org/project/eventlet/0.34.1/
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1103 : * https://pypi.org/project/eventlet/0.34.2/
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1155 : * https://github.com/eventlet/eventlet/issues/868
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1159 : * https://github.com/eventlet/eventlet/issues/869
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1160 : * https://eventlet.readthedocs.io/en/latest/asyncio/migration.html#migration-guide
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1429 : eventlet-removal
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1458 : - `Replace eventlet + monkey-patching with threads, by Joshua Harlow <https://review.openstack.org/#/c/156711/>`_
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1468 : - https://code.launchpad.net/~termie/nova/eventlet_merge/+merge/43383
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1487 : * https://eventlet.readthedocs.io/en/latest/modules/debug.html#eventlet.debug.hub_prevent_multiple_readers
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1497 : * https://github.com/eventlet/eventlet/issues/874
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1498 : * https://github.com/eventlet/eventlet/issues/432
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1539 : - https://github.com/eventlet/eventlet/issues/824
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1540 : - https://github.com/eventlet/eventlet/issues/824#issuecomment-1853128741
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1541 : - https://github.com/eventlet/eventlet/pull/827
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1542 : - https://github.com/eventlet/eventlet/pull/831
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1543 : - https://github.com/eventlet/eventlet/pull/832
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1544 : - https://github.com/eventlet/eventlet/pull/817
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1545 : - https://github.com/eventlet/eventlet/pull/847
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1546 : - https://github.com/eventlet/eventlet/pull/854
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1547 : - https://github.com/eventlet/eventlet/issues/842
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1548 : - https://github.com/eventlet/eventlet/issues/861
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1549 : - https://pypi.org/project/eventlet/0.34.1/
https://opendev.org/openstack/governance/src/branch/master/goals/proposed/remove-eventlet.rst#n1550 : - https://pypi.org/project/eventlet/0.34.2/
https://opendev.org/openstack/governance/src/branch/master/reference/legacy.yaml#n1197 : deb-python-aioeventlet:
https://opendev.org/openstack/governance/src/branch/master/reference/legacy.yaml#n1199 : - openstack/deb-python-aioeventlet
https://opendev.org/openstack/governance/src/branch/master/reference/legacy.yaml#n1323 : deb-python-eventlet:
https://opendev.org/openstack/governance/src/branch/master/reference/legacy.yaml#n1325 : - openstack/deb-python-eventlet
https://opendev.org/openstack/hacking/src/branch/master/HACKING.rst#n96 : import eventlet
https://opendev.org/openstack/hacking/src/branch/master/test-requirements.txt#n17 : eventlet!=0.18.3,!=0.20.1,>=0.18.2 # MIT
https://opendev.org/openstack/heat/src/branch/master/.zuul.yaml#n63 : eventlet_opts:
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/all.py#n21 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/all.py#n22 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/all.py#n65 : threads.append(eventlet.spawn(launch_func, **kwargs))
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/api.py#n21 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/api.py#n22 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/api_cfn.py#n23 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/api_cfn.py#n24 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/engine.py#n23 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/cmd/engine.py#n24 : eventlet.monkey_patch()
https://opendev.org/openstack/heat/src/branch/master/heat/common/config.py#n17 : from eventlet.green import socket
https://opendev.org/openstack/heat/src/branch/master/heat/common/messaging.py#n16 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/common/messaging.py#n98 : eventlet.monkey_patch(time=True)
https://opendev.org/openstack/heat/src/branch/master/heat/common/messaging.py#n129 : executor='eventlet',
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n28 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n29 : from eventlet.green import socket
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n30 : from eventlet.green import ssl
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n31 : import eventlet.greenio
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n32 : import eventlet.wsgi
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n144 : wsgi_elt_group = cfg.OptGroup('eventlet_opts')
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n159 : yield 'eventlet_opts', wsgi_elt_opts
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n199 : sock = eventlet.listen(bind_addr,
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n205 : eventlet.sleep(0.1)
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n219 : self._logger = logging.getLogger("eventlet.wsgi.server")
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n253 : eventlet.wsgi.MAX_HEADER_LINE = self.conf.max_header_line
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n267 : self.pool = eventlet.GreenPool(size=self.threads)
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n280 : self.readpipe = eventlet.greenio.GreenPipe(rfd, 'r')
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n302 : eventlet.greenio.shutdown_safe(self.sock)
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n456 : eventlet.wsgi.is_accepting = False
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n496 : eventlet.wsgi.is_accepting = False
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n502 : eventlet.wsgi.HttpProtocol.default_request_version = "HTTP/1.0"
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n503 : eventlet.hubs.use_hub('poll')
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n504 : eventlet.patcher.monkey_patch(all=False, socket=True)
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n505 : self.pool = eventlet.GreenPool(size=self.threads)
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n506 : socket_timeout = cfg.CONF.eventlet_opts.client_socket_timeout or None
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n511 : eventlet.spawn_n(self._pipe_watcher)
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n514 : eventlet.wsgi.server(
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n521 : keepalive=cfg.CONF.eventlet_opts.wsgi_keep_alive,
https://opendev.org/openstack/heat/src/branch/master/heat/common/wsgi.py#n531 : eventlet.wsgi.server(sock, application,
https://opendev.org/openstack/heat/src/branch/master/heat/engine/check_resource.py#n16 : import eventlet.queue
https://opendev.org/openstack/heat/src/branch/master/heat/engine/check_resource.py#n370 : except eventlet.queue.Empty:
https://opendev.org/openstack/heat/src/branch/master/heat/engine/constraint/common_constraints.py#n15 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/engine/constraint/common_constraints.py#n30 : eventlet.sleep(value)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/resources/openstack/heat/test_resource.py#n15 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/engine/resources/openstack/heat/test_resource.py#n223 : eventlet.sleep(1)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/resources/openstack/heat/test_resource.py#n246 : eventlet.sleep(self.properties[self.ATTR_WAIT_SECS])
https://opendev.org/openstack/heat/src/branch/master/heat/engine/resources/openstack/nova/server_network_mixin.py#n16 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/engine/resources/openstack/nova/server_network_mixin.py#n622 : eventlet.sleep(1)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/scheduler.py#n17 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/engine/scheduler.py#n147 : eventlet.sleep(wait_time)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n25 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n259 : eventlet.sleep()
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n268 : self._queue = eventlet.queue.LightQueue(1)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n286 : eventlet.sleep(0)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n294 : except eventlet.queue.Empty:
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n875 : msg_queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n1061 : msg_queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/heat/src/branch/master/heat/engine/service.py#n1522 : eventlet.sleep(1.0)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/stack.py#n17 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/engine/stack.py#n987 : eventlet.sleep(0)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/stack.py#n1513 : eventlet.sleep(1)
https://opendev.org/openstack/heat/src/branch/master/heat/engine/stack.py#n1836 : except eventlet.queue.Empty:
https://opendev.org/openstack/heat/src/branch/master/heat/engine/worker.py#n16 : import eventlet.queue
https://opendev.org/openstack/heat/src/branch/master/heat/engine/worker.py#n185 : msg_queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/heat/src/branch/master/heat/engine/worker.py#n254 : eventlet.sleep(wait)
https://opendev.org/openstack/heat/src/branch/master/heat/tests/api/test_wsgi.py#n423 : 'heat.common.wsgi.eventlet.listen',
https://opendev.org/openstack/heat/src/branch/master/heat/tests/api/test_wsgi.py#n451 : 'heat.common.wsgi.eventlet.listen',
https://opendev.org/openstack/heat/src/branch/master/heat/tests/api/test_wsgi.py#n460 : 'heat.common.wsgi.eventlet.listen',
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_stack_update.py#n16 : import eventlet.queue
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_stack_update.py#n75 : self.patchobject(eventlet.queue, 'LightQueue',
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_stack_update.py#n76 : side_effect=[msgq_mock, eventlet.queue.LightQueue()])
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_stack_update.py#n130 : self.patchobject(eventlet.queue, 'LightQueue',
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_stack_update.py#n132 : eventlet.queue.LightQueue()])
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_stack_update.py#n195 : self.patchobject(eventlet.queue, 'LightQueue',
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_stack_update.py#n196 : side_effect=[msgq_mock, eventlet.queue.LightQueue()])
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_threadgroup_mgr.py#n16 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_threadgroup_mgr.py#n117 : eventlet.sleep()
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/service/test_threadgroup_mgr.py#n121 : eventlet.sleep()
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/test_check_resource.py#n19 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/test_check_resource.py#n746 : msg_queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/test_scheduler.py#n18 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/test_scheduler.py#n95 : eventlet.sleep(se)
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/test_scheduler.py#n369 : eventlet.sleep(self.error_wait_time)
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/test_scheduler.py#n1195 : self.mock_sleep = self.patchobject(eventlet, 'sleep',
https://opendev.org/openstack/heat/src/branch/master/heat/tests/engine/test_scheduler.py#n1225 : eventlet.sleep(0.01)
https://opendev.org/openstack/heat/src/branch/master/heat/tests/test_resource.py#n22 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/tests/test_resource.py#n80 : self.dummy_event = eventlet.event.Event()
https://opendev.org/openstack/heat/src/branch/master/heat/tests/test_resource.py#n4310 : self.dummy_event = eventlet.event.Event()
https://opendev.org/openstack/heat/src/branch/master/heat/tests/test_resource.py#n4453 : eventlet.event.Event()))
https://opendev.org/openstack/heat/src/branch/master/heat/tests/test_resource.py#n4485 : eventlet.event.Event()))
https://opendev.org/openstack/heat/src/branch/master/heat/tests/test_stack.py#n22 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat/tests/test_stack.py#n2670 : evt = eventlet.event.Event()
https://opendev.org/openstack/heat/src/branch/master/heat_integrationtests/functional/test_stack_cancel.py#n14 : import eventlet
https://opendev.org/openstack/heat/src/branch/master/heat_integrationtests/functional/test_stack_cancel.py#n76 : eventlet.sleep(2)
https://opendev.org/openstack/heat/src/branch/master/heat_integrationtests/functional/test_stack_cancel.py#n90 : eventlet.sleep(2)
https://opendev.org/openstack/heat/src/branch/master/requirements.txt#n5 : eventlet>=0.27.0 # MIT
https://opendev.org/openstack/heat-specs/src/branch/master/specs/liberty/heat-python34-support.rst#n28 : was eventlet and now that eventlet fully supports python3, it is possible
https://opendev.org/openstack/heat-templates/src/branch/master/.zuul.yaml#n32 : eventlet_opts:
https://opendev.org/openstack/heat-templates/src/branch/master/hot/software-config/test-image/elements/heat-agent-pkg-requires/package-installs.yaml#n5 : python_eventlet_package:
https://opendev.org/openstack/heat-templates/src/branch/master/hot/software-config/test-image/elements/heat-agent-pkg-requires/pkg-map#n9 : "python_eventlet_package": "python-eventlet",
https://opendev.org/openstack/heat-templates/src/branch/master/hot/software-config/test-image/elements/heat-agent-pkg-requires/pkg-map#n26 : "python_eventlet_package": "python-eventlet",
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/gmr.rst#n11 : and more. The eventlet backdoor facility provides an interactive shell
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/gmr.rst#n12 : interface for any eventlet based process, allowing an administrator to
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/report.txt#n20 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:346 in run
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/report.txt#n23 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/poll.py:82 in wait
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/report.txt#n41 : `eventlet.greenthread.sleep(self.wait_interval)`
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/report.txt#n43 : /usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py:34 in sleep
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/report.txt#n46 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:294 in switch
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/report.txt#n231 : eventlet.wsgi.server=INFO
https://opendev.org/openstack/ironic/src/branch/master/doc/source/admin/tuning.rst#n159 : .. _eventlet: https://eventlet.net/
https://opendev.org/openstack/ironic/src/branch/master/doc/source/conf.py#n17 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/doc/source/conf.py#n22 : eventlet.monkey_patch(subprocess=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/cmd/__init__.py#n15 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/cmd/__init__.py#n17 : eventlet.monkey_patch()
https://opendev.org/openstack/ironic/src/branch/master/ironic/common/rpc.py#n137 : executor='eventlet',
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/base_manager.py#n19 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/base_manager.py#n665 : eventlet.sleep(0)
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/manager.py#n46 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/manager.py#n1564 : eventlet.sleep(0)
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/manager.py#n2708 : eventlet.sleep(0)
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/manager.py#n3699 : eventlet.sleep(0)
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/periodics.py#n19 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/conductor/periodics.py#n162 : eventlet.sleep(0)
https://opendev.org/openstack/ironic/src/branch/master/ironic/conf/opts.py#n82 : 'eventlet.wsgi.server=INFO',
https://opendev.org/openstack/ironic/src/branch/master/ironic/drivers/modules/inspector/interface.py#n20 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/drivers/modules/inspector/interface.py#n251 : eventlet.spawn_n(_start_inspection, task.node.uuid, task.context)
https://opendev.org/openstack/ironic/src/branch/master/ironic/drivers/modules/ipmitool.py#n39 : from eventlet.green import subprocess as green_subprocess
https://opendev.org/openstack/ironic/src/branch/master/ironic/pxe_filter/service.py#n16 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/pxe_filter/service.py#n17 : from eventlet import event
https://opendev.org/openstack/ironic/src/branch/master/ironic/pxe_filter/service.py#n56 : self._thread = eventlet.spawn_after(_START_DELAY, self._periodic_sync)
https://opendev.org/openstack/ironic/src/branch/master/ironic/pxe_filter/service.py#n61 : eventlet.sleep(0)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/base.py#n31 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/base.py#n32 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/__init__.py#n25 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/__init__.py#n31 : eventlet.monkey_patch() # noqa
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/conductor/test_base_manager.py#n19 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/conductor/test_base_manager.py#n259 : @mock.patch.object(eventlet.greenpool.GreenPool, 'waitall', autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/conductor/test_manager.py#n27 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/conductor/test_manager.py#n6039 : with mock.patch.object(eventlet, 'sleep', autospec=True) as sleep_mock:
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/inspector/test_interface.py#n15 : import eventlet
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/inspector/test_interface.py#n85 : @mock.patch.object(eventlet, 'spawn_n', lambda f, *a, **kw: f(*a, **kw))
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/irmc/test_power.py#n55 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/irmc/test_power.py#n75 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/irmc/test_power.py#n95 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_bios.py#n43 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_bios.py#n553 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_boot.py#n37 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_boot.py#n1716 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_boot.py#n2566 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_firmware.py#n37 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_power.py#n33 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/redfish/test_raid.py#n65 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait',
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_ipmitool.py#n1797 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait', autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_ipmitool.py#n1820 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait', autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_ipmitool.py#n1839 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait', autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_ipmitool.py#n1862 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait', autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n819 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n833 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n847 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n862 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n923 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n937 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n966 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n983 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n1000 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n1017 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n1032 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n1049 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/drivers/modules/test_snmp.py#n1064 : @mock.patch("oslo_utils.eventletutils.EventletEvent.wait", autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/pxe_filter/test_service.py#n114 : @mock.patch('eventlet.spawn_after', lambda delay, func: func())
https://opendev.org/openstack/ironic/src/branch/master/ironic/tests/unit/pxe_filter/test_service.py#n115 : @mock.patch('eventlet.event.Event', autospec=True)
https://opendev.org/openstack/ironic/src/branch/master/releasenotes/notes/agent-last-command-4ec6967c995ba84a.yaml#n5 : sporadically happens before of the eventlet's TLS implementation), we
https://opendev.org/openstack/ironic/src/branch/master/releasenotes/notes/logging-keystoneauth-9db7e56c54c2473d.yaml#n5 : - Log eventlet.wsgi.server events with a proper logger name and ignore DEBUG
https://opendev.org/openstack/ironic/src/branch/master/requirements.txt#n9 : eventlet>=0.30.1 # MIT
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/cmd/__init__.py#n13 : import eventlet
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/cmd/__init__.py#n14 : eventlet.monkey_patch()
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/common/rpc.py#n53 : TRANSPORT, target, endpoints, executor='eventlet',
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/conductor/manager.py#n17 : from eventlet import semaphore
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/introspect.py#n18 : from eventlet import semaphore
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/pxe_filter/base.py#n23 : from eventlet import semaphore
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/pxe_filter/iptables.py#n105 : function. This function is using ``eventlet`` semaphore to serialize
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n27 : import eventlet
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n46 : eventlet.monkey_patch()
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n145 : 'oslo_messaging._drivers.impl_fake.time.sleep', eventlet.sleep))
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n254 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n264 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n295 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n304 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n337 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n346 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n363 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n383 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n411 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n419 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n517 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n519 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n555 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n557 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n572 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n581 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n593 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n600 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n617 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n623 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n639 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n652 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n660 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n672 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n679 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n697 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n707 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n709 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n727 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n736 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n749 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n758 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n784 : eventlet.greenthread.sleep(DEFAULT_SLEEP)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n822 : eventlet.greenthread.spawn_n(inspector_cmd.main,
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n824 : eventlet.greenthread.sleep(1)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n832 : eventlet.greenthread.sleep(3)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/functional.py#n838 : eventlet.greenthread.sleep(1)
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/unit/test_process.py#n22 : import eventlet
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/unit/test_process.py#n446 : eventlet.greenthread, 'sleep', autospec=True))
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/unit/test_pxe_filter.py#n17 : from eventlet import semaphore
https://opendev.org/openstack/ironic-inspector/src/branch/master/ironic_inspector/test/unit/test_wsgi_service.py#n14 : import eventlet  # noqa
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/notes/fix-CalledProcessError-on-startup-28d9dbed85a81542.yaml#n5 : The issue is caused by eventlet bug, see:
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/notes/fix-CalledProcessError-on-startup-28d9dbed85a81542.yaml#n6 : https://github.com/eventlet/eventlet/issues/357
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/notes/handle_eventlet_wsgi_evil_override-3905c6eef0ad7fa3.yaml#n9 : `eventlet <https://github.com/eventlet/eventlet/issues/746>`_ is resolved.
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n998 : "up. The issue is caused by eventlet bug, see: https://github.com/eventlet/"
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n999 : "eventlet/issues/357 The issue affects *ironic-inspector* only if it manages "
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1003 : "up. The issue is caused by eventlet bug, see: https://github.com/eventlet/"
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1004 : "eventlet/issues/357 The issue affects *ironic-inspector* only if it manages "
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2647 : "in `eventlet <https://github.com/eventlet/eventlet/issues/746>`_ is resolved."
https://opendev.org/openstack/ironic-inspector/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2653 : "in `eventlet <https://github.com/eventlet/eventlet/issues/746>`_ is resolved."
https://opendev.org/openstack/ironic-inspector/src/branch/master/requirements.txt#n8 : eventlet>=0.27.0 # MIT
https://opendev.org/openstack/ironic-python-agent/src/branch/master/ironic_python_agent/__init__.py#n13 : import eventlet
https://opendev.org/openstack/ironic-python-agent/src/branch/master/ironic_python_agent/__init__.py#n19 : eventlet.monkey_patch(all=False, socket=True)
https://opendev.org/openstack/ironic-python-agent/src/branch/master/ironic_python_agent/agent.py#n23 : import eventlet
https://opendev.org/openstack/ironic-python-agent/src/branch/master/ironic_python_agent/agent.py#n111 : eventlet.sleep(0)
https://opendev.org/openstack/ironic-python-agent/src/branch/master/ironic_python_agent/agent.py#n450 : eventlet.sleep(0.1)
https://opendev.org/openstack/ironic-python-agent/src/branch/master/ironic_python_agent/tests/unit/test_agent.py#n534 : @mock.patch('eventlet.sleep', autospec=True)
https://opendev.org/openstack/ironic-python-agent/src/branch/master/releasenotes/notes/fix-high-cpu-usage-eventlet-1dccf3b81dd42c47.yaml#n7 : Using eventlet.sleep(0.1) instead of eventlet.sleep(0) gives other processes
https://opendev.org/openstack/ironic-python-agent/src/branch/master/requirements.txt#n2 : eventlet>=0.18.2 # MIT
https://opendev.org/openstack/ironic-specs/src/branch/master/specs/kilo-implemented/driver-periodic-tasks.rst#n46 : ``eventlet.greenthread.spawn_n`` to make it run in a new thread. It will
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/deprecated-as-of-stein-0166965502cb3be2.yaml#n5 : `pydev-debug-port` are only used by Keystone eventlet model in Newton
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/eventlet-cleanup-f35fc5f83c16ea1c.yaml#n6 : - ``[eventlet_server] public_bind_host``
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/eventlet-cleanup-f35fc5f83c16ea1c.yaml#n7 : - ``[eventlet_server] public_bind_port``
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/eventlet-cleanup-f35fc5f83c16ea1c.yaml#n8 : - ``[eventlet_server] public_admin_host``
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/eventlet-cleanup-f35fc5f83c16ea1c.yaml#n9 : - ``[eventlet_server] public_admin_port``
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/eventlet-cleanup-f35fc5f83c16ea1c.yaml#n13 : used by Keystone eventlet model which was removed in Newton release.
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/removed-as-of-newton-721c06b5dcb1b34a.yaml#n10 : Removed ``[eventlet_server]`` and ``[eventlet_server_ssl]`` sections from
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/notes/removed-as-of-newton-721c06b5dcb1b34a.yaml#n14 : Removed support for running keystone under eventlet. It is recommended to
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n977 : "Running keystone in eventlet remains deprecated and will be removed in the "
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n980 : "Running Keystone in eventlet remains deprecated and will be removed in the "
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2007 : msgid "``[eventlet_server] public_bind_host``"
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2008 : msgstr "``[eventlet_server] public_bind_host``"
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2010 : msgid "``[eventlet_server] public_bind_port``"
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2011 : msgstr "``[eventlet_server] public_bind_port``"
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n521 : "Running keystone in eventlet remains deprecated and will be removed in the "
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n1857 : "+spec/removed-as-of-newton>`_] Removed ``[eventlet_server]`` and "
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n1858 : "``[eventlet_server_ssl]`` sections from the `keystone.conf`."
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n1861 : "+spec/removed-as-of-newton>`_] ``[eventlet_server]`` と "
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n1862 : "``[eventlet_server_ssl]`` セクションが `keystone.conf` から削除されました。"
https://opendev.org/openstack/keystone/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n1875 : "eventlet. It is recommended to run keystone in an HTTP server."
https://opendev.org/openstack/keystone-specs/src/branch/master/specs/keystone/liberty/keystone-tokenless-authz-with-x509-ssl-client-cert.rst#n157 : standalone eventlet-based Keystone does not parse or convey X.509 client
https://opendev.org/openstack/keystone-specs/src/branch/master/superseded/functional-testing-setup.rst#n69 : type of deployment (eventlet, Apache, federation, etc)
https://opendev.org/openstack/keystone-specs/src/branch/master/superseded/functional-testing-setup.rst#n99 : * eventlet - deploy on eventlet
https://opendev.org/openstack/keystonemiddleware/src/branch/master/keystonemiddleware/auth_token/_cache.py#n88 : """An advanced memcached client pool that is eventlet safe."""
https://opendev.org/openstack/keystonemiddleware/src/branch/master/keystonemiddleware/auth_token/_cache.py#n154 : "Using the eventlet-unsafe cache pool is deprecated."
https://opendev.org/openstack/keystonemiddleware/src/branch/master/keystonemiddleware/auth_token/_cache.py#n155 : "It is recommended to use eventlet-safe cache pool"
https://opendev.org/openstack/keystonemiddleware/src/branch/master/keystonemiddleware/auth_token/_opts.py#n149 : help='(Optional) Use the advanced (eventlet safe) memcached '
https://opendev.org/openstack/keystonemiddleware/src/branch/master/keystonemiddleware/external_oauth2_token.py#n182 : help='(Optional) Use the advanced (eventlet safe) memcached '
https://opendev.org/openstack/keystonemiddleware/src/branch/master/releasenotes/notes/deprecate-eventlet-unsafe-memcacheclientpool-f8b4a6733513d73e.yaml#n4 : We no longer recommend using the eventlet unsafe keystonemiddleware's
https://opendev.org/openstack/keystonemiddleware/src/branch/master/releasenotes/notes/deprecate-eventlet-unsafe-memcacheclientpool-f8b4a6733513d73e.yaml#n17 : Keystonemiddleware now using eventlet-safe implementation of
https://opendev.org/openstack/keystonemiddleware/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n342 : "We no longer recommend using the eventlet unsafe keystonemiddleware's "
https://opendev.org/openstack/keystonemiddleware/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n346 : "We no longer recommend using the eventlet unsafe keystonemiddleware's "
https://opendev.org/openstack/keystonemiddleware/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n866 : "keystonemiddleware/+bug/1883659>`_] Keystonemiddleware now using eventlet-"
https://opendev.org/openstack/keystonemiddleware/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n877 : "keystonemiddleware/+bug/1883659>`_] Keystonemiddleware now using eventlet-"
https://opendev.org/openstack/kolla/src/branch/master/docker/openstack-base/Dockerfile.j2#n89 : 'eventlet',
https://opendev.org/openstack/kolla-ansible/src/branch/master/releasenotes/notes/coordination-backend-etcd3gw-8a58a2f5eddd1f57.yaml#n8 : stability. ``etcd3`` does not handle well eventlet-based services,
https://opendev.org/openstack/magnum/src/branch/master/magnum/cmd/__init__.py#n18 : import eventlet
https://opendev.org/openstack/magnum/src/branch/master/magnum/cmd/__init__.py#n20 : eventlet.monkey_patch()
https://opendev.org/openstack/magnum/src/branch/master/magnum/common/context.py#n13 : from eventlet.green import threading
https://opendev.org/openstack/magnum/src/branch/master/magnum/common/rpc.py#n164 : executor='eventlet',
https://opendev.org/openstack/magnum/src/branch/master/magnum/tests/fakes.py#n100 : """Fake a looping call without the eventlet stuff
https://opendev.org/openstack/magnum/src/branch/master/magnum/tests/unit/common/test_rpc.py#n78 : executor='eventlet', serializer=ser,
https://opendev.org/openstack/magnum/src/branch/master/magnum/tests/unit/common/test_rpc.py#n97 : executor='eventlet', serializer=ser,
https://opendev.org/openstack/magnum/src/branch/master/releasenotes/notes/broken-kuberenetes-client-d2d1da6029825208.yaml#n7 : https://github.com/eventlet/eventlet/issues/147
https://opendev.org/openstack/magnum/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1358 : "https://github.com/eventlet/eventlet/issues/147 Magnum has three periodic "
https://opendev.org/openstack/magnum/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1369 : "https://github.com/eventlet/eventlet/issues/147 Magnum has three periodic "
https://opendev.org/openstack/magnum/src/branch/master/requirements.txt#n12 : eventlet>=0.28.0 # MIT
https://opendev.org/openstack/manila/src/branch/master/.coveragerc#n5 : concurrency = eventlet
https://opendev.org/openstack/manila/src/branch/master/doc/source/conf.py#n25 : import eventlet
https://opendev.org/openstack/manila/src/branch/master/doc/source/conf.py#n32 : eventlet.monkey_patch(subprocess=True)
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n5 : through using the Python `eventlet <http://eventlet.net/>`_ and
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n9 : switches can only occur when specific eventlet or greenlet library calls are
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n23 : that trigger an eventlet context switch, the long-running thread will block
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n26 : This scenario can be avoided by adding calls to the eventlet sleep method
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n31 : from eventlet import greenthread
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n36 : if time module is patched through eventlet.monkey_patch(). To be explicit,
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n40 : MySQL access and eventlet
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n44 : with eventlet. MySQL-python uses an external C library for accessing the MySQL
https://opendev.org/openstack/manila/src/branch/master/doc/source/contributor/threading.rst#n45 : database. Since eventlet cannot use monkey-patching to intercept blocking calls
https://opendev.org/openstack/manila/src/branch/master/etc/manila/logging_sample.conf#n42 : [logger_eventletwsgi]
https://opendev.org/openstack/manila/src/branch/master/etc/manila/logging_sample.conf#n45 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/api.py#n21 : import eventlet
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/api.py#n22 : eventlet.monkey_patch()
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/data.py#n19 : import eventlet
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/data.py#n20 : eventlet.monkey_patch()
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/scheduler.py#n21 : import eventlet
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/scheduler.py#n22 : eventlet.monkey_patch()
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/share.py#n20 : import eventlet
https://opendev.org/openstack/manila/src/branch/master/manila/cmd/share.py#n21 : eventlet.monkey_patch()
https://opendev.org/openstack/manila/src/branch/master/manila/manager.py#n55 : from eventlet import greenpool
https://opendev.org/openstack/manila/src/branch/master/manila/opts.py#n96 : import manila.wsgi.eventlet_server
https://opendev.org/openstack/manila/src/branch/master/manila/opts.py#n199 : manila.wsgi.eventlet_server.socket_opts,
https://opendev.org/openstack/manila/src/branch/master/manila/rpc.py#n160 : executor='eventlet',
https://opendev.org/openstack/manila/src/branch/master/manila/share/drivers/inspur/as13000/as13000_nas.py#n20 : import eventlet
https://opendev.org/openstack/manila/src/branch/master/manila/share/drivers/inspur/as13000/as13000_nas.py#n148 : eventlet.sleep(1)
https://opendev.org/openstack/manila/src/branch/master/manila/share/drivers/inspur/instorage/cli_helper.py#n23 : from eventlet import greenthread
https://opendev.org/openstack/manila/src/branch/master/manila/share/drivers/nexenta/ns5/jsonrpc.py#n21 : from eventlet import greenthread
https://opendev.org/openstack/manila/src/branch/master/manila/ssh_utils.py#n19 : from eventlet import pools
https://opendev.org/openstack/manila/src/branch/master/manila/ssh_utils.py#n57 : """A simple eventlet pool to hold ssh connections."""
https://opendev.org/openstack/manila/src/branch/master/manila/tests/__init__.py#n25 : import eventlet
https://opendev.org/openstack/manila/src/branch/master/manila/tests/__init__.py#n27 : eventlet.monkey_patch()
https://opendev.org/openstack/manila/src/branch/master/manila/tests/fake_utils.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/manila/src/branch/master/manila/tests/share/drivers/dell_emc/common/enas/test_connector.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/manila/src/branch/master/manila/tests/share/drivers/inspur/instorage/test_instorage.py#n23 : from eventlet import greenthread
https://opendev.org/openstack/manila/src/branch/master/manila/tests/share/drivers/nexenta/ns5/test_jsonrpc.py#n1172 : @mock.patch('eventlet.greenthread.sleep')
https://opendev.org/openstack/manila/src/branch/master/manila/tests/share/drivers/qnap/test_qnap.py#n22 : from eventlet import greenthread
https://opendev.org/openstack/manila/src/branch/master/requirements.txt#n10 : eventlet>=0.26.1 # MIT
https://opendev.org/openstack/masakari/src/branch/master/HACKING.rst#n36 : - [M322] Check masakari.utils.spawn() is used instead of greenthread.spawn() and eventlet.spawn()
https://opendev.org/openstack/masakari/src/branch/master/masakari/__init__.py#n34 : import eventlet  # noqa
https://opendev.org/openstack/masakari/src/branch/master/masakari/cmd/__init__.py#n16 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/cmd/__init__.py#n18 : eventlet.monkey_patch()
https://opendev.org/openstack/masakari/src/branch/master/masakari/engine/drivers/taskflow/host_failure.py#n16 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/engine/drivers/taskflow/host_failure.py#n17 : from eventlet import greenpool
https://opendev.org/openstack/masakari/src/branch/master/masakari/engine/drivers/taskflow/host_failure.py#n59 : eventlet.sleep(CONF.wait_period_after_service_update)
https://opendev.org/openstack/masakari/src/branch/master/masakari/hacking/checks.py#n87 : r".*(eventlet|greenthread)\.(?P<spawn_part>spawn(_n)?)\(.*\)")
https://opendev.org/openstack/masakari/src/branch/master/masakari/hacking/checks.py#n304 : eventlet.spawn(), and eventlet.spawn_n()
https://opendev.org/openstack/masakari/src/branch/master/masakari/hacking/checks.py#n309 : "greenthread.%(spawn)s() and eventlet.%(spawn)s()")
https://opendev.org/openstack/masakari/src/branch/master/masakari/rpc.py#n147 : executor='eventlet',
https://opendev.org/openstack/masakari/src/branch/master/masakari/test.py#n24 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/test.py#n25 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/__init__.py#n24 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/__init__.py#n26 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_hacking.py#n315 : code = "eventlet.greenthread.spawn(func, arg1, kwarg1=kwarg1)"
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_hacking.py#n319 : code = "eventlet.spawn(func, arg1, kwarg1=kwarg1)"
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_hacking.py#n323 : code = "eventlet.spawn_n(func, arg1, kwarg1=kwarg1)"
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_rpc.py#n121 : executor='eventlet', serializer=ser,
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_utils.py#n18 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_utils.py#n190 : with mock.patch.object(eventlet, self.spawn_name, _fake_spawn):
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_utils.py#n207 : with mock.patch.object(eventlet, self.spawn_name, _fake_spawn):
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_utils.py#n227 : with mock.patch.object(eventlet, self.spawn_name, _fake_spawn):
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_wsgi.py#n24 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_wsgi.py#n25 : import eventlet.wsgi
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_wsgi.py#n111 : eventlet.wsgi.MAX_HEADER_LINE)
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_wsgi.py#n170 : eventlet.sleep(0)
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_wsgi.py#n176 : eventlet.sleep(0)
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_wsgi.py#n201 : with mock.patch.object(eventlet,
https://opendev.org/openstack/masakari/src/branch/master/masakari/tests/unit/test_wsgi.py#n216 : with mock.patch.object(eventlet,
https://opendev.org/openstack/masakari/src/branch/master/masakari/utils.py#n26 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/utils.py#n195 : """Passthrough method for eventlet.spawn.
https://opendev.org/openstack/masakari/src/branch/master/masakari/utils.py#n214 : return eventlet.spawn(context_wrapper, *args, **kwargs)
https://opendev.org/openstack/masakari/src/branch/master/masakari/utils.py#n218 : """Passthrough method for eventlet.spawn_n.
https://opendev.org/openstack/masakari/src/branch/master/masakari/utils.py#n237 : eventlet.spawn_n(context_wrapper, *args, **kwargs)
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n22 : import eventlet
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n23 : import eventlet.wsgi
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n49 : protocol=eventlet.wsgi.HttpProtocol, backlog=128,
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n57 : :param pool_size: Maximum number of eventlets to spawn concurrently.
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n64 : eventlet.wsgi.MAX_HEADER_LINE = CONF.wsgi.max_header_line
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n70 : self._pool = eventlet.GreenPool(self.pool_size)
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n93 : self._socket = eventlet.listen(bind_addr, family, backlog=backlog)
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n160 : dup_socket = eventlet.wrap_ssl(dup_socket,
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n170 : 'func': eventlet.wsgi.server,
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n199 : server is stopped is by killing its eventlet.
https://opendev.org/openstack/masakari/src/branch/master/masakari/wsgi.py#n214 : Waits on the server's eventlet to finish, then returns.
https://opendev.org/openstack/masakari/src/branch/master/releasenotes/notes/wsgi-applications-3ed7d6b89f1a5785.yaml#n7 : The eventlet-based servers are still available, but the WSGI options will
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/ha/masakari.py#n15 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/ha/masakari.py#n84 : eventlet.greenthread.sleep(api_retry_interval)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/consul_check/manager.py#n15 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/consul_check/manager.py#n193 : eventlet.greenthread.sleep(self.monitoring_interval)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/host_handler/handle_host.py#n18 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/host_handler/handle_host.py#n266 : eventlet.greenthread.sleep(CONF.host.ipmi_retry_interval)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/host_handler/handle_host.py#n443 : eventlet.greenthread.sleep(CONF.host.stonith_wait)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/host_handler/handle_host.py#n446 : eventlet.greenthread.sleep(CONF.host.monitoring_interval)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/host_handler/handle_host.py#n462 : eventlet.greenthread.sleep(
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/hostmonitor/host_handler/handle_host.py#n478 : eventlet.greenthread.sleep(CONF.host.monitoring_interval)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/instancemonitor/instance.py#n18 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/instancemonitor/instance.py#n157 : eventlet.greenthread.sleep(1)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/instance.py#n15 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/instance.py#n148 : eventlet.greenthread.sleep(1)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/qemu_utils.py#n32 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/qemu_utils.py#n420 : eventlet.sleep(sleep_time)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/qemu_utils.py#n426 : eventlet.sleep(sleep_time)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/scheduler.py#n15 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/scheduler.py#n89 : eventlet.sleep()
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/scheduler.py#n102 : eventlet.sleep(sleep_time)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/introspectiveinstancemonitor/scheduler.py#n110 : eventlet.sleep(sleep_time)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/processmonitor/process.py#n17 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/processmonitor/process.py#n87 : eventlet.greenthread.sleep(CONF.process.check_interval)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/processmonitor/process_handler/handle_process.py#n17 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/processmonitor/process_handler/handle_process.py#n173 : eventlet.greenthread.sleep(
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/processmonitor/process_handler/handle_process.py#n181 : eventlet.greenthread.sleep(CONF.process.restart_interval)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/processmonitor/process_handler/handle_process.py#n190 : eventlet.greenthread.sleep(
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/ha/test_masakari.py#n19 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/ha/test_masakari.py#n114 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/consul_check/test_manager.py#n19 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/consul_check/test_manager.py#n28 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_handle_host.py#n21 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_handle_host.py#n33 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_handle_host.py#n419 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_handle_host.py#n450 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_handle_host.py#n870 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_handle_host.py#n900 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_hold_host_status.py#n18 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_hold_host_status.py#n22 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_parse_cib_xml.py#n19 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/hostmonitor/host_handler/test_parse_cib_xml.py#n23 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/instancemonitor/libvirt_handler/test_callback.py#n20 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/instancemonitor/libvirt_handler/test_callback.py#n27 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/instancemonitor/libvirt_handler/test_eventfilter.py#n21 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/instancemonitor/libvirt_handler/test_eventfilter.py#n31 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/instancemonitor/test_instance.py#n22 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/instancemonitor/test_instance.py#n27 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/instancemonitor/test_instance.py#n206 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/introspectiveinstancemonitor/test_monitor_manager.py#n15 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/introspectiveinstancemonitor/test_monitor_manager.py#n22 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/process_handler/test_handle_process.py#n20 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/process_handler/test_handle_process.py#n30 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/process_handler/test_handle_process.py#n206 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/process_handler/test_handle_process.py#n258 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/process_handler/test_handle_process.py#n319 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/test_process.py#n19 : import eventlet
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/test_process.py#n24 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/masakari-monitors/src/branch/master/masakarimonitors/tests/unit/processmonitor/test_process.py#n75 : @mock.patch.object(eventlet.greenthread, 'sleep')
https://opendev.org/openstack/mistral/src/branch/master/mistral/cmd/launch.py#n19 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/cmd/launch.py#n22 : eventlet.monkey_patch(
https://opendev.org/openstack/mistral/src/branch/master/mistral/config.py#n57 : 'eventlet library is used to support async IO. This could result '
https://opendev.org/openstack/mistral/src/branch/master/mistral/config.py#n173 : default='eventlet',
https://opendev.org/openstack/mistral/src/branch/master/mistral/config.py#n174 : choices=['eventlet', 'blocking', 'threading'],
https://opendev.org/openstack/mistral/src/branch/master/mistral/config.py#n840 : 'eventlet.wsgi.server=WARN',
https://opendev.org/openstack/mistral/src/branch/master/mistral/db/sqlalchemy/sqlite_lock.py#n15 : from eventlet import semaphore
https://opendev.org/openstack/mistral/src/branch/master/mistral/engine/post_tx_queue.py#n16 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/engine/post_tx_queue.py#n110 : eventlet.spawn(_within_new_thread)
https://opendev.org/openstack/mistral/src/branch/master/mistral/executors/default_executor.py#n16 : from eventlet import timeout as ev_timeout
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/base.py#n180 : def run(self, executor='eventlet'):
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/kombu/kombu_listener.py#n22 : from oslo_utils import eventletutils
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/kombu/kombu_listener.py#n38 : self.ready = eventletutils.Event()
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/kombu/kombu_server.py#n23 : from oslo_utils import eventletutils
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/kombu/kombu_server.py#n43 : ' executor is threading or eventlet.'
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/kombu/kombu_server.py#n72 : self._running = eventletutils.Event()
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/kombu/kombu_server.py#n73 : self._stopped = eventletutils.Event()
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/kombu/kombu_server.py#n87 : def run(self, executor='eventlet'):
https://opendev.org/openstack/mistral/src/branch/master/mistral/rpc/oslo/oslo_server.py#n38 : def run(self, executor='eventlet'):
https://opendev.org/openstack/mistral/src/branch/master/mistral/scheduler/default_scheduler.py#n17 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/scheduler/default_scheduler.py#n86 : eventlet.sleep(
https://opendev.org/openstack/mistral/src/branch/master/mistral/scheduler/default_scheduler.py#n190 : green_thread = eventlet.spawn_after(
https://opendev.org/openstack/mistral/src/branch/master/mistral/scheduler/default_scheduler.py#n220 : del self.in_memory_jobs[eventlet.getcurrent()]
https://opendev.org/openstack/mistral/src/branch/master/mistral/service/base.py#n15 : from eventlet import event
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/action_heartbeat_checker.py#n16 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/action_heartbeat_checker.py#n113 : eventlet.sleep(CONF.action_heartbeat.check_interval)
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/action_heartbeat_checker.py#n139 : eventlet.spawn_after(wait_time, _loop)
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/action_heartbeat_sender.py#n15 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/action_heartbeat_sender.py#n85 : eventlet.sleep(CONF.action_heartbeat.check_interval)
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/action_heartbeat_sender.py#n103 : eventlet.spawn(_loop)
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/legacy_scheduler.py#n19 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/legacy_scheduler.py#n150 : eventlet.sleep(
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/maintenance.py#n13 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/services/maintenance.py#n114 : eventlet.sleep(1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/__init__.py#n17 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/__init__.py#n19 : eventlet.monkey_patch(
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/api/v2/test_parallel_operations.py#n15 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/api/v2/test_parallel_operations.py#n16 : from eventlet import semaphore
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/api/v2/test_parallel_operations.py#n107 : self.threads.append(eventlet.spawn(list_))
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/api/v2/test_parallel_operations.py#n113 : self.threads.append(eventlet.spawn(delete_))
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_locking.py#n17 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_locking.py#n60 : eventlet.sleep(random.Random().randint(0, 10) * 0.001)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_locking.py#n80 : eventlet.spawn(self._run_acquire_release_sqlite_lock, id, i)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_locking.py#n118 : eventlet.spawn(self._run_correct_locking, wf_ex)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_sqlite_transactions.py#n17 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_sqlite_transactions.py#n18 : from eventlet import semaphore
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_sqlite_transactions.py#n93 : t1 = eventlet.spawn(_run_tx1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/db/v2/test_sqlite_transactions.py#n94 : t2 = eventlet.spawn(_run_tx2)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/base.py#n18 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/base.py#n85 : self.threads.append(eventlet.spawn(launch_service, exe_svc))
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/base.py#n100 : self.threads.append(eventlet.spawn(launch_service, notif_svc))
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/base.py#n111 : self.threads.append(eventlet.spawn(launch_service, eng_svc))
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/test_race_condition.py#n15 : from eventlet import corolocal
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/test_race_condition.py#n16 : from eventlet import semaphore
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/test_race_condition.py#n106 : print('Action completed [eventlet_id=%s]' % corolocal.get_ident())
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/test_task_started_finished_at.py#n13 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/engine/test_task_started_finished_at.py#n48 : eventlet.sleep(1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/rpc/kombu/test_kombu_server.py#n296 : self.server._prepare_worker('eventlet')
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/scheduler/test_default_scheduler.py#n15 : from eventlet import event
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/scheduler/test_default_scheduler.py#n16 : from eventlet import semaphore
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/scheduler/test_default_scheduler.py#n17 : from eventlet import timeout
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_legacy_scheduler.py#n17 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_legacy_scheduler.py#n20 : from eventlet import queue
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_legacy_scheduler.py#n21 : from eventlet import timeout
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_legacy_scheduler.py#n280 : eventlet.sleep(0.1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_legacy_scheduler.py#n334 : eventlet.sleep(1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_trigger_service.py#n16 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_trigger_service.py#n58 : eventlet.sleep()
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_trigger_service.py#n60 : eventlet.sleep()
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_trigger_service.py#n258 : eventlet.sleep(1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_trigger_service.py#n345 : eventlet.sleep(5)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/services/test_trigger_service.py#n351 : eventlet.sleep(1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/test_launcher.py#n16 : import eventlet
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/test_launcher.py#n34 : eventlet.spawn(launch.launch_any, launch.LAUNCH_OPTIONS.keys())
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/test_launcher.py#n43 : eventlet.sleep(0.1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/test_launcher.py#n55 : eventlet.spawn(launch.launch_any, ['api'])
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/test_launcher.py#n63 : eventlet.sleep(0.1)
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/test_launcher.py#n76 : eventlet.spawn(launch.launch_any, ['engine'])
https://opendev.org/openstack/mistral/src/branch/master/mistral/tests/unit/test_launcher.py#n84 : eventlet.sleep(0.1)
https://opendev.org/openstack/mistral/src/branch/master/releasenotes/notes/add_config_option_for_oslo_rpc_executor-44afe1f728afdcb2.yaml#n6 : processes incoming calls. Allowed values: "eventlet", "threading" and
https://opendev.org/openstack/mistral/src/branch/master/releasenotes/notes/add_config_option_for_oslo_rpc_executor-44afe1f728afdcb2.yaml#n10 : MySQLDb database driver and "eventlet" RPC executor. Once in a while,
https://opendev.org/openstack/mistral/src/branch/master/releasenotes/notes/add_config_option_for_oslo_rpc_executor-44afe1f728afdcb2.yaml#n12 : driver wasn't eventlet-friendly and dispatching of green threads didn't
https://opendev.org/openstack/mistral/src/branch/master/releasenotes/notes/add_config_option_for_oslo_rpc_executor-44afe1f728afdcb2.yaml#n14 : a combination of "eventlet" executor and PyMysql driver works well. The
https://opendev.org/openstack/mistral/src/branch/master/requirements.txt#n5 : eventlet>=0.26.0 # MIT
https://opendev.org/openstack/mistral/src/branch/master/setup.cfg#n113 : eventlet = futurist:GreenThreadPoolExecutor
https://opendev.org/openstack/mistral-extra/src/branch/master/examples/v2/calculator/requirements.txt#n6 : eventlet!=0.18.3,>=0.18.2 # MIT
https://opendev.org/openstack/mistral-extra/src/branch/master/mistral_extra/monitoring/base.py#n18 : import eventlet
https://opendev.org/openstack/mistral-extra/src/branch/master/mistral_extra/monitoring/base.py#n78 : eventlet.sleep(self._interval)
https://opendev.org/openstack/mistral-lib/src/branch/master/mistral_lib/utils/__init__.py#n29 : import eventlet
https://opendev.org/openstack/mistral-lib/src/branch/master/mistral_lib/utils/__init__.py#n30 : from eventlet import corolocal
https://opendev.org/openstack/mistral-lib/src/branch/master/mistral_lib/utils/__init__.py#n364 : eventlet.sleep(seconds)
https://opendev.org/openstack/mistral-lib/src/branch/master/requirements.txt#n5 : eventlet!=0.20.1,>=0.20.0 # MIT
https://opendev.org/openstack/monasca-agent/src/branch/master/monasca_agent/collector/checks/services_checks.py#n18 : import eventlet
https://opendev.org/openstack/monasca-agent/src/branch/master/monasca_agent/collector/checks/services_checks.py#n112 : with eventlet.timeout.Timeout(self.timeout):
https://opendev.org/openstack/monasca-agent/src/branch/master/monasca_agent/collector/checks/services_checks.py#n118 : except eventlet.Timeout:
https://opendev.org/openstack/monasca-agent/src/branch/master/monasca_agent/collector/virt/xenapi/inspector.py#n17 : from eventlet import timeout
https://opendev.org/openstack/monasca-agent/src/branch/master/requirements.txt#n25 : eventlet!=0.18.3,!=0.20.1,>=0.18.2 # MIT
https://opendev.org/openstack/monasca-agent/src/branch/master/tests/detection/test_mon.py#n29 : ' -k eventlet --worker-connections=2000'
https://opendev.org/openstack/monasca-agent/src/branch/master/tests/test_services_check.py#n15 : from eventlet.green import time
https://opendev.org/openstack/monasca-api/src/branch/master/README.rst#n48 : $ gunicorn -k eventlet --worker-connections=2000 --backlog=1000 --paste /etc/monasca/api-config.ini
https://opendev.org/openstack/monasca-api/src/branch/master/README.rst#n51 : $ gunicorn -k eventlet --worker-connections=2000 --backlog=1000 --paste /etc/monasca/api-config.ini -D
https://opendev.org/openstack/monasca-api/src/branch/master/docker/api-config.ini.j2#n22 : worker-class = eventlet
https://opendev.org/openstack/monasca-api/src/branch/master/etc/api-config.ini#n22 : worker-class = eventlet
https://opendev.org/openstack/monasca-api/src/branch/master/requirements.txt#n28 : eventlet!=0.18.3,!=0.20.1,!=0.21.0,!=0.23.0,!=0.25.0,>=0.18.2 # MIT
https://opendev.org/openstack/monasca-events-api/src/branch/master/etc/monasca/events-api-paste.ini#n60 : worker-class = eventlet
https://opendev.org/openstack/monasca-events-api/src/branch/master/lower-constraints.txt#n4 : eventlet==0.18.2
https://opendev.org/openstack/monasca-events-api/src/branch/master/requirements.txt#n17 : eventlet!=0.18.3,!=0.20.1,>=0.18.2 # MIT
https://opendev.org/openstack/networking-baremetal/src/branch/master/networking_baremetal/agent/ironic_neutron_agent.py#n20 : import eventlet
https://opendev.org/openstack/networking-baremetal/src/branch/master/networking_baremetal/agent/ironic_neutron_agent.py#n22 : eventlet.monkey_patch()
https://opendev.org/openstack/networking-baremetal/src/branch/master/networking_baremetal/agent/ironic_neutron_agent.py#n76 : transport, targets, endpoints, executor='eventlet', pool=agent_id)
https://opendev.org/openstack/networking-generic-switch/src/branch/master/networking_generic_switch/batching.py#n23 : import eventlet
https://opendev.org/openstack/networking-generic-switch/src/branch/master/networking_generic_switch/batching.py#n35 : THREAD_POOL = eventlet.greenpool.GreenPool()
https://opendev.org/openstack/networking-generic-switch/src/branch/master/networking_generic_switch/batching.py#n54 : with eventlet.Timeout(SHUTDOWN_TIMEOUT, ShutdownTimeout):
https://opendev.org/openstack/networking-generic-switch/src/branch/master/networking_generic_switch/batching.py#n371 : eventlet.sleep(0)
https://opendev.org/openstack/networking-generic-switch/src/branch/master/requirements.txt#n5 : eventlet>=0.18.2 # Apache-2.0
https://opendev.org/openstack/networking-generic-switch/src/branch/master/tools/ngs-stress/ngs_stress.py#n21 : import eventlet
https://opendev.org/openstack/networking-generic-switch/src/branch/master/tools/ngs-stress/ngs_stress.py#n28 : eventlet.monkey_patch()
https://opendev.org/openstack/networking-sfc/src/branch/master/networking_sfc/services/sfc/agent/__init__.py#n1 : from neutron.common import eventlet_utils
https://opendev.org/openstack/networking-sfc/src/branch/master/networking_sfc/services/sfc/agent/__init__.py#n2 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/networking-sfc/src/branch/master/networking_sfc/tests/unit/services/sfc/drivers/ovs/test_driver.py#n18 : from eventlet import greenthread
https://opendev.org/openstack/networking-sfc/src/branch/master/requirements.txt#n7 : eventlet>=0.27.0 # MIT
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n6 : neutron/cmd/eventlet/agents/dhcp.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n7 : neutron/cmd/eventlet/agents/l3.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n8 : neutron/cmd/eventlet/agents/metadata.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n9 : neutron/cmd/eventlet/agents/ovn_metadata.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n10 : neutron/cmd/eventlet/agents/ovn_neutron_agent.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n11 : neutron/cmd/eventlet/plugins/linuxbridge_neutron_agent.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n12 : neutron/cmd/eventlet/plugins/macvtap_neutron_agent.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n13 : neutron/cmd/eventlet/plugins/ovs_neutron_agent.py
https://opendev.org/openstack/neutron/src/branch/master/.coveragerc#n14 : neutron/cmd/eventlet/plugins/sriov_nic_neutron_agent.py
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/contribute.rst#n479 : neutron-foo-agent = networking_foo.cmd.eventlet.agents.foo:main
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/effective_neutron.rst#n197 : Document common pitfalls as well as good practices done when using eventlet
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/effective_neutron.rst#n205 : https://wiki.openstack.org/wiki/OpenStack_and_SQLAlchemy#MySQLdb_.2B_eventlet_.3D_sad
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/internals/api_layer.rst#n45 : .. _Eventlet: http://eventlet.net/
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/internals/api_layer.rst#n47 : .. _GreenPool: http://eventlet.net/doc/modules/greenpool.html
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/internals/services_and_agents.rst#n61 : Neutron extensively utilizes the eventlet library to provide asynchronous
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/internals/services_and_agents.rst#n65 : If a service utilizes the eventlet library, then it should not call
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/internals/services_and_agents.rst#n66 : eventlet.monkey_patch() directly but instead maintain its entry point main()
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/internals/services_and_agents.rst#n67 : function under neutron/cmd/eventlet/... If that is the case, the standard
https://opendev.org/openstack/neutron/src/branch/master/doc/source/contributor/internals/services_and_agents.rst#n70 : <http://opendev.org/openstack/neutron/src/neutron/cmd/eventlet/__init__.py>`_).
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n17 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n18 : import eventlet.event
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n19 : from eventlet.green import subprocess
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n20 : import eventlet.queue
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n115 : self._stdout_lines = eventlet.queue.LightQueue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n116 : self._stderr_lines = eventlet.queue.LightQueue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n169 : self._kill_event = eventlet.event.Event()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n178 : watcher = eventlet.spawn(self._watch_process,
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n244 : eventlet.sleep(self.respawn_interval)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n267 : eventlet.sleep()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/async_process.py#n310 : except eventlet.queue.Empty:
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/polling.py#n18 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/polling.py#n75 : eventlet.sleep()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n18 : from eventlet import patcher
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n22 : from oslo_utils import eventletutils
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n70 : """Determines if socket module is patched by eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n75 : class is to workaround eventlet bug
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n76 : https://github.com/eventlet/eventlet/issues/764 and for the
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n78 : with socket mocks as it abstracts eventlet under the hood module
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n80 : TODO(mtomaska): This class(workaround) can be removed once eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n84 : if eventletutils.is_monkey_patched(socket.__name__):
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n85 : LOG.debug("Std library socket module is patched by eventlet. "
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n86 : "Requesting std library socket module from eventlet.")
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/common/utils.py#n89 : LOG.debug("Std library socket module is not patched by eventlet. "
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n21 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n136 : self._pool = eventlet.GreenPool(1)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n180 : eventlet.spawn_n(self._process_loop)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n182 : eventlet.spawn_n(self._reload_bulk_allocations)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n195 : eventlet.greenthread.sleep(self.conf.bulk_reload_interval)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n293 : eventlet.greenthread.sleep(0)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n302 : pool = eventlet.GreenPool(self.conf.num_sync_threads)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n369 : eventlet.sleep(0.2)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n374 : eventlet.spawn(self._dhcp_ready_ports_loop)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/dhcp/agent.py#n406 : eventlet.spawn(self._periodic_resync_helper)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/agent.py#n18 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/agent.py#n331 : self._pool = eventlet.GreenPool(size=self._pool_size)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/agent.py#n980 : eventlet.spawn_n(self._process_routers_loop)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/agent.py#n1068 : eventlet.spawn_n(self._process_routers_loop)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/ha.py#n19 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/ha.py#n91 : eventlet.spawn(self._start_keepalived_notifications_server)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/ha.py#n164 : eventlet.spawn_n(self._enqueue_state_change, router_id, state)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/ha.py#n165 : eventlet.sleep(0)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/l3/ha.py#n170 : eventlet.sleep(self.conf.ha_vrrp_advert_int)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/external_process.py#n19 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/external_process.py#n257 : eventlet.spawn(self._periodic_checking_thread)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/external_process.py#n278 : eventlet.sleep(self._config.AGENT.check_child_processes_interval)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/external_process.py#n279 : eventlet.spawn(self._check_child_processes)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_conntrack.py#n16 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_conntrack.py#n74 : self._queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_conntrack.py#n76 : eventlet.spawn_n(self._process_queue_worker)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n22 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n1122 : use_eventlet=True):
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n1140 : :param use_eventlet: (Optional) True if the arping command will be spawned
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n1141 : using eventlet, False to use Python threads
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n1148 : if use_eventlet:
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n1149 : eventlet.spawn_n(arping)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n1543 : _queue = eventlet.Queue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/ip_lib.py#n1560 : except eventlet.queue.Empty:
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/of_monitor.py#n18 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/of_monitor.py#n55 : self._queue = eventlet.queue.Queue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/of_monitor.py#n56 : eventlet.spawn(self._read_and_enqueue, self.iter_stdout)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/of_monitor.py#n57 : eventlet.spawn(self._read_and_enqueue, self.iter_stderr)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/openvswitch_firewall/firewall.py#n22 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/openvswitch_firewall/firewall.py#n885 : eventlet.sleep(0)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/pd.py#n19 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/pd.py#n228 : eventlet.spawn_n(self._ensure_lla_task,
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n26 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n27 : from eventlet.green import subprocess
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n417 : class UnixDomainHttpProtocol(eventlet.wsgi.HttpProtocol):
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n433 : eventlet.wsgi.HttpProtocol.__init__(self, conn_state, server)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n444 : eventlet.wsgi.HttpProtocol.__init__(
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n447 : eventlet.wsgi.HttpProtocol.__init__(self, *args)
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n459 : self._socket = eventlet.listen(file_socket,
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n469 : logger = logging.getLogger('eventlet.wsgi.server')
https://opendev.org/openstack/neutron/src/branch/master/neutron/agent/linux/utils.py#n470 : eventlet.wsgi.server(socket,
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n24 : import eventlet.wsgi
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n89 : if isinstance(self._server, eventlet.greenthread.GreenThread):
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n93 : if isinstance(self._server, eventlet.greenthread.GreenThread):
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n107 : eventlet.wsgi.MAX_HEADER_LINE = CONF.max_header_line
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n111 : self.pool = eventlet.GreenPool(1)
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n141 : sock = eventlet.listen(bind_addr,
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n148 : eventlet.sleep(0.1)
https://opendev.org/openstack/neutron/src/branch/master/neutron/api/wsgi.py#n223 : eventlet.wsgi.server(socket, application,
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/__init__.py#n13 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/__init__.py#n15 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n14 : from neutron.server import api_eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n16 : from neutron.server import periodic_eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n17 : from neutron.server import rpc_eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n18 : from neutron.server import wsgi_eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n22 : server.boot_server(wsgi_eventlet.eventlet_wsgi_server)
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n25 : def main_rpc_eventlet():
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n26 : server.boot_server(rpc_eventlet.eventlet_rpc_server)
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n29 : def main_api_eventlet():
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n30 : return server.boot_server(api_eventlet.eventlet_api_server)
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n33 : def main_periodic_eventlet():
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n34 : server.boot_server(periodic_eventlet.eventlet_periodic_workers)
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n37 : def main_ovn_maintenance_eventlet():
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/eventlet/server/__init__.py#n38 : return server.boot_server(ovn_maintenance.eventlet_ovn_maintenance_worker)
https://opendev.org/openstack/neutron/src/branch/master/neutron/cmd/ovn/neutron_ovn_db_sync_util.py#n173 : logging.setup(conf, 'neutron_ovn_db_sync_util', fix_eventlet=False)
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/config.py#n118 : logging.setup(cfg.CONF, product_name, fix_eventlet=False)
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/eventlet_utils.py#n16 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/eventlet_utils.py#n21 : eventlet.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n36 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n37 : from eventlet.green import subprocess
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n113 : eventlet.sleep(time_to_wait)
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n738 : with eventlet.Timeout(timeout):
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n740 : eventlet.sleep(sleep)
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n741 : except eventlet.Timeout:
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n920 : """As eventlet.spawn() but with osprofiler initialized in the new threads
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n923 : in new threads (including eventlet threads) osprofiler comes uninitialized
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n924 : by default. This spawn() is a stand-in replacement for eventlet.spawn()
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n936 : return eventlet.spawn(wrapper, *args, **kwargs)
https://opendev.org/openstack/neutron/src/branch/master/neutron/common/utils.py#n950 : return eventlet.spawn_n(wrapper, *args, **kwargs)
https://opendev.org/openstack/neutron/src/branch/master/neutron/db/agents_db.py#n19 : from eventlet import greenthread
https://opendev.org/openstack/neutron/src/branch/master/neutron/notifiers/batch_notifier.py#n15 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/notifiers/batch_notifier.py#n22 : self._pending_events = eventlet.Queue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/notifiers/batch_notifier.py#n61 : eventlet.sleep(self.batch_interval)
https://opendev.org/openstack/neutron/src/branch/master/neutron/notifiers/nova.py#n18 : from eventlet.green import threading
https://opendev.org/openstack/neutron/src/branch/master/neutron/plugins/ml2/drivers/openvswitch/agent/openflow/native/ofswitch.py#n20 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/plugins/ml2/drivers/openvswitch/agent/openflow/native/ofswitch.py#n93 : timeout = eventlet.Timeout(seconds=timeout_sec)
https://opendev.org/openstack/neutron/src/branch/master/neutron/plugins/ml2/drivers/openvswitch/agent/openflow/native/ofswitch.py#n109 : except eventlet.Timeout as e:
https://opendev.org/openstack/neutron/src/branch/master/neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_db_sync.py#n17 : from eventlet import greenthread
https://opendev.org/openstack/neutron/src/branch/master/neutron/plugins/ml2/plugin.py#n18 : from eventlet import greenthread
https://opendev.org/openstack/neutron/src/branch/master/neutron/privileged/agent/linux/utils.py#n19 : from eventlet.green import subprocess
https://opendev.org/openstack/neutron/src/branch/master/neutron/server/api_eventlet.py#n27 : def eventlet_api_server():
https://opendev.org/openstack/neutron/src/branch/master/neutron/server/ovn_maintenance.py#n27 : def eventlet_ovn_maintenance_worker():
https://opendev.org/openstack/neutron/src/branch/master/neutron/server/periodic_eventlet.py#n26 : def eventlet_periodic_workers():
https://opendev.org/openstack/neutron/src/branch/master/neutron/server/rpc_eventlet.py#n30 : def eventlet_rpc_server():
https://opendev.org/openstack/neutron/src/branch/master/neutron/server/wsgi_eventlet.py#n14 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/server/wsgi_eventlet.py#n23 : def eventlet_wsgi_server():
https://opendev.org/openstack/neutron/src/branch/master/neutron/server/wsgi_eventlet.py#n32 : pool = eventlet.GreenPool()
https://opendev.org/openstack/neutron/src/branch/master/neutron/services/trunk/drivers/openvswitch/agent/ovsdb_handler.py#n18 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/services/trunk/drivers/openvswitch/agent/ovsdb_handler.py#n144 : eventlet.spawn_n(self.handle_trunk_add, port_name)
https://opendev.org/openstack/neutron/src/branch/master/neutron/services/trunk/drivers/openvswitch/agent/ovsdb_handler.py#n149 : eventlet.spawn_n(
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/base.py#n31 : import eventlet.timeout
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/base.py#n179 : except eventlet.Timeout as e:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/base.py#n310 : with eventlet.Timeout(max_execution_time, False):
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/common/__init__.py#n13 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/common/__init__.py#n16 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/common/agents/ovs_agent.py#n21 : from neutron.cmd.eventlet.plugins.ovs_neutron_agent import main as _main
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/fullstack/__init__.py#n13 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/fullstack/__init__.py#n16 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/fullstack/agents/dhcp_agent.py#n24 : from neutron.cmd.eventlet.agents import dhcp as dhcp_agent
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/fullstack/agents/l3_agent.py#n21 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/fullstack/agents/l3_agent.py#n24 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/__init__.py#n23 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/__init__.py#n26 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/l2/base.py#n20 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/l2/base.py#n57 : self.init_done_ev = eventlet.event.Event()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/l2/base.py#n58 : self.main_ev = eventlet.event.Event()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/l2/base.py#n72 : self._main_thread = eventlet.spawn(self._kick_main)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/l2/base.py#n234 : self.agent_thread = eventlet.spawn(agent.rpc_loop,
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/linux/bin/ipt_binname.py#n36 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/linux/bin/ipt_binname.py#n39 : eventlet.spawn(print_binary_name).wait()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/linux/test_async_process.py#n15 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/linux/test_async_process.py#n40 : eventlet.sleep(0.01)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/linux/test_iptables.py#n187 : def test_binary_name_eventlet_spawn(self):
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/test_dhcp_agent.py#n20 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/agent/test_dhcp_agent.py#n247 : eventlet.sleep(10)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/cmd/test_netns_cleanup.py#n20 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/functional/cmd/test_netns_cleanup.py#n80 : except eventlet.Timeout:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/__init__.py#n16 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/__init__.py#n19 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n19 : import eventlet.event
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n20 : from eventlet.green import subprocess
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n21 : import eventlet.queue
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n45 : with mock.patch('eventlet.spawn') as mock_spawn:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n49 : self.assertIsInstance(proc._kill_event, eventlet.event.Event)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n87 : with mock.patch('eventlet.sleep') as sleep:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n120 : self._test__watch_process(lambda: None, eventlet.event.Event())
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n124 : eventlet.event.Event())
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n132 : kill_event = eventlet.event.Event()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n137 : queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n168 : result = list(self.proc._iter_queue(eventlet.queue.LightQueue(),
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/common/test_async_process.py#n173 : queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n24 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n340 : eventlet.greenthread.sleep(1)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n357 : with mock.patch.object(dhcp_agent.eventlet,
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n504 : with mock.patch.object(dhcp_agent.eventlet.GreenPool, 'waitall') as w:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n543 : with mock.patch.object(dhcp_agent.eventlet, 'spawn') as spawn:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n549 : with mock.patch.object(dhcp_agent.eventlet, 'spawn') as spawn:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n560 : with mock.patch.object(dhcp_agent.eventlet, 'sleep',
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n574 : with mock.patch.object(dhcp_agent.eventlet, 'sleep',
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n590 : with mock.patch.object(dhcp_agent.eventlet, 'sleep',
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n618 : with mock.patch.object(dhcp_agent.eventlet, 'sleep',
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/dhcp/test_agent.py#n639 : with mock.patch.object(dhcp_agent.eventlet, 'sleep',
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_agent.py#n25 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_agent.py#n81 : mock.patch('eventlet.spawn').start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_agent.py#n257 : eventlet.sleep(0.2)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_agent.py#n261 : eventlet.sleep(self.conf.ha_vrrp_advert_int + 2)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_agent.py#n298 : eventlet.sleep(self.conf.ha_vrrp_advert_int + 2)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_agent.py#n314 : eventlet.sleep(self.conf.ha_vrrp_advert_int + 2)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_agent.py#n441 : mock.patch.object(eventlet, 'spawn_n'):
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/l3/test_dvr_local_router.py#n52 : mock.patch('eventlet.spawn').start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_external_process.py#n54 : self.spawn_patch = mock.patch("eventlet.spawn")
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_ip_lib.py#n1081 : @mock.patch('eventlet.spawn_n')
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_ip_lib.py#n1121 : @mock.patch('eventlet.spawn_n')
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_ip_lib.py#n1142 : @mock.patch('eventlet.spawn_n')
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_iptables_firewall.py#n73 : mock.patch('eventlet.spawn_n').start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_utils.py#n40 : self.process = mock.patch('eventlet.green.subprocess.Popen').start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_utils.py#n492 : self.ewhi = mock.patch('eventlet.wsgi.HttpProtocol.__init__').start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_utils.py#n526 : self.eventlet_p = mock.patch.object(utils, 'eventlet')
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_utils.py#n527 : self.eventlet = self.eventlet_p.start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_utils.py#n534 : self.eventlet.assert_has_calls([
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_utils.py#n547 : self.eventlet.wsgi.server.assert_called_once_with(
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/linux/test_utils.py#n562 : self.eventlet.wsgi.server.assert_called_once_with(
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/metadata/test_driver.py#n95 : mock.patch('eventlet.spawn').start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/agent/ovn/metadata/test_driver.py#n57 : mock.patch('eventlet.spawn').start()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/api/test_wsgi.py#n122 : with mock.patch.object(wsgi.eventlet, 'listen') as mock_listen:
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/api/test_wsgi.py#n198 : @mock.patch.object(wsgi, 'eventlet')
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/api/test_wsgi.py#n199 : def test__run(self, eventlet_mock):
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/api/test_wsgi.py#n202 : eventlet_mock.wsgi.server.assert_called_once_with(
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n22 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n23 : from eventlet import queue
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n123 : gt = eventlet.spawn(func)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n135 : gt = eventlet.spawn(func)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n147 : pool = eventlet.GreenPool(4)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n167 : pool = eventlet.GreenPool(4)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n413 : sleep = utils.eventlet.sleep
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n419 : with mock.patch.object(utils.eventlet, "sleep",
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/common/test_utils.py#n556 : eventlet.spawn(thread_with_no_leaked_profiler)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/db/test_db_base_plugin_v2.py#n23 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/db/test_db_base_plugin_v2.py#n6913 : In this test we start an update of the name on a model in an eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/db/test_db_base_plugin_v2.py#n6933 : coro = eventlet.spawn(_lock_blocked_name_update)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/db/test_db_base_plugin_v2.py#n6937 : eventlet.sleep(0)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/db/test_db_base_plugin_v2.py#n7076 : eventlet.sleep(0)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/db/test_db_base_plugin_v2.py#n7083 : coro = eventlet.spawn(_lock_blocked_object_delete)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/db/test_db_base_plugin_v2.py#n7087 : eventlet.sleep(0)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_batch_notifier.py#n18 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_batch_notifier.py#n28 : self._received_events = eventlet.Queue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_batch_notifier.py#n30 : self.spawn_n_p = mock.patch.object(eventlet, 'spawn_n')
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_batch_notifier.py#n58 : eventlet.sleep(0)  # yield to let coro execute
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_batch_notifier.py#n72 : eventlet.sleep(0)  # yield to let coro execute
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_ironic.py#n18 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_ironic.py#n170 : @mock.patch.object(eventlet, 'spawn_n', autospec=True)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_nova.py#n19 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_nova.py#n411 : _queue = eventlet.queue.Queue()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_nova.py#n416 : eventlet.sleep(0)  # Next thread execution.
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_nova.py#n422 : eventlet.sleep(0)  # Next thread execution.
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/notifiers/test_nova.py#n428 : pool = eventlet.GreenPool(num_threads)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/plugins/ml2/drivers/ovn/agent/test_neutron_agent.py#n18 : import eventlet
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/plugins/ml2/drivers/ovn/agent/test_neutron_agent.py#n54 : eventlet.sleep(0)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/plugins/ml2/drivers/ovn/agent/test_neutron_agent.py#n68 : pool = eventlet.GreenPool(2)
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/tests/test_base.py#n21 : import eventlet.timeout
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/tests/test_base.py#n81 : raise eventlet.Timeout()
https://opendev.org/openstack/neutron/src/branch/master/neutron/tests/unit/tests/test_base.py#n90 : except eventlet.Timeout:
https://opendev.org/openstack/neutron/src/branch/master/neutron/wsgi/api.py#n19 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron/src/branch/master/neutron/wsgi/api.py#n20 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron/src/branch/master/neutron/wsgi/api.py#n25 : from neutron.server import api_eventlet  # noqa:E402
https://opendev.org/openstack/neutron/src/branch/master/neutron/wsgi/api.py#n31 : application = server.boot_server(api_eventlet.eventlet_api_server)
https://opendev.org/openstack/neutron/src/branch/master/requirements.txt#n11 : eventlet>=0.36.1 # MIT
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n34 : neutron-api = neutron.cmd.eventlet.server:main_api_eventlet
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n37 : neutron-dhcp-agent = neutron.cmd.eventlet.agents.dhcp:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n40 : neutron-l3-agent = neutron.cmd.eventlet.agents.l3:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n41 : neutron-linuxbridge-agent = neutron.cmd.eventlet.plugins.linuxbridge_neutron_agent:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n43 : neutron-macvtap-agent = neutron.cmd.eventlet.plugins.macvtap_neutron_agent:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n44 : neutron-metadata-agent = neutron.cmd.eventlet.agents.metadata:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n46 : neutron-openvswitch-agent = neutron.cmd.eventlet.plugins.ovs_neutron_agent:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n49 : neutron-server = neutron.cmd.eventlet.server:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n50 : neutron-rpc-server = neutron.cmd.eventlet.server:main_rpc_eventlet
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n53 : neutron-usage-audit = neutron.cmd.eventlet.usage_audit:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n54 : neutron-metering-agent = neutron.cmd.eventlet.services.metering_agent:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n55 : neutron-sriov-nic-agent = neutron.cmd.eventlet.plugins.sriov_nic_neutron_agent:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n57 : neutron-periodic-workers = neutron.cmd.eventlet.server:main_periodic_eventlet
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n59 : neutron-ovn-agent = neutron.cmd.eventlet.agents.ovn_neutron_agent:main
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n60 : neutron-ovn-maintenance-worker = neutron.cmd.eventlet.server:main_ovn_maintenance_eventlet
https://opendev.org/openstack/neutron/src/branch/master/setup.cfg#n61 : neutron-ovn-metadata-agent = neutron.cmd.eventlet.agents.ovn_metadata:main
https://opendev.org/openstack/neutron-dynamic-routing/src/branch/master/neutron_dynamic_routing/cmd/eventlet/__init__.py#n13 : import eventlet
https://opendev.org/openstack/neutron-dynamic-routing/src/branch/master/neutron_dynamic_routing/cmd/eventlet/__init__.py#n16 : eventlet.monkey_patch()
https://opendev.org/openstack/neutron-dynamic-routing/src/branch/master/neutron_dynamic_routing/tests/unit/services/bgp/agent/test_bgp_dragent.py#n20 : import eventlet
https://opendev.org/openstack/neutron-dynamic-routing/src/branch/master/neutron_dynamic_routing/tests/unit/services/bgp/agent/test_bgp_dragent.py#n96 : eventlet.greenthread.sleep(1)
https://opendev.org/openstack/neutron-dynamic-routing/src/branch/master/requirements.txt#n6 : eventlet>=0.27.0 # MIT
https://opendev.org/openstack/neutron-dynamic-routing/src/branch/master/setup.cfg#n31 : neutron-bgp-dragent = neutron_dynamic_routing.cmd.eventlet.agents.bgp_dragent:main
https://opendev.org/openstack/neutron-fwaas/src/branch/master/neutron_fwaas/privileged/netfilter_log/libnetfilter_log.py#n22 : import eventlet
https://opendev.org/openstack/neutron-fwaas/src/branch/master/neutron_fwaas/privileged/netfilter_log/libnetfilter_log.py#n23 : from eventlet.green import zmq
https://opendev.org/openstack/neutron-fwaas/src/branch/master/neutron_fwaas/privileged/netfilter_log/libnetfilter_log.py#n331 : eventlet.spawn_n(loop)
https://opendev.org/openstack/neutron-fwaas/src/branch/master/neutron_fwaas/tests/fullstack/__init__.py#n13 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron-fwaas/src/branch/master/neutron_fwaas/tests/fullstack/__init__.py#n16 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron-fwaas/src/branch/master/neutron_fwaas/tests/unit/privileged/netfilter_log/test_libnetfilter_log.py#n37 : self.spawn = mock.patch('eventlet.spawn').start()
https://opendev.org/openstack/neutron-fwaas/src/branch/master/requirements.txt#n1 : eventlet!=0.18.3,!=0.20.1,>=0.18.2 # MIT
https://opendev.org/openstack/neutron-lib/src/branch/master/HACKING.rst#n20 : - [N535] Usage of Python eventlet module not allowed
https://opendev.org/openstack/neutron-lib/src/branch/master/doc/source/contributor/review-guidelines.rst#n69 : - eventlet
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/hacking/checks.py#n164 : def check_no_eventlet_imports(logical_line):
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/hacking/checks.py#n165 : """N535 - Usage of Python eventlet module not allowed.
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/hacking/checks.py#n172 : if re.match(r'(import|from)\s+[(]?eventlet', logical_line):
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/hacking/checks.py#n173 : msg = 'N535: Usage of Python eventlet module not allowed'
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/hacking/checks.py#n174 : yield logical_line.index('eventlet'), msg
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n138 : def test_check_eventlet_imports(self):
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n139 : f = checks.check_no_eventlet_imports
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n140 : self.assertLineFails(f, "import eventlet")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n141 : self.assertLineFails(f, "import eventlet.timeout")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n142 : self.assertLineFails(f, "from eventlet import timeout")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n143 : self.assertLineFails(f, "from eventlet.timeout import Timeout")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n144 : self.assertLineFails(f, "from eventlet.timeout import (Timeout, X)")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n145 : self.assertLinePasses(f, "import is.not.eventlet")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n146 : self.assertLinePasses(f, "from is.not.eventlet")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n147 : self.assertLinePasses(f, "from mymod import eventlet")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n148 : self.assertLinePasses(f, "from mymod.eventlet import amod")
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n149 : self.assertLinePasses(f, 'print("eventlet not here")')
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n150 : self.assertLinePasses(f, 'print("eventlet.timeout")')
https://opendev.org/openstack/neutron-lib/src/branch/master/neutron_lib/tests/unit/hacking/test_checks.py#n151 : self.assertLinePasses(f, "from mymod.timeout import (eventlet, X)")
https://opendev.org/openstack/neutron-lib/src/branch/master/tox.ini#n119 : N535 = neutron_lib.hacking.checks:check_no_eventlet_imports
https://opendev.org/openstack/neutron-specs/src/branch/master/specs/archive/kilo/pydev-debugger-support.rst#n48 : Minor modifications are required to deal with the multiple calls to the eventlet
https://opendev.org/openstack/neutron-specs/src/branch/master/specs/archive/kilo/pydev-debugger-support.rst#n53 : Calls to eventlet monkey patcher have to be changed to leverage this new module
https://opendev.org/openstack/neutron-specs/src/branch/master/specs/archive/kilo/pydev-debugger-support.rst#n128 : 3rd party Neutron code should re-use the common `eventlet_patcher.py` lib to get
https://opendev.org/openstack/neutron-specs/src/branch/master/specs/kilo/hyper-v-ovs-agent.rst#n27 : agent.linux.ovs_lib. It is also used by eventlet to set non blocking I/O.
https://opendev.org/openstack/neutron-specs/src/branch/master/specs/liberty/better-quotas.rst#n145 : eventlet, which with the default MySql setting block threads for about 50
https://opendev.org/openstack/neutron-specs/src/branch/master/specs/liberty/ovs-ofctl-to-python.rst#n238 : [#ryu_req]_.  A few exceptions like eventlet are already covered by
https://opendev.org/openstack/neutron-specs/src/branch/master/specs/liberty/reference-ipam-driver.rst#n175 : a DB transaction, thus creating the conditions for eventlet yields leading
https://opendev.org/openstack/neutron-tempest-plugin/src/branch/master/neutron_tempest_plugin/common/utils.py#n28 : import eventlet
https://opendev.org/openstack/neutron-tempest-plugin/src/branch/master/neutron_tempest_plugin/common/utils.py#n83 : with eventlet.Timeout(timeout):
https://opendev.org/openstack/neutron-tempest-plugin/src/branch/master/neutron_tempest_plugin/common/utils.py#n85 : eventlet.sleep(sleep)
https://opendev.org/openstack/neutron-tempest-plugin/src/branch/master/neutron_tempest_plugin/common/utils.py#n86 : except eventlet.Timeout:
https://opendev.org/openstack/neutron-tempest-plugin/src/branch/master/requirements.txt#n15 : eventlet>=0.21.0 # MIT
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/cmd/eventlet/__init__.py#n1 : from neutron.common import eventlet_utils
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/cmd/eventlet/__init__.py#n3 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/services/vpn/common/netns_wrapper.py#n21 : from eventlet.green import subprocess
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/services/vpn/device_drivers/ipsec.py#n26 : import eventlet
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/services/vpn/device_drivers/ipsec.py#n593 : eventlet.sleep(wait_interval)
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/tests/unit/services/vpn/device_drivers/test_ipsec.py#n1345 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/tests/unit/services/vpn/device_drivers/test_ipsec.py#n1364 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/neutron_vpnaas/tests/unit/services/vpn/device_drivers/test_ipsec.py#n1386 : @mock.patch('eventlet.sleep')
https://opendev.org/openstack/neutron-vpnaas/src/branch/master/setup.cfg#n35 : neutron-ovn-vpn-agent = neutron_vpnaas.cmd.eventlet.ovn_agent:main
https://opendev.org/openstack/nova/src/branch/master/.coveragerc#n5 : concurrency = eventlet
https://opendev.org/openstack/nova/src/branch/master/HACKING.rst#n45 : - [N340] Check nova.utils.spawn() is used instead of greenthread.spawn() and eventlet.spawn()
https://opendev.org/openstack/nova/src/branch/master/HACKING.rst#n76 : with eventlet patched code. Use nova.utils.ReaderWriterLock() instead.
https://opendev.org/openstack/nova/src/branch/master/doc/source/admin/index.rst#n110 : WSGI container instead of the baked-in eventlet web server.
https://opendev.org/openstack/nova/src/branch/master/doc/source/cli/opts/debugger.rst#n6 : uses the eventlet library to support async IO. This could result in
https://opendev.org/openstack/nova/src/branch/master/doc/source/cli/opts/debugger.rst#n14 : how Nova uses the eventlet library to support async IO. This could result
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/index.rst#n121 : * :doc:`/contributor/testing/eventlet-profiling`
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/index.rst#n133 : testing/eventlet-profiling
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n10 : Because most Nova services use eventlet_, the standard profiling tool provided
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n12 : changing tasks. Thankfully eventlet comes with
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n13 : ``eventlet.green.profile.Profile``, a mostly undocumented class that provides a
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n17 : .. note:: The eventlet Profile outputs the ``prof`` format produced by
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n20 : so the options for analyzing eventlet profiling are not always
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n59 : .. note:: ``stop()`` and ``start()`` are two of the ways in which the eventlet
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n117 : +        from eventlet.green import profile
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n198 : Real world use indicates that the eventlet profiler is not perfect. There are
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n202 : to these issues; profiling eventlet services is more an art than science.
https://opendev.org/openstack/nova/src/branch/master/doc/source/contributor/testing/eventlet-profiling.rst#n268 : .. _eventlet: https://eventlet.net/
https://opendev.org/openstack/nova/src/branch/master/doc/source/index.rst#n161 : WSGI container instead of the baked-in eventlet web server.
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/index.rst#n26 : based on eventlet, and may not be familiar to everyone.
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n5 : through using the Python `eventlet <http://eventlet.net/>`_ and
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n9 : switches can only occur when specific eventlet or greenlet library calls are
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n23 : that trigger an eventlet context switch, the long-running thread will block
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n26 : This scenario can be avoided by adding calls to the eventlet sleep method
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n31 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n36 : time module is patched through eventlet.monkey_patch(). To be explicit, we recommend
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n39 : MySQL access and eventlet
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n43 : eventlet. MySQL-python uses an external C library for accessing the MySQL database.
https://opendev.org/openstack/nova/src/branch/master/doc/source/reference/threading.rst#n44 : Since eventlet cannot use monkey-patching to intercept blocking calls in a C library,
https://opendev.org/openstack/nova/src/branch/master/doc/source/user/wsgi.rst#n5 : provide eventlet-based HTTP servers, it is generally considered more performant
https://opendev.org/openstack/nova/src/branch/master/doc/source/user/wsgi.rst#n28 : eventlet-based scripts).
https://opendev.org/openstack/nova/src/branch/master/etc/nova/logging_sample.conf#n50 : [logger_eventletwsgi]
https://opendev.org/openstack/nova/src/branch/master/etc/nova/logging_sample.conf#n53 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/nova/src/branch/master/nova/api/openstack/requestlog.py#n55 : If we detect we are running under eventlet wsgi processing, we
https://opendev.org/openstack/nova/src/branch/master/nova/api/openstack/requestlog.py#n59 : if req.environ.get('eventlet.input', None) is not None:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n42 : import eventlet.event
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n43 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n44 : import eventlet.semaphore
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n45 : import eventlet.timeout
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n243 : _InstanceEvents = ty.Dict[ty.Tuple[str, str], eventlet.event.Event]
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n259 : ) -> eventlet.event.Event:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n264 : action will trigger the event. The resulting eventlet.event.Event
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n282 : eventlet.event.Event())
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n296 : :returns: the eventlet.event.Event object on which the waiters
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n346 : :returns: a dictionary of {event_name: eventlet.event.Event}
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n370 : for (name, tag), eventlet_event in events.items():
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n380 : eventlet_event.send(event)
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n416 : def __init__(self, name: str, event: eventlet.event.Event) -> None:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n437 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n490 : Note that this uses an eventlet.timeout.Timeout to bound the
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n495 : eventlet.timeout.Timeout is raised.
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n558 : with eventlet.timeout.Timeout(deadline):
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n561 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n644 : self._sync_power_pool = eventlet.GreenPool(
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n650 : self._build_semaphore = eventlet.semaphore.Semaphore(
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n655 : self._snapshot_semaphore = eventlet.semaphore.Semaphore(
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n1625 : eventlet.semaphore.BoundedSemaphore(
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n2817 : except (Exception, eventlet.timeout.Timeout) as exc:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n3675 : except (Exception, eventlet.timeout.Timeout) as exc:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n7157 : except (Exception, eventlet.timeout.Timeout) as exc:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/manager.py#n8916 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/nova/src/branch/master/nova/compute/multi_cell_list.py#n17 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/compute/multi_cell_list.py#n98 : with eventlet.timeout.Timeout(context.CELL_TIMEOUT, exception.CellTimeout):
https://opendev.org/openstack/nova/src/branch/master/nova/conductor/manager.py#n20 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/conductor/manager.py#n2075 : fetch_pool = eventlet.GreenPool(size=threads)
https://opendev.org/openstack/nova/src/branch/master/nova/conf/remote_debug.py#n30 : Note that using the remote debug option changes how nova uses the eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/conf/remote_debug.py#n49 : Note that using the remote debug option changes how nova uses the eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/conf/wsgi.py#n51 : This option only works when running nova-api under eventlet, and
https://opendev.org/openstack/nova/src/branch/master/nova/conf/wsgi.py#n52 : encodes very eventlet specific pieces of information. Starting in Pike
https://opendev.org/openstack/nova/src/branch/master/nova/conf/wsgi.py#n62 : nova-api under eventlet. If used under uwsgi or apache, this option
https://opendev.org/openstack/nova/src/branch/master/nova/console/websocketproxy.py#n171 : from eventlet import hubs
https://opendev.org/openstack/nova/src/branch/master/nova/context.py#n23 : import eventlet.queue
https://opendev.org/openstack/nova/src/branch/master/nova/context.py#n24 : import eventlet.timeout
https://opendev.org/openstack/nova/src/branch/master/nova/context.py#n417 : queue = eventlet.queue.LightQueue()
https://opendev.org/openstack/nova/src/branch/master/nova/context.py#n437 : with eventlet.timeout.Timeout(timeout, exception.CellTimeout):
https://opendev.org/openstack/nova/src/branch/master/nova/debugger.py#n58 : 'Nova uses the eventlet library to support async IO. This '
https://opendev.org/openstack/nova/src/branch/master/nova/hacking/checks.py#n91 : r".*(eventlet|greenthread)\.(?P<spawn_part>spawn(_n)?)\(.*\)")
https://opendev.org/openstack/nova/src/branch/master/nova/hacking/checks.py#n572 : eventlet.spawn(), and eventlet.spawn_n()
https://opendev.org/openstack/nova/src/branch/master/nova/hacking/checks.py#n577 : "greenthread.%(spawn)s() and eventlet.%(spawn)s()")
https://opendev.org/openstack/nova/src/branch/master/nova/hacking/checks.py#n1019 : and identify lock holders and waiters. The eventlet implementation of
https://opendev.org/openstack/nova/src/branch/master/nova/hacking/checks.py#n1023 : See https://github.com/eventlet/eventlet/issues/731 for details.
https://opendev.org/openstack/nova/src/branch/master/nova/hacking/checks.py#n1028 : "function correctly with eventlet patched code. "
https://opendev.org/openstack/nova/src/branch/master/nova/monkey_patch.py#n19 : """Enable eventlet monkey patching."""
https://opendev.org/openstack/nova/src/branch/master/nova/monkey_patch.py#n30 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/monkey_patch.py#n46 : eventlet.monkey_patch(thread=False)
https://opendev.org/openstack/nova/src/branch/master/nova/monkey_patch.py#n50 : eventlet.monkey_patch(os=False)
https://opendev.org/openstack/nova/src/branch/master/nova/monkey_patch.py#n52 : eventlet.monkey_patch()
https://opendev.org/openstack/nova/src/branch/master/nova/monkey_patch.py#n76 : LOG.warning("Modules with known eventlet monkey patching issues were "
https://opendev.org/openstack/nova/src/branch/master/nova/monkey_patch.py#n77 : "imported prior to eventlet monkey patching: %s. This "
https://opendev.org/openstack/nova/src/branch/master/nova/rpc.py#n223 : executor='eventlet',
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n27 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n28 : import eventlet.wsgi
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n336 : protocol=eventlet.wsgi.HttpProtocol, backlog=128,
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n344 : :param pool_size: Maximum number of eventlets to spawn concurrently.
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n351 : eventlet.wsgi.MAX_HEADER_LINE = CONF.wsgi.max_header_line
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n357 : self._pool = eventlet.GreenPool(self.pool_size)
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n382 : self._socket = eventlet.listen(bind_addr, family, backlog=backlog)
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n449 : dup_socket = eventlet.wrap_ssl(dup_socket,
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n460 : 'func': eventlet.wsgi.server,
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n489 : server is stopped is by killing its eventlet.
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n504 : Waits on the server's eventlet to finish, then returns.
https://opendev.org/openstack/nova/src/branch/master/nova/service.py#n533 : LOG.warning('Running %s using eventlet is deprecated. Deploy with '
https://opendev.org/openstack/nova/src/branch/master/nova/storage/rbd_utils.py#n19 : from eventlet import tpool
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/notifications.py#n17 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/notifications.py#n154 : current = eventlet.getcurrent()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/notifications.py#n172 : 'probably leaked a running eventlet that emitted '
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/notifications.py#n174 : 'eventlet is terminated by raising this exception.' %
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n31 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n563 : executor='eventlet',
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1150 : self.greenpool = eventlet.greenpool.GreenPool()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1169 : if isinstance(gt, eventlet.greenthread.GreenThread):
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1172 : utils.DEFAULT_GREEN_POOL = eventlet.greenpool.GreenPool()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1174 : isinstance(gt, eventlet.greenthread.GreenThread)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1762 : eventlet. This information then later used by the NotificationFixture to
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1763 : detect if a notification was emitted by an eventlet that was spawned by a
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1777 : c = eventlet.getcurrent()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1785 : caller = eventlet.getcurrent()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1797 : current = eventlet.getcurrent()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1816 : caller = eventlet.getcurrent()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1828 : current = eventlet.getcurrent()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1843 : """Wrap oslo.concurrency lockutils.ReaderWriterLock to support eventlet.
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1845 : As of fasteners >= 0.15, the workaround code to use eventlet.getcurrent()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1846 : if eventlet patching is detected has been removed and
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1849 : type GreenThread. A GreenThread is created by calling eventlet.spawn() and
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1851 : eventlet patched threading.current_thread() method falls back to the
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1856 : eventlet.getcurrent() during creation of the lock object, if we detect we
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1857 : are eventlet patched. If we are not eventlet patched, we use a no-op
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1863 : See https://github.com/eventlet/eventlet/issues/731 for details.
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1865 : [1] https://github.com/eventlet/eventlet/blob/v0.32.0/eventlet/green/threading.py#L128  # noqa
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1869 : eventlet_patched = eventlet.patcher.is_monkey_patched('thread')
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1871 : 'threading.current_thread', eventlet.getcurrent)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n1872 : with mpatch if eventlet_patched else contextlib.ExitStack():
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n2007 : created by eventlet.spawn_n(). Bare greenlets cannot be killed the same
https://opendev.org/openstack/nova/src/branch/master/nova/tests/fixtures/nova.py#n2008 : way as GreenThreads created by eventlet.spawn().
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/api/openstack/test_requestlog.py#n26 : other than eventlet. While Nova grew up on eventlet, and it's wsgi
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/api/openstack/test_requestlog.py#n28 : of what Nova was emitting, and what eventlet.wsgi was emitting on our
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/api/openstack/test_requestlog.py#n127 : def test_no_log_under_eventlet(self, emit):
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/api/openstack/test_requestlog.py#n128 : """Ensure that logs don't end up under eventlet.
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/api/openstack/test_requestlog.py#n131 : the situation where eventlet is removed from tests and this
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/api/openstack/test_requestlog.py#n134 : NOTE(sdague): this test can be deleted when eventlet is no
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/eventlet_utils.py#n15 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/eventlet_utils.py#n18 : class SyncPool(eventlet.GreenPool):
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute.py#n74 : from nova.tests.unit.compute import eventlet_utils
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute.py#n162 : self.compute._sync_power_pool = eventlet_utils.SyncPool()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute.py#n390 : self.stub_out('eventlet.greenthread.sleep',
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n25 : from eventlet import event as eventlet_event
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n26 : from eventlet import timeout as eventlet_timeout
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n3865 : event = eventlet_event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n3881 : event = eventlet_event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n3916 : event = eventlet_event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n4393 : fake_eventlet_event = mock.MagicMock()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n4396 : ('network-vif-plugged', uuids.portid): fake_eventlet_event,
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n4402 : self.assertTrue(fake_eventlet_event.send.called)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n4403 : event = fake_eventlet_event.send.call_args_list[0][0][0]
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n6948 : mock_wait_inst_ev.side_effect = eventlet_timeout.Timeout
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n6950 : self.assertRaises(eventlet_timeout.Timeout,
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n10385 : eventlet Timeout exception and we're configured such that vif plugging
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n10403 : eventlet_timeout.Timeout())
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n10423 : eventlet Timeout exception and we're configured such that vif plugging
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_compute_mgr.py#n10441 : eventlet_timeout.Timeout())
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_shelve.py#n15 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_shelve.py#n451 : mock_get_arqs.side_effect = eventlet.timeout.Timeout()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_shelve.py#n453 : self.assertRaises(eventlet.timeout.Timeout,
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_virtapi.py#n18 : import eventlet.timeout
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_virtapi.py#n202 : side_effect=eventlet.timeout.Timeout())
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_virtapi.py#n208 : self.assertRaises(eventlet.timeout.Timeout, do_test)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_virtapi.py#n241 : raise eventlet.timeout.Timeout()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_virtapi.py#n251 : self.assertRaises(eventlet.timeout.Timeout, do_test)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_virtapi.py#n285 : raise eventlet.timeout.Timeout()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/compute/test_virtapi.py#n317 : self.assertRaises(eventlet.timeout.Timeout, do_test)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/fake_processutils.py#n19 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/storage/test_rbd.py#n15 : from eventlet import tpool
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_context.py#n365 : @mock.patch('eventlet.timeout.Timeout')
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_context.py#n366 : @mock.patch('eventlet.queue.LightQueue.get')
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_hacking.py#n438 : code = "eventlet.greenthread.spawn(func, arg1, kwarg1=kwarg1)"
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_hacking.py#n442 : code = "eventlet.spawn(func, arg1, kwarg1=kwarg1)"
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_hacking.py#n446 : code = "eventlet.spawn_n(func, arg1, kwarg1=kwarg1)"
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_rpc.py#n249 : executor='eventlet', serializer=ser,
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_rpc.py#n291 : executor='eventlet', serializer=ser,
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_service.py#n25 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_service.py#n26 : import eventlet.wsgi
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_service.py#n337 : eventlet.wsgi.MAX_HEADER_LINE)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_service.py#n398 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/test_service.py#n404 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/disk/mount/test_nbd.py#n22 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/disk/mount/test_nbd.py#n328 : thread1 = eventlet.spawn(get_a_device)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/disk/mount/test_nbd.py#n329 : thread2 = eventlet.spawn(get_a_device)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/disk/vfs/test_guestfs.py#n346 : with mock.patch('eventlet.tpool.Proxy', return_value=m) as tpool_mock:
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/disk/vfs/test_guestfs.py#n357 : """Asserts that we do not use an eventlet thread pool when guestfs
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/disk/vfs/test_guestfs.py#n365 : with mock.patch('eventlet.tpool.Proxy',
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n38 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n39 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n561 : wait1 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n562 : done1 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n563 : sig1 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n564 : thr1 = eventlet.spawn(backend.by_name(self._fake_instance(uuid),
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n568 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n572 : wait2 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n573 : done2 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n574 : sig2 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n575 : thr2 = eventlet.spawn(backend.by_name(self._fake_instance(uuid),
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n581 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n587 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n599 : wait1 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n600 : done1 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n601 : sig1 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n602 : thr1 = eventlet.spawn(backend.by_name(self._fake_instance(uuid),
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n606 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n610 : wait2 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n611 : done2 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n612 : sig2 = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n613 : thr2 = eventlet.spawn(backend.by_name(self._fake_instance(uuid),
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n617 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n624 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n630 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n13956 : side_effect=lambda x: eventlet.sleep(0))
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n13989 : finish_event = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n14672 : return type(other) is eventlet.event.Event
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n15455 : @mock.patch.object(eventlet.greenthread, 'sleep',
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n15456 : side_effect=eventlet.sleep(0))
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n15483 : @mock.patch.object(eventlet.greenthread, 'sleep',
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n15484 : side_effect=eventlet.sleep(0))
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n20652 : raise eventlet.timeout.Timeout()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_driver.py#n28977 : @mock.patch.object(eventlet.tpool, 'execute')
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n21 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n22 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n23 : from eventlet import tpool
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n353 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n381 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n396 : thr1 = eventlet.spawn(get_conn_currency, self.host)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n397 : thr2 = eventlet.spawn(get_conn_currency, self.host)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n400 : eventlet.sleep(0)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/test_host.py#n460 : event = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/volume/test_mount.py#n20 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/volume/test_mount.py#n85 : self.start_event = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/volume/test_mount.py#n100 : self.thread = eventlet.greenthread.spawn(deferred_start)
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/volume/test_mount.py#n105 : return cls.all_threads.get(eventlet.greenthread.getcurrent())
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/libvirt/volume/test_mount.py#n659 : host_up = eventlet.greenthread.spawn(self.m.host_up,
https://opendev.org/openstack/nova/src/branch/master/nova/tests/unit/virt/vmwareapi/test_driver_api.py#n26 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/nova/utils.py#n31 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/utils.py#n32 : from eventlet import tpool
https://opendev.org/openstack/nova/src/branch/master/nova/utils.py#n89 : DEFAULT_GREEN_POOL = eventlet.greenpool.GreenPool(
https://opendev.org/openstack/nova/src/branch/master/nova/utils.py#n670 : """Passthrough method for eventlet.spawn.
https://opendev.org/openstack/nova/src/branch/master/nova/utils.py#n684 : """Passthrough method for eventlet.greenpool.spawn_n.
https://opendev.org/openstack/nova/src/branch/master/nova/virt/disk/vfs/guestfs.py#n17 : from eventlet import tpool
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/driver.py#n51 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/driver.py#n52 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/driver.py#n53 : from eventlet import tpool
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/driver.py#n196 : """eventlet.tpool.Proxy doesn't work with old-style class in __str__()
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/driver.py#n8135 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/driver.py#n11203 : finish_event = eventlet.event.Event()
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n42 : from eventlet import greenio
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n43 : from eventlet import greenthread
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n44 : from eventlet import patcher
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n45 : from eventlet import tpool
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n207 : eventlet's greenthread integration
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n249 : an eventlet coroutine. It can only invoke other libvirt
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n262 : an eventlet coroutine. It can only invoke other libvirt
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n275 : an eventlet coroutine. It can only invoke other libvirt
https://opendev.org/openstack/nova/src/branch/master/nova/virt/libvirt/host.py#n462 : This code is taken from the eventlet tpool module, under terms
https://opendev.org/openstack/nova/src/branch/master/nova/virt/zvm/driver.py#n15 : import eventlet
https://opendev.org/openstack/nova/src/branch/master/nova/virt/zvm/driver.py#n290 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/deprecate-api-eventlet-1a0279f1f2333082.yaml#n4 : Running API services (nova-osapi_compute or nova-metadata) with eventlet
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/deprecate_wsgi_log_format-43a10b7a608ea8f3.yaml#n5 : applies when running nova-api under eventlet, which is no longer
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/dnspython-2.0.0-not-supported-by-eventlet-b8adf73ed9e14817.yaml#n4 : The dnspython 2.0.0 package is incompatible with even the latest eventlet
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/dnspython-2.0.0-not-supported-by-eventlet-b8adf73ed9e14817.yaml#n6 : of the dnspython package is equal or greater than 2.0.0. See `eventlet
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/dnspython-2.0.0-not-supported-by-eventlet-b8adf73ed9e14817.yaml#n9 : .. _eventlet issue 619: https://github.com/eventlet/eventlet/issues/619
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/greendns-34df7f9fba952bcd.yaml#n4 : During the havana cycle it was discovered that eventlet
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/greendns-34df7f9fba952bcd.yaml#n7 : Since then nova has been disabling eventlet monkey patching
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/request_log-e7680b3276910743.yaml#n5 : even if Nova API is not running under eventlet.wsgi. Because this
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/request_log-e7680b3276910743.yaml#n9 : detected that nova-api is not running under eventlet, and will
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/wsgi-applications-8017c3192d2b143e.yaml#n7 : or gunicorn). The eventlet-based servers are still available, but the WSGI
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/zookeeper-servicegroup-driver-removed-c3bcaa6f9fe976ed.yaml#n9 : `incompatible with recent eventlet releases`_.
https://opendev.org/openstack/nova/src/branch/master/releasenotes/notes/zookeeper-servicegroup-driver-removed-c3bcaa6f9fe976ed.yaml#n14 : .. _`incompatible with recent eventlet releases`: https://bugs.launchpad.net/nova/+bug/1443910
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n523 : "Nova API is not running under eventlet.wsgi. Because this is an api-paste."
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n526 : "emit when it is detected that nova-api is not running under eventlet, and "
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n530 : "新しい request_log ミドルウェアが、たとえ Nova API が eventlet.wsgi 下で動作"
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n533 : "があります。新しいリクエストログは nova-api が eventlet 下で動作していないこ"
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n1290 : "when running nova-api under eventlet, which is no longer the preferred "
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n1293 : "``wsgi_log_format`` 設定オプションは非推奨となりました。これは eventlet 配下"
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n3521 : "`incompatible with recent eventlet releases`_."
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/locale/ja/LC_MESSAGES/releasenotes.po#n3526 : "`incompatible with recent eventlet releases`_ です。"
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/mitaka.rst#n644 : `incompatible with recent eventlet releases`_.
https://opendev.org/openstack/nova/src/branch/master/releasenotes/source/mitaka.rst#n649 : .. _`incompatible with recent eventlet releases`: https://bugs.launchpad.net/nova/+bug/1443910
https://opendev.org/openstack/nova/src/branch/master/requirements.txt#n8 : eventlet>=0.30.1 # MIT
https://opendev.org/openstack/nova-specs/src/branch/master/specs/abandoned/parallel-scheduler.rst#n48 : * The C based DB driver and eventlet means the scheduler performs best
https://opendev.org/openstack/nova-specs/src/branch/master/specs/abandoned/parallel-scheduler.rst#n49 : when the eventlet thread pool is very small, ideally less than 5.
https://opendev.org/openstack/nova-specs/src/branch/master/specs/liberty/approved/service-group-using-tooz.rst#n27 : maintained and doesn't work with eventlet >= 0.17.1.
https://opendev.org/openstack/nova-specs/src/branch/master/specs/rocky/implemented/abort-live-migration-in-queued-status.rst#n67 : the current ``eventlet.spawn_n()`` + python ``Semaphore`` implementation.
https://opendev.org/openstack/octavia/src/branch/master/HACKING.rst#n32 : - [O345] Usage of Python eventlet module not allowed
https://opendev.org/openstack/octavia/src/branch/master/octavia/hacking/checks.py#n66 : no_eventlet_re = re.compile(r'(import|from)\s+[(]?eventlet')
https://opendev.org/openstack/octavia/src/branch/master/octavia/hacking/checks.py#n200 : def check_no_eventlet_imports(logical_line):
https://opendev.org/openstack/octavia/src/branch/master/octavia/hacking/checks.py#n201 : """O345 - Usage of Python eventlet module not allowed.
https://opendev.org/openstack/octavia/src/branch/master/octavia/hacking/checks.py#n208 : if no_eventlet_re.match(logical_line):
https://opendev.org/openstack/octavia/src/branch/master/octavia/hacking/checks.py#n209 : msg = 'O345 Usage of Python eventlet module not allowed'
https://opendev.org/openstack/octavia/src/branch/master/octavia/hacking/checks.py#n210 : yield logical_line.index('eventlet'), msg
https://opendev.org/openstack/octavia/src/branch/master/octavia/tests/unit/hacking/test_checks.py#n187 : def test_check_no_eventlet_imports(self):
https://opendev.org/openstack/octavia/src/branch/master/octavia/tests/unit/hacking/test_checks.py#n188 : f = checks.check_no_eventlet_imports
https://opendev.org/openstack/octavia/src/branch/master/octavia/tests/unit/hacking/test_checks.py#n189 : self.assertLinePasses(f, 'from not_eventlet import greenthread')
https://opendev.org/openstack/octavia/src/branch/master/octavia/tests/unit/hacking/test_checks.py#n190 : self.assertLineFails(f, 'from eventlet import greenthread')
https://opendev.org/openstack/octavia/src/branch/master/octavia/tests/unit/hacking/test_checks.py#n191 : self.assertLineFails(f, 'import eventlet')
https://opendev.org/openstack/octavia/src/branch/master/specs/version0.5/queue-consumer.rst#n33 : The threading will be handled by Oslo messaging using the 'eventlet' executor.
https://opendev.org/openstack/octavia/src/branch/master/specs/version0.5/queue-consumer.rst#n34 : Using the 'eventlet' executor will allow for message throttling and removes
https://opendev.org/openstack/octavia/src/branch/master/specs/version0.5/queue-consumer.rst#n36 : 'eventlet' executor is that the Queue Consumer will not have to spawn threads
https://opendev.org/openstack/octavia/src/branch/master/tox.ini#n194 : O345 = checks:check_no_eventlet_imports
https://opendev.org/openstack/octavia-lib/src/branch/master/HACKING.rst#n33 : - [O345] Usage of Python eventlet module not allowed
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/hacking/checks.py#n67 : no_eventlet_re = re.compile(r'(import|from)\s+[(]?eventlet')
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/hacking/checks.py#n255 : def check_no_eventlet_imports(logical_line):
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/hacking/checks.py#n256 : """O345 - Usage of Python eventlet module not allowed.
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/hacking/checks.py#n263 : if no_eventlet_re.match(logical_line):
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/hacking/checks.py#n264 : msg = 'O345 Usage of Python eventlet module not allowed'
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/hacking/checks.py#n265 : yield logical_line.index('eventlet'), msg
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/tests/unit/hacking/test_checks.py#n194 : def test_check_no_eventlet_imports(self):
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/tests/unit/hacking/test_checks.py#n195 : f = checks.check_no_eventlet_imports
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/tests/unit/hacking/test_checks.py#n196 : self.assertLinePasses(f, 'from not_eventlet import greenthread')
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/tests/unit/hacking/test_checks.py#n197 : self.assertLineFails(f, 'from eventlet import greenthread')
https://opendev.org/openstack/octavia-lib/src/branch/master/octavia_lib/tests/unit/hacking/test_checks.py#n198 : self.assertLineFails(f, 'import eventlet')
https://opendev.org/openstack/octavia-lib/src/branch/master/tox.ini#n100 : O345 = checks:check_no_eventlet_imports
https://opendev.org/openstack/octavia-tempest-plugin/src/branch/master/octavia_tempest_plugin/hacking/checks.py#n66 : no_eventlet_re = re.compile(r'(import|from)\s+[(]?eventlet')
https://opendev.org/openstack/octavia-tempest-plugin/src/branch/master/octavia_tempest_plugin/hacking/checks.py#n202 : def check_no_eventlet_imports(logical_line):
https://opendev.org/openstack/octavia-tempest-plugin/src/branch/master/octavia_tempest_plugin/hacking/checks.py#n203 : """O345 - Usage of Python eventlet module not allowed.
https://opendev.org/openstack/octavia-tempest-plugin/src/branch/master/octavia_tempest_plugin/hacking/checks.py#n210 : if no_eventlet_re.match(logical_line):
https://opendev.org/openstack/octavia-tempest-plugin/src/branch/master/octavia_tempest_plugin/hacking/checks.py#n211 : msg = 'O345 Usage of Python eventlet module not allowed'
https://opendev.org/openstack/octavia-tempest-plugin/src/branch/master/octavia_tempest_plugin/hacking/checks.py#n212 : yield logical_line.index('eventlet'), msg
https://opendev.org/openstack/octavia-tempest-plugin/src/branch/master/tox.ini#n97 : O345 = checks:check_no_eventlet_imports
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_6x/templates/logstash-pipelines.yml.j2#n301 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_6x/templates/logstash-pipelines.yml.j2#n314 : if [module] == "cinder.eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_6x/templates/logstash-pipelines.yml.j2#n357 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_6x/templates/logstash-pipelines.yml.j2#n428 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_6x/templates/logstash-pipelines.yml.j2#n441 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_7x/templates/logstash-pipelines.yml.j2#n301 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_7x/templates/logstash-pipelines.yml.j2#n314 : if [module] == "cinder.eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_7x/templates/logstash-pipelines.yml.j2#n357 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_7x/templates/logstash-pipelines.yml.j2#n428 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-ops/src/branch/master/elk_metrics_7x/templates/logstash-pipelines.yml.j2#n441 : if [module] == "eventlet.wsgi.server" {
https://opendev.org/openstack/openstack-ansible-os_neutron/src/branch/master/releasenotes/notes/disable_neutron_uwsgi_default-1763a0cbc17f23c8.yaml#n5 : eventlet due to found compatability issues for the current OpenStack
https://opendev.org/openstack/openstack-ansible-os_neutron/src/branch/master/releasenotes/notes/disable_neutron_uwsgi_default-1763a0cbc17f23c8.yaml#n12 : In case of switching Neutron from uWSGI to old eventlet,
https://opendev.org/openstack/openstack-helm/src/branch/master/aodh/values.yaml#n506 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/aodh/values.yaml#n509 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/barbican/values.yaml#n462 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/barbican/values.yaml#n465 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/cinder/values.yaml#n884 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/cinder/values.yaml#n887 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/designate/values.yaml#n501 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/designate/values.yaml#n504 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/doc/source/specs/nginx-sidecar.rst#n16 : performance impact, for example, eventlet.
https://opendev.org/openstack/openstack-helm/src/branch/master/glance/values.yaml#n344 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/glance/values.yaml#n347 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/heat/values.yaml#n448 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/heat/values.yaml#n451 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/ironic/values.yaml#n178 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/ironic/values.yaml#n181 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/keystone/values.yaml#n857 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/keystone/values.yaml#n860 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/magnum/values.yaml#n130 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/magnum/values.yaml#n133 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/manila/values.yaml#n795 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/manila/values.yaml#n798 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/mistral/values.yaml#n469 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/mistral/values.yaml#n472 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/monasca/values.yaml#n184 : worker-class: eventlet
https://opendev.org/openstack/openstack-helm/src/branch/master/neutron/values.yaml#n2021 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/neutron/values.yaml#n2024 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/nova/values.yaml#n1516 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/nova/values.yaml#n1519 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/octavia/values.yaml#n292 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/octavia/values.yaml#n295 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/placement/values.yaml#n109 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/placement/values.yaml#n112 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/senlin/values.yaml#n177 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/senlin/values.yaml#n180 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-helm/src/branch/master/tacker/values.yaml#n585 : logger_eventletwsgi:
https://opendev.org/openstack/openstack-helm/src/branch/master/tacker/values.yaml#n588 : qualname: eventlet.wsgi.server
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n2463 : <loc>https://docs.openstack.org/cinder/latest/contributor/api/cinder.wsgi.eventlet_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n56535 : <loc>https://docs.openstack.org/keystone/zed/api/keystone.conf.eventlet_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n56943 : <loc>https://docs.openstack.org/keystone/zed/_modules/keystone/conf/eventlet_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n74715 : <loc>https://docs.openstack.org/nova/latest/contributor/testing/eventlet-profiling.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n90147 : <loc>https://docs.openstack.org/keystone/2023.2/api/keystone.conf.eventlet_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n90687 : <loc>https://docs.openstack.org/keystone/2023.2/_modules/keystone/conf/eventlet_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n103491 : <loc>https://docs.openstack.org/keystone/2023.1/api/keystone.conf.eventlet_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n103887 : <loc>https://docs.openstack.org/keystone/2023.1/_modules/keystone/conf/eventlet_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n112077 : <loc>https://docs.openstack.org/tacker/latest/contributor/api/tacker.common.eventlet_utils.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n115137 : <loc>https://docs.openstack.org/tacker/latest/contributor/api/tacker.cmd.eventlet.tacker_server.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n115143 : <loc>https://docs.openstack.org/tacker/latest/contributor/api/tacker.cmd.eventlet.conductor.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n115149 : <loc>https://docs.openstack.org/tacker/latest/contributor/api/tacker.cmd.eventlet.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n117573 : <loc>https://docs.openstack.org/taskflow/latest/_modules/taskflow/utils/eventlet_utils.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n208653 : <loc>https://docs.openstack.org/oslo.service/2023.1/reference/eventlet_backdoor.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n208881 : <loc>https://docs.openstack.org/oslo.service/latest/reference/eventlet_backdoor.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n213447 : <loc>https://docs.openstack.org/oslo.service/zed/reference/eventlet_backdoor.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n218763 : <loc>https://docs.openstack.org/taskflow/2023.2/_modules/taskflow/utils/eventlet_utils.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n223533 : <loc>https://docs.openstack.org/oslo.service/2023.2/reference/eventlet_backdoor.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n224055 : <loc>https://docs.openstack.org/oslo.utils/2023.2/reference/eventletutils.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n226017 : <loc>https://docs.openstack.org/oslo.utils/latest/reference/eventletutils.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n227517 : <loc>https://docs.openstack.org/oslo.utils/2023.1/reference/eventletutils.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n233151 : <loc>https://docs.openstack.org/oslo.utils/zed/reference/eventletutils.html</loc>
https://opendev.org/openstack/openstack-manuals/src/branch/master/www/static/sitemap.xml#n235035 : <loc>https://docs.openstack.org/taskflow/2023.1/_modules/taskflow/utils/eventlet_utils.html</loc>
https://opendev.org/openstack/os-brick/src/branch/master/os_brick/initiator/connectors/iscsi.py#n601 : too much about the GIL or how the eventlets will handle the context
https://opendev.org/openstack/os-brick/src/branch/master/os_brick/tests/initiator/connectors/test_fibre_channel.py#n517 : @mock.patch('eventlet.greenthread.sleep', mock.Mock())
https://opendev.org/openstack/os-brick/src/branch/master/os_brick/tests/windows/test_rbd.py#n67 : @mock.patch('oslo_utils.eventletutils.EventletEvent.wait')
https://opendev.org/openstack/os-brick/src/branch/master/test-requirements.txt#n20 : eventlet>=0.30.1,!=0.32.0 # MIT
https://opendev.org/openstack/os-ken/src/branch/master/doc/source/library_bgp_speaker.rst#n22 : import eventlet
https://opendev.org/openstack/os-ken/src/branch/master/doc/source/library_bgp_speaker.rst#n25 : eventlet.monkey_patch()
https://opendev.org/openstack/os-ken/src/branch/master/doc/source/library_bgp_speaker.rst#n54 : eventlet.sleep(30)
https://opendev.org/openstack/os-ken/src/branch/master/doc/source/os_ken_app_api.rst#n38 : While threads and queues are currently implemented with eventlet/greenlet,
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n25 : HUB_TYPE = os.getenv('OSKEN_HUB_TYPE', 'eventlet')
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n29 : if HUB_TYPE == 'eventlet':
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n30 : import eventlet
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n34 : eventlet.sleep()
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n35 : import eventlet.event
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n36 : import eventlet.queue
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n37 : import eventlet.semaphore
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n38 : import eventlet.timeout
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n39 : import eventlet.wsgi
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n40 : from eventlet import websocket
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n47 : getcurrent = eventlet.getcurrent
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n48 : sleep = eventlet.sleep
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n49 : listen = eventlet.listen
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n50 : connect = eventlet.connect
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n53 : eventlet.monkey_patch(thread=thread)
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n74 : return eventlet.spawn(_launch, *args, **kwargs)
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n95 : return eventlet.spawn_after(seconds, _launch, *args, **kwargs)
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n109 : Queue = eventlet.queue.LightQueue
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n110 : QueueEmpty = eventlet.queue.Empty
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n111 : Semaphore = eventlet.semaphore.Semaphore
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n112 : BoundedSemaphore = eventlet.semaphore.BoundedSemaphore
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n122 : self.server = eventlet.listen(listen_info,
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n126 : self.server = eventlet.listen(listen_info[0],
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n129 : self.server = eventlet.listen(listen_info)
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n202 : eventlet.wsgi.server(self.server, self.handle, self.logger)
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n206 : Timeout = eventlet.timeout.Timeout
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n210 : self._ev = eventlet.event.Event()
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/lib/hub.py#n222 : self._ev = eventlet.event.Event()
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/services/protocols/bgp/base.py#n390 : import eventlet
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/services/protocols/bgp/base.py#n391 : server = eventlet.spawn(self._listen_socket_loop,
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/services/protocols/bgp/speaker.py#n24 : from eventlet import semaphore
https://opendev.org/openstack/os-ken/src/branch/master/os_ken/services/protocols/ovsdb/client.py#n62 : """Emulate jsonrpc.Connection.transact_block without blocking eventlet.
https://opendev.org/openstack/os-ken/src/branch/master/requirements.txt#n6 : eventlet>=0.27.0 # MIT
https://opendev.org/openstack/os-vif/src/branch/master/os_vif/tests/functional/base.py#n22 : import eventlet.timeout
https://opendev.org/openstack/os-vif/src/branch/master/os_vif/tests/functional/base.py#n54 : with eventlet.Timeout(timeout):
https://opendev.org/openstack/os-vif/src/branch/master/os_vif/tests/functional/base.py#n56 : eventlet.sleep(sleep)
https://opendev.org/openstack/os-vif/src/branch/master/os_vif/tests/functional/base.py#n57 : except eventlet.Timeout:
https://opendev.org/openstack/os-vif/src/branch/master/os_vif/tests/functional/base.py#n78 : except eventlet.Timeout as e:
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/bobcat/http-driver.rst#n121 : * WSGI server: eventlet
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/bobcat/http-driver.rst#n273 : eventlet which is used by oslo.service.
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n7 : During Icehouse release cycle in order to drop dependency on eventlet we
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n8 : removed eventlet ``tpool.Proxy`` helper and the corresponding config option
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n13 : optional integration with eventlet ``tpool.Proxy`` as a separate module within
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n22 : eventlet green threads: being a C-extension it hangs the process on blocking
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n23 : DB queries (as eventlet can't monkey patch it to force a green thread switch
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n26 : eventlet provides a work around for this problem: ``tpool.Proxy`` helper class
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n29 : real OS thread, which knows how to deal with eventlet thread pool, on return
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n36 : option one had to use a patched version of eventlet, as neither PyPI releases
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n40 : common DB code. eventlet was removed as one of the dependencies we thought were
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n43 : process concurrent requests, whether they use eventlet green threads, real
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n46 : eventlet ``tpool.Proxy``, so the people wouldn't need to do this in their
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n54 : eventlet ``tpool.Proxy`` call proxying we need:
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n63 : 4. Even though we'll use eventlet ``tpool.Proxy`` class at runtime, we are not
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n64 : going to add it to oslo.db ``requirements.txt`` (we don't want eventlet to
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n65 : be an install time dependency; if you use eventlet, it will be up to you to
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n79 : 2. Document, that if someone wanted to use oslo.db with eventlet
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n83 : The advantage of this solution is that we don't need to re-add eventlet stuff
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n88 : clear to users why they need to use another library, if they use eventlet and
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n108 : lot, when eventlet and ``MySQL-Python`` are used. Note: you will still need
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n109 : to use unreleased eventlet code.
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n124 : OpenStack projects that want to use oslo.db with eventlet ``tpool.Proxy`` call
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n184 : that patched version of eventlet is needed to use it.
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n190 : To work properly, this depends on the unreleased version of eventlet. Though,
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n192 : version of eventlet in production. We are going to leave it up to deployers to
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n211 : eventlet tpool docs:
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n213 : http://eventlet.net/doc/threading.html#module-eventlet.tpool
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n215 : The patch fixing the eventlet issue:
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/juno/add-tpool-proxy-wrapper.rst#n217 : https://bitbucket.org/eventlet/eventlet/pull-request/29/
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/kilo/make-enginefacade-a-facade.rst#n403 : at the eventlet level and 2. thread locals are seen as "action at a distance",
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/kilo/make-enginefacade-a-facade.rst#n605 : 1. The need for thread locals or any issues with eventlet is removed.
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/adopt-futurist.rst#n21 : - An eventlet executor (aka a ``GreenThreadPoolExecutor``) that uses a
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/adopt-futurist.rst#n22 : `eventlet`_ greenpool and greenthreads (making the same futures/executor
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/adopt-futurist.rst#n23 : interface work when running in an eventlet environment). This kind of
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/adopt-futurist.rst#n24 : addition makes it eas(ier) to move from eventlet to another style of
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/adopt-futurist.rst#n125 : and http://eventlet.net/doc/modules/greenpool.html for information on
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/adopt-futurist.rst#n214 : * `eventlet`_ (**optionally** required for green futures/executors)
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/adopt-futurist.rst#n231 : .. _eventlet: http://eventlet.net/
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/graduate-oslo-service.rst#n17 : * openstack/common/eventlet_backdoor.py
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/graduate-oslo-service.rst#n18 : * tests/unit/test_eventlet_backdoor.py
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/graduate-oslo-service.rst#n25 : * tests/unit/eventlet_service.py
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/windows-oslo-service-workers.rst#n18 : * eventlet.greenio.GreenPipe, which it cannot be used, as it tries to set the
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/liberty/zmq-req-rep.rst#n189 : .. [3] https://blueprints.launchpad.net/oslo.messaging/+spec/zmq-work-without-eventlet
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/mitaka/rabbitmq-pika-driver.rst#n61 : It does not have special adapter for eventlet. But It is possible to use
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/mitaka/rabbitmq-pika-driver.rst#n62 : 'BlockingConnection' adapter and eventlet monkey patching. It works pretty
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/mitaka/rabbitmq-pika-driver.rst#n64 : not patched by current eventlet implementation. So I added code which removes
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/mitaka/rabbitmq-pika-driver.rst#n65 : 'pull' and 'epull' attributes from 'select' module if eventlet is patched.
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/mitaka/rabbitmq-pika-driver.rst#n66 : In this case Pika uses standard select api which is patched by eventlet
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/newton/reconfigurable-oslo-logging.rst#n127 : The 'logging' module was creating a Lock before eventlet could monkey-patch
https://opendev.org/openstack/oslo-specs/src/branch/master/specs/newton/reconfigurable-oslo-logging.rst#n135 : * Eventlet fix: https://github.com/eventlet/eventlet/pull/309
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/_bmemcache_pool.py#n18 : import eventlet
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/_bmemcache_pool.py#n20 : eventlet = None
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/_bmemcache_pool.py#n40 : if eventlet and eventlet.patcher.is_monkey_patched('thread'):
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/_memcache_pool.py#n26 : import eventlet
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/_memcache_pool.py#n28 : eventlet = None
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/_memcache_pool.py#n51 : if eventlet and eventlet.patcher.is_monkey_patched('thread'):
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/_opts.py#n51 : help='Cache backend module. For eventlet-based or '
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/tests/unit/test_connection_pool.py#n155 : import eventlet
https://opendev.org/openstack/oslo.cache/src/branch/master/oslo_cache/tests/unit/test_connection_pool.py#n156 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n37 : import eventlet
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n38 : from eventlet import patcher as eventlet_patcher
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n40 : eventlet = None
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n41 : eventlet_patcher = None
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n99 : if eventlet is not None and eventlet_patcher is not None:
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n100 : if eventlet_patcher.is_monkey_patched('thread'):
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n101 : self._current_thread = eventlet.getcurrent
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/lockutils.py#n258 : eventlet.monkey_patch(), else `semaphore.Semaphore`) unless external is
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n49 : eventlet = importutils.try_import('eventlet')
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n50 : eventlet_patched = eventlet and eventlet.patcher.is_monkey_patched(time)
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n51 : if eventlet_patched:
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n58 : subprocess = eventlet.patcher.original('subprocess')
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n59 : subprocess.threading = eventlet.patcher.original('threading')
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n61 : from eventlet.green import subprocess
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n63 : from eventlet import tpool
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/processutils.py#n418 : if eventlet_patched and os.name == 'nt':
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/__init__.py#n18 : import eventlet
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/__init__.py#n19 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n18 : import eventlet
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n19 : from eventlet import greenpool
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n43 : wait1 = eventlet.event.Event()
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n44 : wait2 = eventlet.event.Event()
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n49 : eventlet.sleep(0)
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n58 : self.other_started = eventlet.event.Event()
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n59 : self.other_finished = eventlet.event.Event()
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n73 : eventlet.sleep(0)
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n88 : fair=False, spawn=eventlet.spawn
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n93 : fair=False, spawn=eventlet.spawn_n
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n98 : fair=True, spawn=eventlet.spawn
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_lockutils_eventlet.py#n103 : fair=True, spawn=eventlet.spawn_n
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_processutils.py#n124 : use_eventlet=False):
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_processutils.py#n133 : with mock.patch.object(processutils, 'eventlet_patched',
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_processutils.py#n134 : use_eventlet):
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_processutils.py#n147 : if use_eventlet:
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_processutils.py#n153 : def test_windows_execute_without_eventlet(self):
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_processutils.py#n156 : def test_windows_execute_using_eventlet(self):
https://opendev.org/openstack/oslo.concurrency/src/branch/master/oslo_concurrency/tests/unit/test_processutils.py#n157 : self._test_windows_execute(use_eventlet=True)
https://opendev.org/openstack/oslo.concurrency/src/branch/master/test-requirements.txt#n5 : eventlet>=0.19.0 # MIT
https://opendev.org/openstack/oslo.config/src/branch/master/doc/source/cli/generator.rst#n277 : replacement_group: eventlet_server
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/sqlalchemy/engines.py#n46 : If we use eventlet.monkey_patch(), eventlet.greenthread.sleep(0) will
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/sqlalchemy/engines.py#n50 : implemented by C libraries that eventlet cannot monkey patch.
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/__init__.py#n19 : def should_run_eventlet_tests():
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/__init__.py#n23 : if should_run_eventlet_tests():
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/__init__.py#n24 : import eventlet
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/__init__.py#n25 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n16 : """Unit tests for SQLAlchemy and eventlet interaction."""
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n38 : __tablename__ = 'test_async_eventlet'
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n49 : @unittest.skipIf(not tests.should_run_eventlet_tests(),
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n50 : 'eventlet tests disabled unless TEST_EVENTLET=1')
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n78 : eventlet = importutils.try_import('eventlet')
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n79 : if eventlet is None:
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n80 : return self.skipTest('eventlet is required for this test')
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n82 : a_ready = eventlet.event.Event()
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n83 : a_proceed = eventlet.event.Event()
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n84 : b_proceed = eventlet.event.Event()
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n88 : a = eventlet.spawn(operate_on_row, 'A',
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n95 : b = eventlet.spawn(operate_on_row, 'B',
https://opendev.org/openstack/oslo.db/src/branch/master/oslo_db/tests/sqlalchemy/test_async_eventlet.py#n98 : eventlet.sleep(1)  # should(?) advance B to blocking on transaction
https://opendev.org/openstack/oslo.db/src/branch/master/releasenotes/notes/warn-incomplete-url-c44cd03baf630c7c.yaml#n7 : concurrency library eventlet.
https://opendev.org/openstack/oslo.db/src/branch/master/releasenotes/notes/warn-incomplete-url-c44cd03baf630c7c.yaml#n12 : with the concurrency library eventlet. To use PyMySQL, ensure the
https://opendev.org/openstack/oslo.db/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n213 : "the best compatibility with the concurrency library eventlet. To use "
https://opendev.org/openstack/oslo.db/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n219 : "the best compatibility with the concurrency library eventlet. To use "
https://opendev.org/openstack/oslo.db/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n651 : "as MySQL, the default is incompatible with the concurrency library eventlet."
https://opendev.org/openstack/oslo.db/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n655 : "as MySQL, the default is incompatible with the concurrency library eventlet."
https://opendev.org/openstack/oslo.db/src/branch/master/test-requirements.txt#n3 : eventlet>=0.18.2 # MIT
https://opendev.org/openstack/oslo.log/src/branch/master/doc/source/admin/example_nova.rst#n64 : Similarly, ``boto``, ``suds``, and ``eventlet.wsgi.server`` are
https://opendev.org/openstack/oslo.log/src/branch/master/doc/source/admin/nova_sample.conf#n50 : [logger_eventletwsgi]
https://opendev.org/openstack/oslo.log/src/branch/master/doc/source/admin/nova_sample.conf#n53 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n43 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n271 : def _fix_eventlet_logging():
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n272 : """Properly setup logging with eventlet on native threads.
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n274 : Workaround for: https://github.com/eventlet/eventlet/issues/432
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n280 : if eventletutils.is_monkey_patched('thread') and not _EVENTLET_FIX_APPLIED:
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n281 : import eventlet.green.threading
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n283 : logging.threading = eventlet.green.threading
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n289 : def setup(conf, product_name, version='unknown', *, fix_eventlet=True):
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n291 : if fix_eventlet:
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/log.py#n292 : _fix_eventlet_logging()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n20 : import eventlet
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n21 : import eventlet.debug
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n22 : import eventlet.greenthread
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n23 : import eventlet.hubs
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n32 : Related eventlet bug: https://github.com/eventlet/eventlet/issues/432
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n60 : eventlet.debug.hub_prevent_multiple_readers(False)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n72 : current_greenthread_id = id(eventlet.greenthread.getcurrent())
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n95 : eventlet.hubs.trampoline(self.rfd, read=True)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/pipe_mutex.py#n99 : current_greenthread_id = id(eventlet.greenthread.getcurrent())
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n20 : import eventlet
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n21 : from eventlet import debug as eventlet_debug
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n22 : from eventlet import greenpool
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n28 : def quiet_eventlet_exceptions():
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n30 : eventlet_debug.hub_exceptions(False)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n34 : eventlet_debug.hub_exceptions(orig_state)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n46 : evt_lock1 = eventlet.event.Event()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n47 : evt_lock2 = eventlet.event.Event()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n48 : evt_unlock = eventlet.event.Event()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n57 : eventlet.spawn(get_the_lock)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n72 : self.assertFalse(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n74 : self.assertFalse(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n76 : self.assertTrue(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n88 : with quiet_eventlet_exceptions():
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n90 : eventlet.spawn(self.mutex.release).wait)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n93 : evt = eventlet.event.Event()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n98 : eventlet.sleep(0)  # let coro2 go
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n113 : c1 = eventlet.spawn(coro1)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n114 : c2 = eventlet.spawn(coro2)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n136 : eventlet.sleep(0.0001)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n141 : greenthread1 = eventlet.spawn(do_stuff)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n142 : greenthread2 = eventlet.spawn(do_stuff)
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n144 : real_thread1 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n148 : real_thread2 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n160 : pthread1_event = eventlet.patcher.original('threading').Event()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n161 : pthread2_event1 = eventlet.patcher.original('threading').Event()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n162 : pthread2_event2 = eventlet.patcher.original('threading').Event()
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n167 : thread_id.append(id(eventlet.greenthread.getcurrent()))
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n186 : thread_id.append(id(eventlet.greenthread.getcurrent()))
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n193 : real_thread1 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n197 : real_thread2 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/oslo.log/src/branch/master/oslo_log/tests/unit/test_pipe_mutex.py#n209 : eventlet.debug.hub_prevent_multiple_readers(True)
https://opendev.org/openstack/oslo.log/src/branch/master/releasenotes/notes/native-threads-logging-cc84f7288c4835a0.yaml#n6 : eventlet native threads.
https://opendev.org/openstack/oslo.log/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n276 : "log/+bug/1983863>`_: Fixed logging in eventlet native threads. This fix "
https://opendev.org/openstack/oslo.log/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n281 : "oslo.log/+bug/1983863>`_: Fixed logging in eventlet native threads. This fix "
https://opendev.org/openstack/oslo.log/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n320 : "logging in eventlet native threads."
https://opendev.org/openstack/oslo.log/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n323 : "logging in eventlet native threads."
https://opendev.org/openstack/oslo.log/src/branch/master/test-requirements.txt#n9 : eventlet>=0.30.1 # MIT
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqp1_driver/controller.py#n39 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqp1_driver/controller.py#n82 : self._wakeup = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqp1_driver/controller.py#n109 : self._wakeup = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqpdriver.py#n25 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqpdriver.py#n123 : self._shutdown = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqpdriver.py#n373 : self._shutdown = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqpdriver.py#n374 : self._shutoff = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/amqpdriver.py#n559 : self._thread_exit_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_fake.py#n22 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_fake.py#n53 : self._stopped = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_kafka.py#n21 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_kafka.py#n28 : if eventletutils.EVENTLET_AVAILABLE:
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_kafka.py#n29 : tpool = importutils.try_import('eventlet.tpool')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_kafka.py#n220 : if eventletutils.is_monkey_patched('thread'):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_kafka.py#n303 : if eventletutils.is_monkey_patched('thread'):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_kafka.py#n376 : self._stopped = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_rabbit.py#n38 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_rabbit.py#n100 : 'using eventlet for core service framework.',
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_rabbit.py#n108 : "stdlib by using eventlet/greenlet then the heartbeat "
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/impl_rabbit.py#n675 : self._get_thread_id = eventletutils.fetch_current_thread_functor()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_drivers/pool.py#n30 : Modelled after the eventlet.pools.Pool interface, but designed to be safe
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_metrics/client.py#n24 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_metrics/client.py#n30 : eventlet = importutils.try_import('eventlet')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_metrics/client.py#n31 : if eventlet and eventletutils.is_monkey_patched("thread"):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_metrics/client.py#n34 : stdlib_threading = eventlet.patcher.original('threading')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n20 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n25 : eventlet = importutils.try_import('eventlet')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n26 : if eventlet and eventletutils.is_monkey_patched("thread"):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n29 : stdlib_threading = eventlet.patcher.original('threading')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n30 : stdlib_queue = eventlet.patcher.original('queue')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n88 : if eventletutils.is_monkey_patched('thread'):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n89 : LOG.debug("Threading is patched, using an eventlet executor")
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/_utils.py#n90 : return 'eventlet'
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/notify/listener.py#n76 : *Note:* If the "eventlet" executor is used, the threading and time library need
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/notify/listener.py#n227 : If the eventlet executor is used, the threading and time library need to be
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/notify/listener.py#n237 : 'eventlet' and 'threading'
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/notify/listener.py#n262 : If the eventlet executor is used, the threading and time library need to be
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/notify/listener.py#n272 : 'eventlet' and 'threading'
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/rpc/dispatcher.py#n26 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/rpc/dispatcher.py#n287 : completion_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/rpc/server.py#n52 : *Note:* If the "eventlet" executor is used, the threading and time library need
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/rpc/server.py#n79 : import eventlet
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/rpc/server.py#n80 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/rpc/server.py#n110 : executor='eventlet')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/rpc/server.py#n232 : 'eventlet' and 'threading'
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n28 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n55 : ' executor is threading or eventlet.'),
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n318 : asynchronism then you need to consider to use the eventlet executor.
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n326 : 'eventlet' and 'threading'
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n329 : if executor and executor not in ("threading", "eventlet"):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n332 : "Executor should be None or 'eventlet' and 'threading'")
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n342 : if self.executor_type == "eventlet":
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n343 : eventletutils.warn_eventlet_not_patched(
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/server.py#n345 : what="the 'oslo.messaging eventlet executor'")
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/__init__.py#n16 : import eventlet
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/__init__.py#n17 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/drivers/test_amqp_driver.py#n31 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/drivers/test_amqp_driver.py#n78 : self.started = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/drivers/test_amqp_driver.py#n79 : self._done = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/drivers/test_amqp_driver.py#n1155 : self._recovered = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/drivers/test_amqp_driver.py#n2139 : self._pause = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/drivers/test_impl_rabbit.py#n27 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/drivers/test_impl_rabbit.py#n56 : event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/functional/utils.py#n98 : executor='eventlet'):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/functional/utils.py#n350 : [self], 'eventlet')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/functional/utils.py#n413 : [self], 'eventlet',
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/notify/test_listener.py#n104 : allow_requeue=True, pool=pool, executor='eventlet',
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/notify/test_listener.py#n109 : allow_requeue=True, pool=pool, executor='eventlet')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n20 : import eventlet
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n23 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n65 : self.stopped = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n143 : def test_constructor_with_eventlet_executor(self):
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n155 : executor='eventlet')
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n161 : self.assertEqual('eventlet', server.executor_type)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n688 : eventlet.spawn(self.server.start)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n700 : eventlet.spawn(self.server.wait)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n703 : eventlet.sleep(0)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n705 : eventlet.spawn(self.server.stop)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n706 : eventlet.sleep(0)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n708 : eventlet.spawn(self.server.start)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n719 : start_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n720 : finish_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n722 : running_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n723 : done_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n730 : _runner[0] = eventlet.getcurrent()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n741 : start1 = eventlet.spawn(self.server.start)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n742 : start2 = eventlet.spawn(self.server.start)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n749 : waiter_finished = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n798 : complete_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n799 : complete_waiting_callback = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n815 : thread1 = eventlet.spawn(self.server.stop)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n816 : thread1_finished = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n862 : log_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n866 : thread = eventlet.spawn(self.server.stop)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n878 : log_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n882 : thread = eventlet.spawn(self.server.stop, log_after=1)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n894 : log_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n898 : thread = eventlet.spawn(self.server.stop, log_after=1, timeout=2)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n919 : shutdown_called = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n924 : eventlet.sleep(10)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/rpc/test_server.py#n928 : thread = eventlet.spawn(self.server.wait)
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/utils.py#n26 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/utils.py#n68 : self._stop_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/oslo_messaging/tests/utils.py#n69 : self._start_event = eventletutils.Event()
https://opendev.org/openstack/oslo.messaging/src/branch/master/releasenotes/notes/deprecate-the-option-heartbeat_in_pthread-from-rabbit-driver-5757adb83701caa5.yaml#n8 : never worked with services using eventlet for core service framework.
https://opendev.org/openstack/oslo.messaging/src/branch/master/setup.cfg#n56 : eventlet = futurist:GreenThreadPoolExecutor
https://opendev.org/openstack/oslo.messaging/src/branch/master/test-requirements.txt#n24 : eventlet>=0.23.0 # MIT
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n16 : import eventlet
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n17 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n270 : endpoints, executor='eventlet')
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n302 : endpoints, executor='eventlet',
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n537 : p = eventlet.GreenPool(size=threads)
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n554 : p = eventlet.GreenPool(size=threads)
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n576 : eventlet.sleep()
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n583 : eventlet.sleep()
https://opendev.org/openstack/oslo.messaging/src/branch/master/tools/simulator.py#n742 : type=str, default='eventlet',
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n59 : import eventlet
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n60 : from eventlet import patcher
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n239 : if eventlet.patcher.is_monkey_patched('socket'):
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n240 : return eventlet.greenio.GreenPipe(fd, *args, **kwargs)
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n273 : for eventlet_mod_name, func_modules in EVENTLET_LIBRARIES:
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n274 : if not eventlet.patcher.is_monkey_patched(eventlet_mod_name):
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n279 : orig_mod = eventlet.patcher.original(name)
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/daemon.py#n554 : logging.setup(cfg.CONF, 'privsep', fix_eventlet=False)
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n16 : import eventlet
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n267 : eventlet.patcher.is_monkey_patched(eventlet_mod_name)
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n268 : for eventlet_mod_name in daemon.EVENTLET_MODULES))
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n270 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n272 : eventlet.patcher.is_monkey_patched(eventlet_mod_name)
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n273 : for eventlet_mod_name in daemon.EVENTLET_MODULES))
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n276 : for eventlet_mod_name, func_modules in daemon.EVENTLET_LIBRARIES:
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n277 : if not eventlet.patcher.is_monkey_patched(eventlet_mod_name):
https://opendev.org/openstack/oslo.privsep/src/branch/master/oslo_privsep/tests/test_daemon.py#n281 : orig_mod = eventlet.patcher.original(name)
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/notes/un-monkey-patch-privileged-daemon-160e00296549df3d.yaml#n4 : The ``oslo.privsep`` client can be called from a program using eventlet.
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/notes/un-monkey-patch-privileged-daemon-160e00296549df3d.yaml#n5 : If ``eventlet.monkey_patch``, some libraries will be patched, for example
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/notes/un-monkey-patch-privileged-daemon-160e00296549df3d.yaml#n9 : original values. The goal is to prevent some timeouts when using eventlet
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n120 : "The ``oslo.privsep`` client can be called from a program using eventlet. If "
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n121 : "``eventlet.monkey_patch``, some libraries will be patched, for example "
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n125 : "values. The goal is to prevent some timeouts when using eventlet threads "
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n129 : "The ``oslo.privsep`` client can be called from a program using eventlet. If "
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n130 : "``eventlet.monkey_patch``, some libraries will be patched, for example "
https://opendev.org/openstack/oslo.privsep/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n134 : "values. The goal is to prevent some timeouts when using eventlet threads "
https://opendev.org/openstack/oslo.privsep/src/branch/master/requirements.txt#n6 : eventlet>=0.21.0 # MIT
https://opendev.org/openstack/oslo.reports/src/branch/master/doc/source/user/report.txt#n18 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:346 in run
https://opendev.org/openstack/oslo.reports/src/branch/master/doc/source/user/report.txt#n21 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/poll.py:82 in wait
https://opendev.org/openstack/oslo.reports/src/branch/master/doc/source/user/report.txt#n39 : `eventlet.greenthread.sleep(self.wait_interval)`
https://opendev.org/openstack/oslo.reports/src/branch/master/doc/source/user/report.txt#n41 : /usr/local/lib/python2.7/dist-packages/eventlet/greenthread.py:34 in sleep
https://opendev.org/openstack/oslo.reports/src/branch/master/doc/source/user/report.txt#n44 : /usr/local/lib/python2.7/dist-packages/eventlet/hubs/hub.py:294 in switch
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/__init__.py#n19 : import eventlet.patcher
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/__init__.py#n24 : _patched_socket = (eventlet.patcher.is_monkey_patched('socket') or
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/__init__.py#n30 : from eventlet.green import subprocess   # noqa
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional.py#n29 : import eventlet
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional.py#n31 : eventlet = None
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional.py#n153 : if eventlet and eventlet.patcher.is_monkey_patched('socket'):
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional.py#n154 : self.fail("Standard library should not be patched by eventlet"
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n19 : import eventlet
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n20 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n36 : with eventlet.Timeout(timeout):
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n39 : except eventlet.Timeout:
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n42 : def test_eventlet_threads(self):
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n43 : """Check eventlet compatibility.
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n45 : The multiprocessing module is not eventlet friendly and
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n46 : must be protected against eventlet thread switching and its
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n53 : eventlet.spawn(self._thread_worker, i % 3, 'abc%d' % i))
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/oslo_rootwrap/tests/test_functional_eventlet.py#n56 : eventlet.spawn(self._thread_worker_timeout, 2,
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/test-requirements.txt#n11 : eventlet>=0.18.2 # MIT
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/tox.ini#n14 : stestr run --slowest (?!tests.test_functional_eventlet)tests {posargs}
https://opendev.org/openstack/oslo.rootwrap/src/branch/master/tox.ini#n15 : env TEST_EVENTLET=1 stestr run --slowest tests.test_functional_eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/doc/source/reference/eventlet_backdoor.rst#n2 : eventlet_backdoor
https://opendev.org/openstack/oslo.service/src/branch/master/doc/source/reference/eventlet_backdoor.rst#n5 : .. automodule:: oslo_service.eventlet_backdoor
https://opendev.org/openstack/oslo.service/src/branch/master/doc/source/reference/index.rst#n8 : eventlet_backdoor
https://opendev.org/openstack/oslo.service/src/branch/master/doc/source/user/usage.rst#n17 : * :func:`~oslo_service.eventlet_backdoor.initialize_if_enabled`
https://opendev.org/openstack/oslo.service/src/branch/master/doc/source/user/usage.rst#n53 : :mod:`~oslo_service.eventlet_backdoor` modules for the ``[DEFAULT]``
https://opendev.org/openstack/oslo.service/src/branch/master/doc/source/user/usage.rst#n206 : calltrace) through the :mod:`~oslo_service.eventlet_backdoor` module. The
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/_options.py#n25 : eventlet_backdoor_opts = [
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/_options.py#n27 : help="Enable eventlet backdoor.  %s" % help_for_backdoor_port),
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/_options.py#n29 : help="Enable eventlet backdoor, using the provided path"
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n26 : import eventlet.backdoor
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n30 : from eventlet.green import socket
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n154 : return eventlet.listen((host, port), reuse_port=False)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n176 : return eventlet.listen(socket_path, socket.AF_UNIX)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n192 : return eventlet.listen(socket_path, socket.AF_UNIX)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n196 : conf.register_opts(_options.eventlet_backdoor_opts)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n220 : LOG.warning("Could not apply format string to eventlet "
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n242 : thread = eventlet.spawn(eventlet.backdoor.backdoor_server, sock,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n257 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n258 : eventlet.monkey_patch(all=True)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/eventlet_backdoor.py#n271 : conf.register_cli_opts(_options.eventlet_backdoor_opts)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/fixture.py#n52 : 'oslo_utils.eventletutils.EventletEvent.wait')).mock
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/loopingcall.py#n23 : from eventlet import event
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/loopingcall.py#n24 : from eventlet import greenthread
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/loopingcall.py#n26 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/loopingcall.py#n91 : self._abort = eventletutils.EventletEvent()
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/loopingcall.py#n121 : :returns: eventlet event instance
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n35 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n36 : from eventlet import event
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n37 : from eventlet import tpool
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n42 : from oslo_service import eventlet_backdoor
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n54 : return [(None, copy.deepcopy(_options.eventlet_backdoor_opts +
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n178 : eventlet.spawn(self._handle_signal_cb, signo, frame)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n202 : interrupting eventlet's call to poll() or sleep().
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n204 : select_module = eventlet.patcher.original('select')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n209 : from eventlet.hubs import poll as poll_hub
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n219 : time_sleep = eventlet.patcher.original('time').sleep
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n236 : hub = eventlet.hubs.get_hub()
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n263 : eventlet_backdoor.initialize_if_enabled(self.conf))
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n427 : self.readpipe = eventlet.greenio.GreenPipe(rfd, 'r')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n534 : eventlet.hubs.use_hub()
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n539 : eventlet.spawn_n(self._pipe_watcher)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n643 : eventlet.greenthread.sleep(self.wait_interval)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/service.py#n684 : except eventlet.greenlet.GreenletExit:
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/__init__.py#n15 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/__init__.py#n25 : eventlet.monkey_patch(os=False, thread=False)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/__init__.py#n27 : eventlet.monkey_patch()
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/base.py#n28 : self.conf_fixture.register_opts(_options.eventlet_backdoor_opts)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/eventlet_service.py#n22 : import eventlet.wsgi
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/eventlet_service.py#n41 : self.pool = eventlet.GreenPool(POOL_SIZE)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/eventlet_service.py#n68 : self.socket = eventlet.listen(info[-1], family=info[0],
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/eventlet_service.py#n120 : eventlet.wsgi.server(socket, application, debug=False)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/eventlet_service.py#n127 : eventlet.patcher.monkey_patch()
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n17 : """Unit Tests for eventlet backdoor."""
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n23 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n25 : from oslo_service import eventlet_backdoor
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n31 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n32 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n36 : path = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n39 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n40 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n44 : path = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n48 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n49 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n60 : path = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n64 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n65 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n71 : path = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n76 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n77 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n84 : path = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n89 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n90 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n97 : self.assertRaises(OSError, eventlet_backdoor.initialize_if_enabled,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n100 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n101 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n106 : eventlet_backdoor.initialize_if_enabled,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n112 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n113 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n119 : port = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n122 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n123 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n128 : eventlet_backdoor.initialize_if_enabled, self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n130 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n133 : port = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n135 : port = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n138 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n139 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n145 : port = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n148 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n149 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n155 : port = eventlet_backdoor.initialize_if_enabled(self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n158 : @mock.patch.object(eventlet, 'spawn')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n159 : @mock.patch.object(eventlet, 'listen')
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n167 : eventlet_backdoor.initialize_if_enabled, self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n171 : self.assertRaises(eventlet_backdoor.EventletBackdoorConfigValueError,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n172 : eventlet_backdoor.initialize_if_enabled, self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n176 : self.assertRaises(eventlet_backdoor.EventletBackdoorConfigValueError,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_eventlet_backdoor.py#n177 : eventlet_backdoor.initialize_if_enabled, self.conf)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_loopingcall.py#n17 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_loopingcall.py#n18 : from eventlet.green import threading as greenthreading
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_loopingcall.py#n40 : clock = eventlet.hubs.get_hub().clock
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_loopingcall.py#n47 : def test_eventlet_clock(self):
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_loopingcall.py#n50 : hub = eventlet.hubs.get_hub()
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_loopingcall.py#n174 : clock = eventlet.hubs.get_hub().clock
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n28 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n29 : from eventlet import event
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n34 : from oslo_service.tests import eventlet_service
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n403 : @mock.patch("oslo_service.eventlet_backdoor.initialize_if_enabled")
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n414 : @mock.patch("oslo_service.eventlet_backdoor.initialize_if_enabled")
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n484 : with mock.patch('eventlet.patcher.original',
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n523 : eventlet.greenlet.GreenletExit()]
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n537 : @mock.patch("eventlet.greenio.GreenPipe")
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n548 : @mock.patch("eventlet.greenio.GreenPipe")
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n563 : @mock.patch("eventlet.greenio.GreenPipe")
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n614 : return eventlet.timeout.with_timeout(time_to_wait, wait_for_task,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_service.py#n641 : proc = multiprocessing.Process(target=eventlet_service.run,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_threadgroup.py#n22 : from eventlet import event
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n26 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n27 : import eventlet.wsgi
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n130 : self.assertEqual(eventlet.wsgi.MAX_HEADER_LINE,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n203 : eventlet.monkey_patch(os=False, thread=False)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n211 : eventlet.sleep(0)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n217 : eventlet.sleep(0)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n242 : with mock.patch.object(eventlet,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n257 : with mock.patch.object(eventlet,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n274 : with eventlet.wrap_ssl(sock, ca_certs=ca_certs) as wrappedSocket:
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/tests/test_wsgi.py#n293 : eventlet.monkey_patch(os=False, thread=False)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/threadgroup.py#n20 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/threadgroup.py#n21 : from eventlet import greenpool
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/threadgroup.py#n269 : except eventlet.greenlet.GreenletExit:  # nosec
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/threadgroup.py#n334 : except eventlet.greenlet.GreenletExit:  # nosec
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/threadgroup.py#n426 : eventlet.sleep(wait_time)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n24 : import eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n25 : import eventlet.wsgi
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n65 : pool_size=None, protocol=eventlet.wsgi.HttpProtocol,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n67 : logger_name='eventlet.wsgi.server',
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n76 : :param pool_size: Maximum number of eventlets to spawn concurrently.
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n96 : eventlet.wsgi.MAX_HEADER_LINE = conf.max_header_line
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n102 : self._pool = eventlet.GreenPool(self.pool_size)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n141 : sock = eventlet.listen(bind_addr, family, backlog=backlog)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n152 : sock = eventlet.listen(socket_file, family=socket.AF_UNIX,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n176 : 'func': eventlet.wsgi.server,
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n191 : self._server = eventlet.spawn(**wsgi_kwargs)
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n215 : """Stops eventlet server. Doesn't allow accept new connecting.
https://opendev.org/openstack/oslo.service/src/branch/master/oslo_service/wsgi.py#n230 : Waits on the server's eventlet to finish, then returns.
https://opendev.org/openstack/oslo.service/src/branch/master/releasenotes/notes/native-threads-on-child-7150690c7caa1013.yaml#n5 : <https://bugs.launchpad.net/oslo.service/+bug/1983949>`_: Fixed eventlet
https://opendev.org/openstack/oslo.service/src/branch/master/releasenotes/notes/support-pid-in-eventlet-backdoor-socket-path-1863eaad1dd08556.yaml#n6 : process. This makes the eventlet backdoor accessible when spawning
https://opendev.org/openstack/oslo.service/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n177 : "makes the eventlet backdoor accessible when spawning multiple processes with "
https://opendev.org/openstack/oslo.service/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n182 : "makes the eventlet backdoor accessible when spawning multiple processes with "
https://opendev.org/openstack/oslo.service/src/branch/master/requirements.txt#n3 : eventlet>=0.25.2 # MIT
https://opendev.org/openstack/oslo.utils/src/branch/master/doc/source/reference/eventletutils.rst#n2 : eventletutils
https://opendev.org/openstack/oslo.utils/src/branch/master/doc/source/reference/eventletutils.rst#n5 : .. automodule:: oslo_utils.eventletutils
https://opendev.org/openstack/oslo.utils/src/branch/master/doc/source/reference/index.rst#n10 : eventletutils
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n31 : _eventlet = importutils.try_import('eventlet')
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n32 : _patcher = importutils.try_import('eventlet.patcher')
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n37 : EVENTLET_AVAILABLE = all((_eventlet, _patcher))
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n48 : If eventlet is used to monkey-patch the threading module, return the
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n49 : current eventlet greenthread. Otherwise, return the current Python thread.
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n64 : return _eventlet.getcurrent
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n69 : def warn_eventlet_not_patched(expected_patched_modules=None,
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n71 : """Warns if eventlet is being used without patching provided modules.
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n76 : to the names passed into the eventlet
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n126 : warnings.warn("It is highly recommended that when eventlet"
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n135 : """Determines safely is eventlet patching for module enabled or not
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n146 : """A class that provides consistent eventlet/threading Event API.
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n148 : This wraps the eventlet.event.Event class to have the same API as
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n158 : self._event = _eventlet.event.Event()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/eventletutils.py#n174 : with _eventlet.timeout.Timeout(sw.leftover(return_none=True),
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/excutils.py#n150 : can happen when eventlet switches greenthreads or when running an
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n19 : import eventlet
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n23 : from oslo_utils import eventletutils
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n29 : self._old_avail = eventletutils.EVENTLET_AVAILABLE
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n30 : eventletutils.EVENTLET_AVAILABLE = True
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n34 : eventletutils.EVENTLET_AVAILABLE = self._old_avail
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n36 : @mock.patch("oslo_utils.eventletutils._patcher")
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n42 : eventletutils.warn_eventlet_not_patched(['os'])
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n48 : @mock.patch("oslo_utils.eventletutils._patcher")
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n54 : eventletutils.warn_eventlet_not_patched()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n58 : for m in eventletutils._ALL_PATCH:
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n61 : @mock.patch("oslo_utils.eventletutils._patcher")
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n67 : eventletutils.warn_eventlet_not_patched(['all'])
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n71 : for m in eventletutils._ALL_PATCH:
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n74 : @mock.patch("oslo_utils.eventletutils._patcher")
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n80 : eventletutils.warn_eventlet_not_patched(['os'])
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n83 : @mock.patch("oslo_utils.eventletutils._patcher")
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n84 : def test_eventlet_is_patched(self, mock_patcher):
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n86 : self.assertTrue(eventletutils.is_monkey_patched('os'))
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n88 : self.assertFalse(eventletutils.is_monkey_patched('os'))
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n90 : @mock.patch("oslo_utils.eventletutils._patcher", None)
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n91 : def test_eventlet_no_patcher(self):
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n92 : self.assertFalse(eventletutils.is_monkey_patched('os'))
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n94 : @mock.patch("oslo_utils.eventletutils._patcher")
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n101 : eventletutils.warn_eventlet_not_patched(['os'])
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n106 : eventletutils.warn_eventlet_not_patched(['os'])
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n111 : eventletutils.warn_eventlet_not_patched(['os', 'thread'])
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n115 : eventletutils.warn_eventlet_not_patched(['all'])
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n124 : eventletutils.warn_eventlet_not_patched,
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n127 : @mock.patch('oslo_utils.eventletutils._eventlet')
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n128 : def test_event_api_compat(self, mock_eventlet):
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n129 : with mock.patch('oslo_utils.eventletutils.is_monkey_patched',
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n131 : e_event = eventletutils.Event()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n132 : self.assertIsInstance(e_event, eventletutils.EventletEvent)
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n134 : t_event = eventletutils.Event()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n152 : event = eventletutils.EventletEvent()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n159 : with eventlet.timeout.Timeout(0.5, False):
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n164 : event = eventletutils.EventletEvent()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n172 : eventlet.sleep(0.1)
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n178 : with eventlet.timeout.Timeout(0.5):
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n182 : event = eventletutils.EventletEvent()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n190 : eventlet.sleep(0.1)
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n192 : eventlet.sleep(0.1)
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n197 : with eventlet.timeout.Timeout(0.7):
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n201 : event = eventletutils.EventletEvent()
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n215 : eventlet.sleep(0)  # start threads
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n218 : with eventlet.timeout.Timeout(0.3):
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n224 : @mock.patch('oslo_utils.eventletutils._eventlet.event.Event')
https://opendev.org/openstack/oslo.utils/src/branch/master/oslo_utils/tests/test_eventletutils.py#n229 : event = eventletutils.EventletEvent()
https://opendev.org/openstack/oslo.utils/src/branch/master/test-requirements.txt#n1 : eventlet>=0.18.2 # MIT
https://opendev.org/openstack/oslo.versionedobjects/src/branch/master/oslo_versionedobjects/test.py#n23 : import eventlet  # noqa
https://opendev.org/openstack/oslo.versionedobjects/src/branch/master/oslo_versionedobjects/test.py#n24 : eventlet.monkey_patch(os=False)  # noqa
https://opendev.org/openstack/oslo.vmware/src/branch/master/oslo_vmware/common/loopingcall.py#n21 : from eventlet import event
https://opendev.org/openstack/oslo.vmware/src/branch/master/oslo_vmware/common/loopingcall.py#n22 : from eventlet import greenthread
https://opendev.org/openstack/oslo.vmware/src/branch/master/oslo_vmware/image_transfer.py#n23 : from eventlet import timeout
https://opendev.org/openstack/oslo.vmware/src/branch/master/oslo_vmware/tests/test_api.py#n22 : from eventlet import greenthread
https://opendev.org/openstack/oslo.vmware/src/branch/master/requirements.txt#n19 : eventlet!=0.18.3,!=0.20.1,>=0.18.2 # MIT
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-AIO/2-liberty-aio-keystone.sh#n48 : [eventlet_server]
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-AIO/2-liberty-aio-keystone.sh#n49 : [eventlet_server_ssl]
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-AIO/AIO-LIBERTY-2.sh#n130 : [eventlet_server]
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-AIO/AIO-LIBERTY-2.sh#n131 : [eventlet_server_ssl]
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-LB/ctl-3.keystone.sh#n50 : [eventlet_server]
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-LB/ctl-3.keystone.sh#n51 : [eventlet_server_ssl]
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-OVS/ctl-3.keystone.sh#n49 : [eventlet_server]
https://opendev.org/openstack/osops/src/branch/master/contrib/multi/openstack-liberty-multinode-scripts/LIBERTY-U14.04-OVS/ctl-3.keystone.sh#n50 : [eventlet_server_ssl]
https://opendev.org/openstack/osops/src/branch/master/example-configs/MIT_CSAIL/README.md#n52 : APIs run via eventlet server
https://opendev.org/openstack/osops/src/branch/master/example-configs/MIT_CSAIL/compute/etc/nova/logging.conf#n47 : [logger_eventletwsgi]
https://opendev.org/openstack/osops/src/branch/master/example-configs/MIT_CSAIL/compute/etc/nova/logging.conf#n50 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/osops/src/branch/master/example-configs/MIT_CSAIL/controller/etc/cinder/logging.conf#n42 : [logger_eventletwsgi]
https://opendev.org/openstack/osops/src/branch/master/example-configs/MIT_CSAIL/controller/etc/cinder/logging.conf#n45 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/osops/src/branch/master/example-configs/MIT_CSAIL/controller/etc/nova/logging.conf#n47 : [logger_eventletwsgi]
https://opendev.org/openstack/osops/src/branch/master/example-configs/MIT_CSAIL/controller/etc/nova/logging.conf#n50 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/ossa/src/branch/master/ossa/OSSA-2014-007.yaml#n12 : related to a bad interaction between eventlet and python-memcached that should be
https://opendev.org/openstack/ossa/src/branch/master/ossa/OSSA-2014-007.yaml#n13 : avoided if the calling process already monkey-patches "thread" to use eventlet.
https://opendev.org/openstack/ovn-bgp-agent/src/branch/master/ovn_bgp_agent/tests/functional/base.py#n22 : import eventlet.timeout
https://opendev.org/openstack/ovn-bgp-agent/src/branch/master/ovn_bgp_agent/tests/functional/base.py#n60 : except eventlet.Timeout as e:
https://opendev.org/openstack/ovn-bgp-agent/src/branch/master/ovn_bgp_agent/tests/utils.py#n16 : import eventlet
https://opendev.org/openstack/ovn-bgp-agent/src/branch/master/ovn_bgp_agent/tests/utils.py#n56 : with eventlet.Timeout(timeout):
https://opendev.org/openstack/ovn-bgp-agent/src/branch/master/ovn_bgp_agent/tests/utils.py#n58 : eventlet.sleep(sleep)
https://opendev.org/openstack/ovn-bgp-agent/src/branch/master/ovn_bgp_agent/tests/utils.py#n59 : except eventlet.Timeout:
https://opendev.org/openstack/ovn-bgp-agent/src/branch/master/test-requirements.txt#n4 : eventlet>=0.26.1 # MIT
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/backend/ovs_idl/vlog.py#n22 : from eventlet import patcher
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/backend/ovs_idl/windows/utils.py#n17 : import eventlet
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/backend/ovs_idl/windows/utils.py#n18 : from eventlet import tpool
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/backend/ovs_idl/windows/utils.py#n20 : eventlet = None
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/backend/ovs_idl/windows/utils.py#n31 : keyword arguments "kwargs". If eventlet is not installed on the system
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/backend/ovs_idl/windows/utils.py#n34 : if eventlet is None:
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/backend/ovs_idl/windows/utils.py#n40 : if eventlet.getcurrent().parent:
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/tests/unit/test_api.py#n25 : import eventlet
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/tests/unit/test_api.py#n26 : from eventlet.green import thread
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/tests/unit/test_api.py#n28 : sleep = eventlet.sleep
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/tests/unit/test_api.py#n31 : eventlet.spawn_n(executable)
https://opendev.org/openstack/ovsdbapp/src/branch/master/ovsdbapp/tests/unit/test_api.py#n46 : if 'eventlet' in sys.modules:
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cmsm/index.rst#n10 : Simulator is configured with `eventlet` executor running in 10 threads.
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cmsm/index.rst#n11 : The overall number of threads is calculated as multiplication of eventlet
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cmsm-ha/index.rst#n10 : Simulator is configured with `eventlet` executor running in 10 threads.
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cmsm-ha/index.rst#n11 : The overall number of threads is calculated as multiplication of eventlet
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cs1ss2/index.rst#n10 : Simulator is configured with `eventlet` executor running in 10 threads.
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cs1ss2/index.rst#n11 : The overall number of threads is calculated as multiplication of eventlet
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cs1ss2-ha/index.rst#n10 : Simulator is configured with `eventlet` executor running in 10 threads.
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/rabbitmq/cs1ss2-ha/index.rst#n11 : The overall number of threads is calculated as multiplication of eventlet
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/zeromq/index.rst#n9 : Simulator is configured with `eventlet` executor running in 10 threads.
https://opendev.org/openstack/performance-docs/src/branch/master/doc/source/test_results/mq/zeromq/index.rst#n10 : The overall number of threads is calculated as multiplication of eventlet
https://opendev.org/openstack/project-config/src/branch/master/gerrit/projects.yaml#n2672 : - project: openstack/deb-python-aioeventlet
https://opendev.org/openstack/project-config/src/branch/master/gerrit/projects.yaml#n2798 : - project: openstack/deb-python-eventlet
https://opendev.org/openstack/project-config/src/branch/master/zuul/main.yaml#n1379 : - eventlet/eventlet
https://opendev.org/openstack/puppet-barbican/src/branch/master/manifests/api.pp#n437 : fail('With Ubuntu packages the service_name must be set to httpd as there is no eventlet init script.')
https://opendev.org/openstack/puppet-barbican/src/branch/master/releasenotes/notes/fix_ubuntu_install-20a799586184762a.yaml#n5 : as the packaging contains no init script for the eventlet.
https://opendev.org/openstack/puppet-barbican/src/branch/master/spec/classes/barbican_api_spec.rb#n276 : context 'redhat systems eventlet service enabled' do
https://opendev.org/openstack/puppet-barbican/src/branch/master/spec/classes/barbican_api_spec.rb#n277 : describe 'should contain eventlet service' do
https://opendev.org/openstack/puppet-barbican/src/branch/master/spec/classes/barbican_api_spec.rb#n287 : context 'on redhat systems eventlet service disabled' do
https://opendev.org/openstack/puppet-ceilometer/src/branch/master/CHANGELOG.md#n38 : - wsgi: make sure eventlet process is stopped before httpd
https://opendev.org/openstack/puppet-ceilometer/src/branch/master/CHANGELOG.md#n45 : - acceptance/eventlet: make sure apache is stopped
https://opendev.org/openstack/puppet-keystone/src/branch/master/CHANGELOG.md#n32 : - if running eventlet, send deprecation warning
https://opendev.org/openstack/puppet-keystone/src/branch/master/CHANGELOG.md#n61 : - acceptance/eventlet: make sure apache is stopped
https://opendev.org/openstack/puppet-keystone/src/branch/master/releasenotes/notes/deprecated-public_bind_host-and-public_port-90ee086ecd2b977c.yaml#n5 : deprecated, and don't affect the correspoiding parameters under eventlet
https://opendev.org/openstack/puppet-keystone/src/branch/master/releasenotes/notes/policy_rc_d_keystone_eventlet-2dc65eb3d27f8969.yaml#n4 : for keystone eventlet service.
https://opendev.org/openstack/puppet-keystone/src/branch/master/releasenotes/notes/policy_rc_d_keystone_eventlet-2dc65eb3d27f8969.yaml#n6 : - Keystone eventlet service is auto-started on debian based
https://opendev.org/openstack/puppet-keystone/src/branch/master/spec/classes/keystone_init_spec.rb#n563 : context 'with default domain and eventlet service is managed and enabled' do
https://opendev.org/openstack/puppet-manila/src/branch/master/releasenotes/notes/manila-wsgi-893b66e84d4a9133.yaml#n5 : package-provided built-in eventlet based wsgi server. Set
https://opendev.org/openstack/puppet-neutron/src/branch/master/manifests/server.pp#n414 : tag        => ['neutron-service', 'neutron-server-eventlet'],
https://opendev.org/openstack/puppet-neutron/src/branch/master/manifests/server.pp#n478 : tag        => ['neutron-service', 'neutron-server-eventlet'],
https://opendev.org/openstack/puppet-neutron/src/branch/master/spec/classes/neutron_server_spec.rb#n54 : :tag     => ['neutron-service', 'neutron-server-eventlet'],
https://opendev.org/openstack/puppet-neutron/src/branch/master/spec/classes/neutron_server_spec.rb#n63 : :tag     => ['neutron-service', 'neutron-server-eventlet'],
https://opendev.org/openstack/puppet-openstacklib/src/branch/master/releasenotes/notes/manage_policy_rc_d_file-747510db06792d52.yaml#n11 : eventlet process on package install.
https://opendev.org/openstack/python-cinderclient/src/branch/master/cinderclient/client.py#n46 : from eventlet import sleep
https://opendev.org/openstack/python-glanceclient/src/branch/master/glanceclient/common/https.py#n24 : from eventlet import patcher
https://opendev.org/openstack/python-glanceclient/src/branch/master/glanceclient/common/https.py#n27 : from eventlet.green.httplib import HTTPSConnection
https://opendev.org/openstack/python-glanceclient/src/branch/master/glanceclient/common/https.py#n28 : from eventlet.green.OpenSSL.SSL import GreenConnection as Connection
https://opendev.org/openstack/python-glanceclient/src/branch/master/releasenotes/source/earlier.rst#n377 : * 1157864_: Fix an issue where glanceclient would fail with eventlet.
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n21 : import eventlet
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n22 : eventlet.monkey_patch()  # noqa
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n48 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n57 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n69 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n80 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n103 : eventlet.greenthread.sleep(delay)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n106 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n127 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n135 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n145 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n163 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n171 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n341 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironic-inspector-client/src/branch/master/ironic_inspector_client/tests/functional.py#n350 : eventlet.greenthread.sleep(functional.DEFAULT_SLEEP)
https://opendev.org/openstack/python-ironicclient/src/branch/master/tools/install_venv_common.py#n180 : """Workaround for a bug in eventlet.
https://opendev.org/openstack/python-ironicclient/src/branch/master/tools/install_venv_common.py#n188 : Upstream: https://bitbucket.org/eventlet/eventlet/issue/89
https://opendev.org/openstack/python-ironicclient/src/branch/master/tools/install_venv_common.py#n199 : 'eventlet/green/subprocess.py'),
https://opendev.org/openstack/python-ironicclient/src/branch/master/tools/install_venv_common.py#n200 : 'contrib/redhat-eventlet.patch')
https://opendev.org/openstack/python-keystoneclient/src/branch/master/keystoneclient/common/cms.py#n16 : subprocess or eventlet.green.subprocess can be used.
https://opendev.org/openstack/python-keystoneclient/src/branch/master/keystoneclient/common/cms.py#n19 : or eventlet.green.subprocess based on if os module is patched by eventlet.
https://opendev.org/openstack/python-keystoneclient/src/branch/master/keystoneclient/common/cms.py#n60 : from eventlet import patcher
https://opendev.org/openstack/python-keystoneclient/src/branch/master/keystoneclient/common/cms.py#n62 : from eventlet.green import subprocess
https://opendev.org/openstack/python-keystoneclient/src/branch/master/keystoneclient/common/cms.py#n78 : The subprocess could be eventlet.green.subprocess if using eventlet,
https://opendev.org/openstack/python-manilaclient/src/branch/master/manilaclient/common/httpclient.py#n32 : from eventlet import sleep
https://opendev.org/openstack/python-mistralclient/src/branch/master/lower-constraints.txt#n19 : eventlet==0.18.2
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/hacking/checks.py#n220 : def check_no_eventlet_imports(logical_line):
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/hacking/checks.py#n221 : """O345 - Usage of Python eventlet module not allowed.
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/hacking/checks.py#n228 : if re.match(r'(import|from)\s+[(]?eventlet', logical_line):
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/hacking/checks.py#n229 : msg = 'O345 Usage of Python eventlet module not allowed'
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/hacking/checks.py#n230 : yield logical_line.index('eventlet'), msg
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/tests/unit/test_hacking.py#n201 : def test_check_no_eventlet_imports(self):
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/tests/unit/test_hacking.py#n202 : f = checks.check_no_eventlet_imports
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/tests/unit/test_hacking.py#n203 : self.assertLinePasses(f, 'from not_eventlet import greenthread')
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/tests/unit/test_hacking.py#n204 : self.assertLineFails(f, 'from eventlet import greenthread')
https://opendev.org/openstack/python-octaviaclient/src/branch/master/octaviaclient/tests/unit/test_hacking.py#n205 : self.assertLineFails(f, 'import eventlet')
https://opendev.org/openstack/python-octaviaclient/src/branch/master/tox.ini#n129 : O345 = checks:check_no_eventlet_imports
https://opendev.org/openstack/python-swiftclient/src/branch/master/ChangeLog#n758 : * Eradicate eventlet and fix bug lp:959221
https://opendev.org/openstack/python-troveclient/src/branch/master/troveclient/client.py#n35 : import eventlet as sleep_lib
https://opendev.org/openstack/python-zaqarclient/src/branch/master/HACKING.rst#n110 : import eventlet
https://opendev.org/openstack/rally/src/branch/master/rally/utils/sshutils.py#n52 : eventlet.monkey_patch(select=True, time=True)
https://opendev.org/openstack/rally/src/branch/master/rally/utils/sshutils.py#n54 : eventlet.monkey_patch()
https://opendev.org/openstack/rally/src/branch/master/rally/utils/sshutils.py#n56 : sshclient = eventlet.import_patched("opentstack.common.sshclient")
https://opendev.org/openstack/releases/src/branch/master/deliverables/dalmatian/neutron.yaml#n30 : WSGI API module, completing the first phase of eventlet library
https://opendev.org/openstack/requirements/src/branch/master/global-requirements.txt#n48 : eventlet!=0.18.3,!=0.20.1,!=0.21.0,!=0.23.0,!=0.25.0,!=0.32.0,!=0.34.1,!=0.34.2,!=0.34.3,!=0.35.0,!=0.36.0  # MIT
https://opendev.org/openstack/requirements/src/branch/master/openstack_requirements/tests/files/gr-base.txt#n14 : eventlet>=0.12.0
https://opendev.org/openstack/requirements/src/branch/master/openstack_requirements/tests/files/project-with-bad-requirement.txt#n9 : eventlet>=0.9.12
https://opendev.org/openstack/requirements/src/branch/master/openstack_requirements/tests/files/project-with-oslo-tar.txt#n9 : eventlet>=0.9.17
https://opendev.org/openstack/requirements/src/branch/master/openstack_requirements/tests/files/project.txt#n9 : eventlet>=0.9.12
https://opendev.org/openstack/requirements/src/branch/master/openstack_requirements/tests/files/upper-constraints.txt#n123 : eventlet===0.19.0
https://opendev.org/openstack/requirements/src/branch/master/upper-constraints.txt#n170 : eventlet===0.36.1
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/barbican/barbican.spec.j2#n34 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/barbican/barbican.spec.j2#n90 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/cinder/cinder.spec.j2#n115 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/cinder/cinder.spec.j2#n176 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/cyborg/cyborg.spec.j2#n20 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/cyborg/cyborg.spec.j2#n63 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/designate/designate.spec.j2#n91 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/futurist/futurist.spec.j2#n17 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/glance/glance.spec.j2#n32 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/glance/glance.spec.j2#n105 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/glance_store/glance_store.spec.j2#n18 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/glance_store/glance_store.spec.j2#n49 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/heat/heat.spec.j2#n32 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/heat/heat.spec.j2#n91 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/heat-tempest-plugin/heat-tempest-plugin.spec.j2#n18 : Requires:      {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/ironic/ironic.spec.j2#n34 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/ironic/ironic.spec.j2#n114 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/ironic-inspector/ironic-inspector.spec.j2#n29 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/ironic-inspector/ironic-inspector.spec.j2#n92 : Requires:     {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/ironic-lib/ironic-lib.spec.j2#n29 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/ironic-python-agent/ironic-python-agent.spec.j2#n19 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/ironic-python-agent/ironic-python-agent.spec.j2#n61 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/magnum/magnum.spec.j2#n102 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/manila/manila.spec.j2#n37 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/manila/manila.spec.j2#n109 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/masakari/masakari.spec.j2#n20 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/masakari-monitors/masakari-monitors.spec.j2#n22 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/mistral/mistral.spec.j2#n23 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/mistral/mistral.spec.j2#n84 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/mistral-lib/mistral-lib.spec.j2#n14 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/mistral-lib/mistral-lib.spec.j2#n33 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/monasca-agent/monasca-agent.spec.j2#n29 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/monasca-agent/monasca-agent.spec.j2#n73 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/monasca-api/monasca-api.spec.j2#n23 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/monasca-api/monasca-api.spec.j2#n71 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/neutron/neutron.spec.j2#n103 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/neutron-dynamic-routing/neutron-dynamic-routing.spec.j2#n31 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/neutron-tempest-plugin/neutron-tempest-plugin.spec.j2#n19 : Requires:      {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/nova/nova.spec.j2#n134 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/os-brick/os-brick.spec.j2#n19 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/os-brick/os-brick.spec.j2#n49 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/os-collect-config/os-collect-config.spec.j2#n31 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/os-ken/os-ken.spec.j2#n17 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/os-ken/os-ken.spec.j2#n38 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.concurrency/oslo.concurrency.spec.j2#n15 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.db/oslo.db.spec.j2#n18 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.log/oslo.log.spec.j2#n16 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.messaging/oslo.messaging.spec.j2#n21 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.privsep/oslo.privsep.spec.j2#n16 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.privsep/oslo.privsep.spec.j2#n34 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.reports/oslo.reports.spec.j2#n18 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.rootwrap/oslo.rootwrap.spec.j2#n15 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.service/oslo.service.spec.j2#n22 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.service/oslo.service.spec.j2#n50 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.utils/oslo.utils.spec.j2#n18 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.vmware/oslo.vmware.spec.j2#n18 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/oslo.vmware/oslo.vmware.spec.j2#n48 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/swift/swift.spec.j2#n71 : Requires:       {{ py3('eventlet') }}
https://opendev.org/openstack/rpm-packaging/src/branch/master/openstack/taskflow/taskflow.spec.j2#n21 : BuildRequires:  {{ py3('eventlet') }}
https://opendev.org/openstack/security-doc/src/branch/master/security-notes/OSSN-0023#n27 : INFO eventlet.wsgi.server [-] 10.0.0.66 - - [22/Aug/2014 12:39:01]
https://opendev.org/openstack/security-doc/src/branch/master/security-notes/OSSN-0023#n56 : other than eventlet will need their own solution.
https://opendev.org/openstack/security-doc/src/branch/master/security-notes/OSSN-0039#n22 : - Miscellaneous services (eventlet, syslog, ldap, smtp, etc)
https://opendev.org/openstack/security-doc/src/branch/master/security-notes/OSSN-0045#n22 : - Miscellaneous services (eventlet, syslog, ldap, smtp, etc)
https://opendev.org/openstack/storlets/src/branch/master/requirements.txt#n3 : eventlet>=0.17.4 # MIT
https://opendev.org/openstack/storlets/src/branch/master/storlets/gateway/common/exceptions.py#n17 : from eventlet import Timeout
https://opendev.org/openstack/storlets/src/branch/master/storlets/gateway/gateways/container/runtime.py#n24 : import eventlet
https://opendev.org/openstack/storlets/src/branch/master/storlets/gateway/gateways/container/runtime.py#n40 : eventlet.monkey_patch()
https://opendev.org/openstack/storlets/src/branch/master/storlets/gateway/gateways/container/runtime.py#n691 : eventlet.spawn_n(self._write_input_data,
https://opendev.org/openstack/storlets/src/branch/master/storlets/gateway/gateways/container/runtime.py#n700 : eventlet.spawn_n(self._write_input_data,
https://opendev.org/openstack/storlets/src/branch/master/storlets/swift_middleware/storlet_handler.py#n17 : from eventlet import Timeout
https://opendev.org/openstack/storlets/src/branch/master/tests/unit/gateway/gateways/container/test_gateway.py#n16 : import eventlet
https://opendev.org/openstack/storlets/src/branch/master/tests/unit/gateway/gateways/container/test_gateway.py#n497 : eventlet.sleep(0.1)
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n203 : * Added support for recent versions of eventlet.
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n251 : `client_timeout` option. Note that this requires eventlet 0.34.0
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n902 : * The relinker now performs eventlet-hub selection the same way as
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n1192 : * Turned off thread-logging when monkey-patching with eventlet. This
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n1377 : memory copies, and eventlet scheduling.
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n1648 : * Dependency update: eventlet must be at least 0.25.0. This also
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n1658 : Note that this requires eventlet>=0.25.0. All unit tests pass,
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n1726 : If running Swift under Python 3, eventlet must be at least 0.25.0.
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n2027 : * Fixed a bug in how Swift uses eventlet that was exposed under high
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n2203 : * Fixed a bug in how Swift uses eventlet that was exposed under high
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n3151 : - Updated minimum version of eventlet to 0.17.4 to support IPv6.
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n3996 : * Worked around a bug in eventlet 0.9.16 where the size of the
https://opendev.org/openstack/swift/src/branch/master/CHANGELOG#n4277 : * Add config option to turn eventlet debug on/off
https://opendev.org/openstack/swift/src/branch/master/README.rst#n116 : Swift is a WSGI application and uses eventlet's WSGI server. After the
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/account-server.conf.5#n71 : that individual workers will use many eventlet co-routines to service multiple
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/account-server.conf.5#n123 : .IP \fBeventlet_debug\fR
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/account-server.conf.5#n124 : Debug mode for eventlet library. The default is false.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/account-server.conf.5#n246 : standard profiler. Currently the supported value can be 'cProfile', 'eventlet.green.profile' etc.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/container-server.conf.5#n71 : that individual workers will use many eventlet co-routines to service multiple
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/container-server.conf.5#n129 : .IP \fBeventlet_debug\fR
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/container-server.conf.5#n130 : Debug mode for eventlet library. The default is false.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/container-server.conf.5#n258 : standard profiler. Currently the supported value can be 'cProfile', 'eventlet.green.profile' etc.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/object-server.conf.5#n72 : that individual workers will use many eventlet co-routines to service multiple
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/object-server.conf.5#n129 : .IP \fBeventlet_debug\fR
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/object-server.conf.5#n130 : Debug mode for eventlet library. The default is false.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/object-server.conf.5#n323 : standard profiler. Currently the supported value can be 'cProfile', 'eventlet.green.profile' etc.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/proxy-server.conf.5#n81 : that individual workers will use many eventlet co-routines to service multiple
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/proxy-server.conf.5#n138 : .IP \fBeventlet_debug\fR
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/proxy-server.conf.5#n139 : Debug mode for eventlet library. The default is false.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/proxy-server.conf.5#n943 : standard profiler. Currently the supported value can be 'cProfile', 'eventlet.green.profile' etc.
https://opendev.org/openstack/swift/src/branch/master/doc/manpages/swift.conf.5#n172 : header. Using 8192 as default because eventlet uses 8192 as max size of header
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/account-server/1.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/account-server/2.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/account-server/3.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/account-server/4.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/container-server/1.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/container-server/2.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/container-server/3.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/container-server/4.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/object-server/1.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/object-server/2.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/object-server/3.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/object-server/4.conf#n11 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/saio/swift/proxy-server.conf#n7 : eventlet_debug = true
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/account_server_config.rst#n85 : eventlet_debug                   false       If true, turn on debug logging for eventlet
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/container_server_config.rst#n82 : eventlet_debug                   false       If true, turn on debug logging for eventlet
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/object_server_config.rst#n106 : eventlet_debug                   false       If true, turn on debug logging for
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/object_server_config.rst#n107 : eventlet
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/object_server_config.rst#n285 : eventlet_tpool_num_threads         auto                   The number of threads in eventlet's thread pool.
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/object_server_config.rst#n289 : eventlet.
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/object_server_config.rst#n293 : eventlet's default (currently 20 threads).
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/proxy_server_config.rst#n112 : eventlet_debug                        false                     If true, turn on debug logging
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/proxy_server_config.rst#n113 : for eventlet
https://opendev.org/openstack/swift/src/branch/master/doc/source/config/swift_common_config.rst#n20 : as default because eventlet use 8192 as max
https://opendev.org/openstack/swift/src/branch/master/doc/source/deployment_guide.rst#n161 : service a request for any disk, and a slow I/O request blocks the eventlet hub,
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_auth.rst#n289 : from eventlet.timeout import Timeout
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_middleware.rst#n82 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_middleware.rst#n85 : from eventlet.green.urllib import request as urllib2
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_middleware.rst#n87 : from eventlet.green import urllib2
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_saio.rst#n63 : python-xattr python-eventlet \
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_saio.rst#n78 : pyxattr python-eventlet \
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_saio.rst#n90 : python-pyxattr python-eventlet \
https://opendev.org/openstack/swift/src/branch/master/doc/source/development_saio.rst#n101 : python-xattr python-eventlet python2-greenlet \
https://opendev.org/openstack/swift/src/branch/master/lower-constraints.txt#n22 : eventlet==0.25.0
https://opendev.org/openstack/swift/src/branch/master/py2-constraints.txt#n16 : eventlet===0.25.2
https://opendev.org/openstack/swift/src/branch/master/py36-constraints.txt#n21 : eventlet==0.33.3
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_17_1_release-dd6e6879cbb94f85.yaml#n10 : Fixed a bug in how Swift uses eventlet that was exposed under high
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_19_1_release-5072dd72557f5708.yaml#n15 : Fixed a bug in how Swift uses eventlet that was exposed under high
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_22_0_release-f60d29508b3c1283.yaml#n5 : Note that this requires ``eventlet>=0.25.0``. All unit tests pass,
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_22_0_release-f60d29508b3c1283.yaml#n37 : If running Swift under Python 3, ``eventlet`` must be at least 0.25.0.
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_23_0_release-2a2d11c1934f0b61.yaml#n20 : **Dependency update**: ``eventlet`` must be at least 0.25.0. This also
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_25_0_release-09410c808881bf21.yaml#n21 : memory copies, and eventlet scheduling.
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_27_0_release-a9ae967d6d271342.yaml#n215 : Turned off thread-logging when monkey-patching with eventlet. This
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_28_0_release-f2515e07fb61cd01.yaml#n129 : * The relinker now performs eventlet-hub selection the same way as
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/2_32_0_release-39c8fb77a0a3e72d.yaml#n13 : ``client_timeout`` option. Note that this requires eventlet 0.33.4
https://opendev.org/openstack/swift/src/branch/master/releasenotes/notes/3_33_0_release-d208917f5012cedd.yaml#n47 : Added support for recent versions of eventlet.
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n23 : "**Dependency update**: ``eventlet`` must be at least 0.25.0. This also "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n27 : "**Dependency update**: ``eventlet`` must be at least 0.25.0. This also "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n596 : "``client_timeout`` option. Note that this requires eventlet 0.33.4 "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n601 : "``client_timeout`` option. Note that this requires eventlet 0.33.4 "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n944 : msgid "Added support for recent versions of eventlet."
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n945 : msgstr "Added support for recent versions of eventlet."
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1400 : "requires ``eventlet>=0.25.0``. All unit tests pass, and running functional "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1405 : "requires ``eventlet>=0.25.0``. All unit tests pass, and running functional "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1465 : "Fixed a bug in how Swift uses eventlet that was exposed under high "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1468 : "Fixed a bug in how Swift uses eventlet that was exposed under high "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1861 : msgid "If running Swift under Python 3, ``eventlet`` must be at least 0.25.0."
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n1862 : msgstr "If running Swift under Python 3, ``eventlet`` must be at least 0.25.0."
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2014 : "copies, and eventlet scheduling."
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n2017 : "copies, and eventlet scheduling."
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n3760 : "The relinker now performs eventlet-hub selection the same way as other "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n3764 : "The relinker now performs eventlet-hub selection the same way as other "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n3906 : "Turned off thread-logging when monkey-patching with eventlet. This addresses "
https://opendev.org/openstack/swift/src/branch/master/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po#n3909 : "Turned off thread-logging when monkey-patching with eventlet. This addresses "
https://opendev.org/openstack/swift/src/branch/master/requirements.txt#n5 : eventlet>=0.25.0,!=0.34.3               # MIT
https://opendev.org/openstack/swift/src/branch/master/swift/account/reaper.py#n24 : from eventlet import GreenPool, sleep, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/account/server.py#n22 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/cli/account_audit.py#n25 : from eventlet.greenpool import GreenPool
https://opendev.org/openstack/swift/src/branch/master/swift/cli/account_audit.py#n26 : from eventlet.event import Event
https://opendev.org/openstack/swift/src/branch/master/swift/cli/dispersion_populate.py#n24 : from eventlet import GreenPool, patcher, sleep
https://opendev.org/openstack/swift/src/branch/master/swift/cli/dispersion_populate.py#n25 : from eventlet.pools import Pool
https://opendev.org/openstack/swift/src/branch/master/swift/cli/dispersion_report.py#n25 : from eventlet import GreenPool, hubs, patcher, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/cli/dispersion_report.py#n26 : from eventlet.pools import Pool
https://opendev.org/openstack/swift/src/branch/master/swift/cli/recon.py#n20 : from eventlet.green import socket
https://opendev.org/openstack/swift/src/branch/master/swift/cli/recon.py#n28 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/cli/recon.py#n37 : from eventlet.green.urllib import request as urllib2
https://opendev.org/openstack/swift/src/branch/master/swift/cli/recon.py#n39 : from eventlet.green import urllib2
https://opendev.org/openstack/swift/src/branch/master/swift/cli/recon.py#n161 : self.pool = eventlet.GreenPool(self.pool_size)
https://opendev.org/openstack/swift/src/branch/master/swift/cli/recon_cron.py#n18 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/cli/reconciler_enqueue.py#n17 : import eventlet.debug
https://opendev.org/openstack/swift/src/branch/master/swift/cli/reconciler_enqueue.py#n51 : eventlet.debug.hub_exceptions(True)
https://opendev.org/openstack/swift/src/branch/master/swift/cli/relinker.py#n27 : from eventlet import hubs
https://opendev.org/openstack/swift/src/branch/master/swift/common/bufferedhttp.py#n34 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/common/bufferedhttp.py#n35 : from eventlet.green.httplib import CONTINUE, HTTPConnection, HTTPMessage, \
https://opendev.org/openstack/swift/src/branch/master/swift/common/bufferedhttp.py#n41 : httplib = eventlet.import_patched('httplib')
https://opendev.org/openstack/swift/src/branch/master/swift/common/bufferedhttp.py#n42 : from eventlet.green import httplib as green_httplib
https://opendev.org/openstack/swift/src/branch/master/swift/common/bufferedhttp.py#n44 : httplib = eventlet.import_patched('http.client')
https://opendev.org/openstack/swift/src/branch/master/swift/common/bufferedhttp.py#n45 : from eventlet.green.http import client as green_httplib
https://opendev.org/openstack/swift/src/branch/master/swift/common/daemon.py#n23 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/common/daemon.py#n24 : import eventlet.debug
https://opendev.org/openstack/swift/src/branch/master/swift/common/daemon.py#n296 : eventlet.hubs.use_hub(utils.get_hub())
https://opendev.org/openstack/swift/src/branch/master/swift/common/daemon.py#n320 : eventlet_debug = utils.config_true_value(conf.get('eventlet_debug', 'no'))
https://opendev.org/openstack/swift/src/branch/master/swift/common/daemon.py#n321 : eventlet.debug.hub_exceptions(eventlet_debug)
https://opendev.org/openstack/swift/src/branch/master/swift/common/db.py#n31 : from eventlet import sleep, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/db.py#n131 : """SQLite DB Connection handler that plays well with eventlet."""
https://opendev.org/openstack/swift/src/branch/master/swift/common/db.py#n163 : """SQLite Cursor handler that plays well with eventlet."""
https://opendev.org/openstack/swift/src/branch/master/swift/common/db_auditor.py#n20 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/db_replicator.py#n27 : from eventlet import GreenPool, sleep, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/db_replicator.py#n28 : from eventlet.green import subprocess
https://opendev.org/openstack/swift/src/branch/master/swift/common/direct_client.py#n25 : from eventlet import sleep, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/direct_client.py#n102 : :raises eventlet.Timeout: if either conn_timeout or response_timeout is
https://opendev.org/openstack/swift/src/branch/master/swift/common/exceptions.py#n16 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/http_protocol.py#n16 : from eventlet import wsgi, websocket
https://opendev.org/openstack/swift/src/branch/master/swift/common/http_protocol.py#n24 : from eventlet.green import httplib as http_client
https://opendev.org/openstack/swift/src/branch/master/swift/common/http_protocol.py#n27 : from eventlet.green.http import client as http_client
https://opendev.org/openstack/swift/src/branch/master/swift/common/http_protocol.py#n37 : self.pre_shutdown_bugfix_eventlet = not getattr(
https://opendev.org/openstack/swift/src/branch/master/swift/common/http_protocol.py#n237 : if self.pre_shutdown_bugfix_eventlet:
https://opendev.org/openstack/swift/src/branch/master/swift/common/http_protocol.py#n245 : if self.pre_shutdown_bugfix_eventlet:
https://opendev.org/openstack/swift/src/branch/master/swift/common/internal_client.py#n16 : from eventlet import sleep, Timeout, spawn
https://opendev.org/openstack/swift/src/branch/master/swift/common/internal_client.py#n17 : from eventlet.green import httplib, socket
https://opendev.org/openstack/swift/src/branch/master/swift/common/internal_client.py#n38 : from eventlet.green.urllib import request as urllib2
https://opendev.org/openstack/swift/src/branch/master/swift/common/internal_client.py#n40 : from eventlet.green import urllib2
https://opendev.org/openstack/swift/src/branch/master/swift/common/memcached.py#n39 : sockets in order to play nice with eventlet.
https://opendev.org/openstack/swift/src/branch/master/swift/common/memcached.py#n56 : from eventlet.green import socket, ssl
https://opendev.org/openstack/swift/src/branch/master/swift/common/memcached.py#n57 : from eventlet.pools import Pool
https://opendev.org/openstack/swift/src/branch/master/swift/common/memcached.py#n58 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/bulk.py#n202 : from eventlet import sleep
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/bulk.py#n417 : req.environ['eventlet.minimum_write_chunk_size'] = 0
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/bulk.py#n551 : req.environ['eventlet.minimum_write_chunk_size'] = 0
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/ratelimit.py#n17 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/ratelimit.py#n265 : eventlet.sleep(self.BLACK_LIST_SLEEP)
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/ratelimit.py#n283 : eventlet.sleep(need_to_sleep)
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/s3api/s3request.py#n413 : if 'headers_raw' in self.environ:  # eventlet >= 0.19.0
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/s3api/s3request.py#n1061 : if 'headers_raw' in self.environ:  # eventlet >= 0.19.0
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/s3api/s3request.py#n1204 : if 'headers_raw' in env:  # eventlet >= 0.19.0
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/slo.py#n1497 : req.environ['eventlet.minimum_write_chunk_size'] = 0
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/tempauth.py#n184 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/xprofile.py#n19 : The current implementation is based on eventlet aware profiler.(For the
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/xprofile.py#n81 : from eventlet import greenthread, GreenPool, patcher
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/xprofile.py#n82 : import eventlet.green.profile as eprofile
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/xprofile.py#n167 : 'eventlet.green.profile')
https://opendev.org/openstack/swift/src/branch/master/swift/common/middleware/xprofile.py#n244 : if profile_module == 'eventlet.green.profile':
https://opendev.org/openstack/swift/src/branch/master/swift/common/statsd_client.py#n23 : from eventlet.green import socket
https://opendev.org/openstack/swift/src/branch/master/swift/common/swob.py#n129 : eventlet.wsgi.Input to the BytesIO class which would otherwise be a fine
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n51 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n52 : import eventlet.debug
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n53 : import eventlet.greenthread
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n54 : import eventlet.patcher
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n55 : import eventlet.semaphore
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n62 : from eventlet import GreenPool, sleep, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n63 : from eventlet.event import Event
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n64 : from eventlet.green import socket
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n65 : import eventlet.hubs
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n66 : import eventlet.queue
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n310 : def eventlet_monkey_patch():
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n318 : eventlet.patcher.monkey_patch(all=False, socket=True, select=True,
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n326 : eventlet_monkey_patch()
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n846 : self.semaphore = eventlet.semaphore.Semaphore(value=1)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n922 : was re-used, eventlet would freak right out because it still
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n938 : right things, but eventlet doesn't do those things. Really, it can't
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n944 : As eventlet monkey patching is now done before call get_hub() in wsgi.py
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n945 : if we use 'import select' we get the eventlet version, but since version
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n946 : 0.20.0 eventlet removed select.poll() function in patched select (see:
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n947 : http://eventlet.net/doc/changelog.html and
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n948 : https://github.com/eventlet/eventlet/commit/614a20462).
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n950 : We use eventlet.patcher.original function to get python select module
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n954 : select = eventlet.patcher.original('select')
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n1737 : eventlet.sleep(seconds)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n1742 : Will eventlet.sleep() for the appropriate time so that the max_rate
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n1745 : as eventlet.sleep() does involve some overhead.  Returns running_time
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n1800 : This is very similar in principle to eventlet.GreenPile, except it returns
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n1817 : self._responses = eventlet.queue.LightQueue(size)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n1825 : if eventlet.hubs.get_hub().debug_exceptions:
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n1881 : except eventlet.queue.Empty:
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4817 : Compared to eventlet.timeouts.Timeout, it reduces the number of context
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4818 : switching in eventlet by avoiding to schedule actions (throw an Exception),
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4847 : from eventlet.Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4854 : gth = eventlet.greenthread.getcurrent()
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4887 : self._run_gth = eventlet.spawn(self.run)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4914 : eventlet.hubs.get_hub().schedule_call_global(0, gth.throw, e)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4938 : from eventlet.timeouts.Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/__init__.py#n4958 : eventlet will not switch greenthreads on its own. We do it manually so that
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n31 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n48 : from eventlet.green import httplib as green_http_client
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n50 : from eventlet.green.http import client as green_http_client
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n52 : from eventlet.green import threading
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n108 : eventlet.debug.hub_prevent_multiple_readers(False)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n122 : current_greenthread_id = id(eventlet.greenthread.getcurrent())
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n145 : eventlet.hubs.trampoline(self.rfd, read=True)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n151 : current_greenthread_id = id(eventlet.greenthread.getcurrent())
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n221 : eventlet.debug.hub_prevent_multiple_readers(False)
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n368 : elif isinstance(exc, eventlet.Timeout):
https://opendev.org/openstack/swift/src/branch/master/swift/common/utils/logs.py#n772 : """A no-op logger for eventlet wsgi."""
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n29 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n30 : import eventlet.debug
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n31 : from eventlet import greenio, GreenPool, sleep, wsgi, listen, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n33 : from eventlet.green import socket, ssl, os as green_os
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n420 : eventlet.hubs.use_hub(get_hub())
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n421 : eventlet_debug = config_true_value(conf.get('eventlet_debug', 'no'))
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n422 : eventlet.debug.hub_exceptions(eventlet_debug)
https://opendev.org/openstack/swift/src/branch/master/swift/common/wsgi.py#n424 : if eventlet_debug:
https://opendev.org/openstack/swift/src/branch/master/swift/container/backend.py#n27 : from eventlet import tpool
https://opendev.org/openstack/swift/src/branch/master/swift/container/reconciler.py#n21 : from eventlet import GreenPile, GreenPool, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/container/replicator.py#n19 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/container/server.py#n22 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/container/sharder.py#n29 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/container/sync.py#n24 : from eventlet import sleep, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/container/updater.py#n25 : from eventlet import spawn, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/container/updater.py#n35 : eventlet_monkey_patch, node_to_string, parse_options
https://opendev.org/openstack/swift/src/branch/master/swift/container/updater.py#n162 : eventlet_monkey_patch()
https://opendev.org/openstack/swift/src/branch/master/swift/container/updater.py#n196 : eventlet_monkey_patch()
https://opendev.org/openstack/swift/src/branch/master/swift/obj/auditor.py#n25 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/obj/diskfile.py#n53 : from eventlet import Timeout, tpool
https://opendev.org/openstack/swift/src/branch/master/swift/obj/diskfile.py#n54 : from eventlet.hubs import trampoline
https://opendev.org/openstack/swift/src/branch/master/swift/obj/expirer.py#n25 : from eventlet import sleep, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/obj/expirer.py#n26 : from eventlet.greenpool import GreenPool
https://opendev.org/openstack/swift/src/branch/master/swift/obj/mem_diskfile.py#n22 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/obj/reconstructor.py#n28 : from eventlet import (GreenPile, GreenPool, Timeout, sleep, tpool, spawn)
https://opendev.org/openstack/swift/src/branch/master/swift/obj/reconstructor.py#n29 : from eventlet.support.greenlets import GreenletExit
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n28 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n29 : from eventlet import GreenPool, queue, tpool, Timeout, sleep
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n30 : from eventlet.green import subprocess
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n814 : eventlet.sleep(self.stats_interval)
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n963 : stats = eventlet.spawn(self.heartbeat)
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n964 : eventlet.sleep()  # Give spawns a cycle
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n1093 : rsync_reaper = eventlet.spawn(self._child_process_reaper)
https://opendev.org/openstack/swift/src/branch/master/swift/obj/replicator.py#n1139 : eventlet.spawn_n(self._child_process_reaper)
https://opendev.org/openstack/swift/src/branch/master/swift/obj/server.py#n29 : from eventlet import sleep, wsgi, Timeout, tpool
https://opendev.org/openstack/swift/src/branch/master/swift/obj/server.py#n30 : from eventlet.greenthread import spawn
https://opendev.org/openstack/swift/src/branch/master/swift/obj/server.py#n121 : eventlet.wsgi.MINIMUM_CHUNK_SIZE bytes or the app iter is exhausted.
https://opendev.org/openstack/swift/src/branch/master/swift/obj/server.py#n124 : eventlet.wsgi to force the headers out, so we use an
https://opendev.org/openstack/swift/src/branch/master/swift/obj/server.py#n254 : conf.get('eventlet_tpool_num_threads'),
https://opendev.org/openstack/swift/src/branch/master/swift/obj/ssync_receiver.py#n17 : import eventlet.greenio
https://opendev.org/openstack/swift/src/branch/master/swift/obj/ssync_receiver.py#n18 : import eventlet.wsgi
https://opendev.org/openstack/swift/src/branch/master/swift/obj/ssync_receiver.py#n19 : from eventlet import sleep
https://opendev.org/openstack/swift/src/branch/master/swift/obj/ssync_receiver.py#n231 : eventlet.greenio.shutdown_safe(socket)
https://opendev.org/openstack/swift/src/branch/master/swift/obj/ssync_receiver.py#n246 : self.request.environ['eventlet.minimum_write_chunk_size'] = 0
https://opendev.org/openstack/swift/src/branch/master/swift/obj/ssync_receiver.py#n272 : except (eventlet.wsgi.ChunkReadError, IOError) as err:
https://opendev.org/openstack/swift/src/branch/master/swift/obj/ssync_sender.py#n16 : from eventlet import sleep
https://opendev.org/openstack/swift/src/branch/master/swift/obj/updater.py#n27 : from eventlet import spawn, Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/obj/updater.py#n35 : eventlet_monkey_patch, get_redirect_data, ContextPool, hash_path, \
https://opendev.org/openstack/swift/src/branch/master/swift/obj/updater.py#n385 : eventlet_monkey_patch()
https://opendev.org/openstack/swift/src/branch/master/swift/obj/watchers/dark_data.py#n59 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/proxy/controllers/base.py#n39 : from eventlet.timeout import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/proxy/controllers/base.py#n1766 : socket IO and eventlet, and the phase of the moon.)
https://opendev.org/openstack/swift/src/branch/master/swift/proxy/controllers/obj.py#n41 : from eventlet import GreenPile
https://opendev.org/openstack/swift/src/branch/master/swift/proxy/controllers/obj.py#n42 : from eventlet.queue import Queue, Empty
https://opendev.org/openstack/swift/src/branch/master/swift/proxy/controllers/obj.py#n43 : from eventlet.timeout import Timeout
https://opendev.org/openstack/swift/src/branch/master/swift/proxy/server.py#n27 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/test/__init__.py#n45 : from eventlet.green import socket
https://opendev.org/openstack/swift/src/branch/master/test/__init__.py#n85 : The eventlet.listen() always sets SO_REUSEPORT, so when called with
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n29 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n30 : import eventlet.debug
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n77 : eventlet.hubs.use_hub(utils.get_hub())
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n78 : eventlet.patcher.monkey_patch(all=False, socket=True)
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n79 : eventlet.debug.hub_exceptions(False)
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n686 : prospa = eventlet.spawn(eventlet.wsgi.server, prolis, app, nl,
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n688 : acc1spa = eventlet.spawn(eventlet.wsgi.server, acc1lis, acc1srv, nl,
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n690 : acc2spa = eventlet.spawn(eventlet.wsgi.server, acc2lis, acc2srv, nl,
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n692 : con1spa = eventlet.spawn(eventlet.wsgi.server, con1lis, con1srv, nl,
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n694 : con2spa = eventlet.spawn(eventlet.wsgi.server, con2lis, con2srv, nl,
https://opendev.org/openstack/swift/src/branch/master/test/functional/__init__.py#n697 : objspa = [eventlet.spawn(eventlet.wsgi.server, objsrv[0], objsrv[1], nl,
https://opendev.org/openstack/swift/src/branch/master/test/functional/tests.py#n27 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/functional/tests.py#n973 : eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/functional/tests.py#n981 : eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/functional/tests.py#n988 : eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/functional/tests.py#n2308 : with eventlet.Timeout(seconds):
https://opendev.org/openstack/swift/src/branch/master/test/functional/tests.py#n2310 : except eventlet.Timeout:
https://opendev.org/openstack/swift/src/branch/master/test/probe/__init__.py#n17 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/probe/__init__.py#n18 : eventlet.monkey_patch()
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_container_failures.py#n20 : from eventlet import GreenPool, Timeout
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_container_failures.py#n21 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_container_failures.py#n33 : eventlet.monkey_patch(all=False, socket=True)
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_signals.py#n20 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_signals.py#n425 : q = eventlet.Queue()
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_signals.py#n431 : eventlet.sleep(timeout)
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_signals.py#n436 : pool = eventlet.GreenPool()
https://opendev.org/openstack/swift/src/branch/master/test/probe/test_signals.py#n438 : sock = eventlet.listen((ip, port))
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n34 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n35 : from eventlet import greenpool, debug as eventlet_debug
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n36 : from eventlet.green import socket
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n522 : with eventlet.Timeout(timeout):
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n630 : def quiet_eventlet_exceptions():
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n632 : eventlet_debug.hub_exceptions(False)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n636 : eventlet_debug.hub_exceptions(orig_state)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n691 : add some eventlet sleep to the expect and response stages of the
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n699 : :param expect_sleep: float, time to eventlet sleep during expect, can
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n701 : :param response_sleep: float, time to eventlet sleep during response
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n706 : if isinstance(status, (Exception, eventlet.Timeout)):
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n744 : eventlet.sleep(self.response_sleep)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n748 : if isinstance(self.status, (Exception, eventlet.Timeout)):
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n755 : eventlet.sleep(expect_sleep)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n757 : if isinstance(expect_status, (Exception, eventlet.Timeout)):
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n779 : eventlet.sleep(self.slowness)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n839 : eventlet.sleep()
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n844 : if isinstance(exc, (Exception, eventlet.Timeout)):
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n848 : raise eventlet.Timeout()
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n916 : eventlet.sleep(value)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n932 : eventlet.sleep(value)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n971 : eventlet.sleep(0.1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/__init__.py#n1134 : eventlet.sleep(wait)
https://opendev.org/openstack/swift/src/branch/master/test/unit/account/test_reaper.py#n24 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/account/test_reaper.py#n162 : raise eventlet.Timeout()
https://opendev.org/openstack/swift/src/branch/master/test/unit/account/test_reaper.py#n173 : raise eventlet.Timeout()
https://opendev.org/openstack/swift/src/branch/master/test/unit/cli/test_recon.py#n29 : from eventlet.green import socket
https://opendev.org/openstack/swift/src/branch/master/test/unit/cli/test_recon.py#n41 : from eventlet.green.urllib import request as urllib2
https://opendev.org/openstack/swift/src/branch/master/test/unit/cli/test_recon.py#n42 : GREEN_URLLIB_URLOPEN = 'eventlet.green.urllib.request.urlopen'
https://opendev.org/openstack/swift/src/branch/master/test/unit/cli/test_recon.py#n44 : from eventlet.green import urllib2
https://opendev.org/openstack/swift/src/branch/master/test/unit/cli/test_recon.py#n45 : GREEN_URLLIB_URLOPEN = 'eventlet.green.urllib2.urlopen'
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/helpers.py#n261 : req_body = None  # generally, we don't care and let eventlet discard()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_bulk.py#n28 : from eventlet import sleep
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_bulk.py#n296 : self.assertEqual(req.environ['eventlet.minimum_write_chunk_size'], 0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_bulk.py#n689 : self.assertEqual(req.environ['eventlet.minimum_write_chunk_size'], 0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_memcache.py#n20 : from eventlet.green import ssl
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_ratelimit.py#n18 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_ratelimit.py#n29 : threading = eventlet.patcher.original('threading')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_ratelimit.py#n80 : self.was_sleep = eventlet.sleep
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_ratelimit.py#n81 : eventlet.sleep = mock_sleep
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_ratelimit.py#n87 : eventlet.sleep = self.was_sleep
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_slo.py#n2673 : patch('eventlet.sleep', mock_sleep), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_slo.py#n2685 : patch('eventlet.sleep', mock_sleep), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_slo.py#n2696 : patch('eventlet.sleep', mock_sleep), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_slo.py#n2708 : patch('eventlet.sleep', mock_sleep), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n54 : self.assertTrue(xprofile.get_profiler('eventlet.green.profile')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n63 : xprofile.get_profiler('eventlet.green.profile')]
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n93 : profiler = xprofile.get_profiler('eventlet.green.profile')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n200 : profiler1 = xprofile.get_profiler('eventlet.green.profile')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n209 : profiler2 = xprofile.get_profiler('eventlet.green.profile')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n270 : prof = xprofile.get_profiler('eventlet.green.profile')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n291 : profiler = xprofile.get_profiler('eventlet.green.profile')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n295 : self.viewer = HTMLViewer('__profile__', 'eventlet.green.profile',
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/middleware/test_xprofile.py#n477 : xprofile.get_profiler('eventlet.green.profile')]
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_bufferedhttp.py#n20 : from eventlet import spawn, Timeout
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n154 : mock.patch('swift.common.utils.eventlet') as _utils_evt, \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n155 : mock.patch('eventlet.hubs.use_hub') as mock_use_hub, \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n156 : mock.patch('eventlet.debug') as _debug_evt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n208 : mock.patch('swift.common.utils.eventlet'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n209 : mock.patch('eventlet.hubs.use_hub'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n210 : mock.patch('eventlet.debug'):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n236 : with mock.patch('swift.common.utils.eventlet'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n237 : mock.patch('eventlet.hubs.use_hub'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n238 : mock.patch('eventlet.debug'):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n260 : with mock.patch('swift.common.utils.eventlet'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n261 : mock.patch('eventlet.hubs.use_hub'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n262 : mock.patch('eventlet.debug'):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n288 : with mock.patch('swift.common.utils.eventlet'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n289 : mock.patch('eventlet.hubs.use_hub'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n290 : mock.patch('eventlet.debug'):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n316 : with mock.patch('swift.common.utils.eventlet'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n317 : mock.patch('eventlet.hubs.use_hub'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_daemon.py#n318 : mock.patch('eventlet.debug'):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_db.py#n36 : from eventlet.timeout import Timeout
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_db_auditor.py#n23 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_db_replicator.py#n20 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_db_replicator.py#n715 : if isinstance(self._status, (Exception, eventlet.Timeout)):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_db_replicator.py#n738 : FakeResponse(eventlet.Timeout(), None),
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_http_protocol.py#n22 : import eventlet.wsgi as wsgi
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_internal_client.py#n40 : from eventlet.green.urllib import request as urllib2
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_internal_client.py#n42 : from eventlet.green import urllib2
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_manager.py#n35 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_manager.py#n36 : threading = eventlet.patcher.original('threading')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_memcached.py#n32 : from eventlet import GreenPool, sleep, Queue
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_memcached.py#n33 : from eventlet.pools import Pool
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_memcached.py#n34 : from eventlet.green import ssl
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n28 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n29 : import eventlet.debug
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n30 : import eventlet.event
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n31 : import eventlet.patcher
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n76 : threading = eventlet.patcher.original('threading')
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n189 : eventlet.sleep()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n1107 : patch('eventlet.sleep', my_sleep):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3096 : eventlet.sleep()   # yield control
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3133 : with patch('eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3151 : with patch('eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3165 : with patch('eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3210 : with patch('eventlet.sleep', mock_sleep):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3297 : patch('eventlet.sleep', my_sleep):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3371 : pile = eventlet.GreenPile(2)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3380 : pile = eventlet.GreenPile(2)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3833 : events = [eventlet.event.Event(), eventlet.event.Event(),
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3834 : eventlet.event.Event()]
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3851 : eventlet.sleep(sleep_duration)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3864 : eventlet.sleep(sleep_duration)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3877 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n3892 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n6892 : with patch('eventlet.greenthread.getcurrent', return_value=gth), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n6914 : with patch('eventlet.greenthread.getcurrent', return_value=gth):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n6955 : with patch('eventlet.hubs.get_hub') as m_gh:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n7358 : pool.spawn(eventlet.sleep, 10)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_utils.py#n7366 : pool.spawn(eventlet.sleep, 10)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n627 : mock.patch('swift.common.wsgi.eventlet') as _wsgi_evt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n679 : mock.patch('swift.common.wsgi.eventlet') as _eventlet:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n685 : _eventlet.hubs.use_hub.assert_called_with(utils.get_hub())
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n686 : _eventlet.debug.hub_exceptions.assert_called_with(False)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n697 : self.assertNotIn('keepalive', kwargs)  # eventlet defaults to True
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n703 : def test_run_server_with_latest_eventlet(self):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n725 : mock.patch('swift.common.wsgi.eventlet'):
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n764 : mock.patch('swift.common.wsgi.eventlet') as _wsgi_evt, \
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n790 : eventlet_debug = yes
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n815 : mock.patch('swift.common.wsgi.eventlet') as _wsgi_evt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n984 : mock.patch('swift.common.utils.eventlet') as _utils_evt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n1021 : mock.patch('swift.common.utils.eventlet') as _utils_evt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/test_wsgi.py#n1059 : mock.patch('swift.common.utils.eventlet') as _utils_evt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n28 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n37 : from test.unit import quiet_eventlet_exceptions
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n43 : import eventlet.green.httplib as green_http_client
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n45 : import eventlet.green.http.client as green_http_client
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1061 : evt_lock1 = eventlet.event.Event()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1062 : evt_lock2 = eventlet.event.Event()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1063 : evt_unlock = eventlet.event.Event()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1072 : eventlet.spawn(get_the_lock)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1087 : self.assertFalse(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1089 : self.assertFalse(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1091 : self.assertTrue(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1099 : self.assertFalse(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1100 : self.assertTrue(eventlet.spawn(try_acquire_lock).wait())
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1112 : with quiet_eventlet_exceptions():
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1114 : eventlet.spawn(self.mutex.release).wait)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1117 : evt = eventlet.event.Event()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1122 : eventlet.sleep(0)  # let coro2 go
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1137 : c1 = eventlet.spawn(coro1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1138 : c2 = eventlet.spawn(coro2)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1160 : eventlet.sleep(0.0001)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1165 : greenthread1 = eventlet.spawn(do_stuff)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1166 : greenthread2 = eventlet.spawn(do_stuff)
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1168 : real_thread1 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1172 : real_thread2 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1184 : pthread1_event = eventlet.patcher.original('threading').Event()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1185 : pthread2_event1 = eventlet.patcher.original('threading').Event()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1186 : pthread2_event2 = eventlet.patcher.original('threading').Event()
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1191 : thread_id.append(id(eventlet.greenthread.getcurrent()))
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1210 : thread_id.append(id(eventlet.greenthread.getcurrent()))
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1217 : real_thread1 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1221 : real_thread2 = eventlet.patcher.original('threading').Thread(
https://opendev.org/openstack/swift/src/branch/master/test/unit/common/utils/test_logs.py#n1233 : eventlet.debug.hub_prevent_multiple_readers(True)
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_reconciler.py#n28 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_reconciler.py#n718 : mock.patch('eventlet.greenpool.DEBUG', False):
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_reconciler.py#n992 : eventlet.sleep(0.0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_replicator.py#n25 : from eventlet import sleep
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_server.py#n31 : from eventlet import spawn, Timeout
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n19 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n834 : with mock.patch('eventlet.sleep'), mock.patch.object(
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n893 : with mock.patch('eventlet.sleep'), mock.patch.object(
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n952 : with mock.patch('eventlet.sleep'), mock.patch.object(
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n979 : with mock.patch('eventlet.sleep'), mock.patch.object(
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n1019 : with mock.patch('eventlet.sleep'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n1049 : with mock.patch('eventlet.sleep'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n1061 : with mock.patch('eventlet.sleep'), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n1126 : mock.patch('eventlet.sleep', fake_sleep):
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n1143 : mock.patch('eventlet.sleep', fake_sleep):
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n5481 : res, sharder, _ = do_test(replicas, Exception, eventlet.Timeout(), 202)
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n5529 : res, sharder, _ = do_test(replicas, eventlet.Timeout(), Exception)
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_sharder.py#n5595 : replicas, eventlet.Timeout(), eventlet.Timeout(), 202, 404)
https://opendev.org/openstack/swift/src/branch/master/test/unit/container/test_updater.py#n28 : from eventlet import spawn, Timeout
https://opendev.org/openstack/swift/src/branch/master/test/unit/helpers.py#n30 : from eventlet import spawn, wsgi
https://opendev.org/openstack/swift/src/branch/master/test/unit/helpers.py#n221 : 'ignore', module='eventlet',
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_diskfile.py#n43 : from eventlet import hubs, timeout, tpool
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_reconstructor.py#n29 : from eventlet import Timeout, sleep, spawn
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_reconstructor.py#n30 : from eventlet.green import threading
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_reconstructor.py#n50 : encode_frag_archive_bodies, quiet_eventlet_exceptions,
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_reconstructor.py#n2486 : Timeout(.3), quiet_eventlet_exceptions(), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_reconstructor.py#n2523 : Timeout(.3), quiet_eventlet_exceptions(), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_reconstructor.py#n2609 : Timeout(.3), quiet_eventlet_exceptions(), \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_replicator.py#n32 : from eventlet.green import subprocess
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_replicator.py#n33 : from eventlet import Timeout, sleep
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_replicator.py#n2443 : mock.patch('eventlet.green.subprocess.Popen', new_mock):
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_replicator.py#n2479 : mock.patch('eventlet.green.subprocess.Popen', new_mock):
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n38 : from eventlet import sleep, spawn, wsgi, Timeout, tpool, greenthread
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n39 : from eventlet.green import httplib
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n105 : with mock.patch('eventlet.tpool.set_num_threads') as mock_snt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n110 : conf = {'eventlet_tpool_num_threads': '17'}
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n111 : with mock.patch('eventlet.tpool.set_num_threads') as mock_snt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n117 : with mock.patch('eventlet.tpool.set_num_threads') as mock_snt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n122 : conf = {'eventlet_tpool_num_threads': '17',
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n124 : with mock.patch('eventlet.tpool.set_num_threads') as mock_snt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_server.py#n131 : with mock.patch('eventlet.tpool.set_num_threads') as mock_snt:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n21 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n38 : skip_if_no_xattrs, quiet_eventlet_exceptions, make_timestamp_iter
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n65 : self.rx_server = eventlet.spawn(
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n66 : eventlet.wsgi.server, sock, self.rx_controller, self.rx_logger)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n999 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n1034 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n1059 : with quiet_eventlet_exceptions():
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n1080 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n1134 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n1237 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync.py#n1273 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n22 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n323 : eventlet.sleep(0.05)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n503 : ssync_receiver.eventlet.greenio, 'shutdown_safe') as \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n538 : ssync_receiver.eventlet.greenio, 'shutdown_safe') as \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n573 : eventlet.sleep(0.1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n581 : ssync_receiver.eventlet.greenio, 'shutdown_safe') as \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n623 : ssync_receiver.eventlet.greenio, 'shutdown_safe') as \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n1284 : eventlet.sleep(0.1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n1292 : ssync_receiver.eventlet.greenio, 'shutdown_safe') as \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n1339 : ssync_receiver.eventlet.greenio, 'shutdown_safe') as \
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n1378 : with mock.patch.object(ssync_receiver.eventlet.greenio,
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n2323 : self.rx_server = eventlet.spawn(
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n2324 : eventlet.wsgi.server, self.sock, rx_server, utils.NullLogger())
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n2333 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n2362 : eventlet.sleep(0)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_receiver.py#n2403 : eventlet.sleep(sleep_time)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n20 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n673 : eventlet.sleep(0.1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n697 : eventlet.sleep(0.1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n800 : side_effect=lambda *args: eventlet.sleep(1)):
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n825 : side_effect=lambda *args: eventlet.sleep(sleeps.pop(0))):
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n1235 : connection.send = lambda d: eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n1543 : eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n1594 : eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n1639 : connection.send = lambda d: eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n1664 : connection.send = lambda d: eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n1684 : eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_ssync_sender.py#n1804 : connection.send = lambda d: eventlet.sleep(1)
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n15 : import eventlet
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n36 : from eventlet import spawn, Timeout
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n1482 : eventlet.sleep(latencies.pop(0))
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n1702 : mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n1829 : mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n1971 : with mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n1990 : with mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n2008 : with mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n2027 : with mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n2056 : with mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n2081 : with mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/obj/test_updater.py#n2105 : with mock.patch('swift.common.utils.eventlet.sleep') as mock_sleep:
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/controllers/test_container.py#n21 : from eventlet import Timeout
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/controllers/test_obj.py#n29 : from eventlet import Timeout, sleep
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/controllers/test_obj.py#n30 : from eventlet.queue import Empty
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/controllers/test_obj.py#n60 : quiet_eventlet_exceptions, FakeSource, make_timestamp_iter, FakeMemcache,
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/controllers/test_obj.py#n2583 : with quiet_eventlet_exceptions(), set_http_connect(
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/test_server.py#n47 : from eventlet import sleep, spawn, wsgi, Timeout, debug
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/test_server.py#n48 : from eventlet.green import httplib
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/test_server.py#n6961 : sleep(0)  # let eventlet do its thing
https://opendev.org/openstack/swift/src/branch/master/test/unit/proxy/test_server.py#n6986 : sleep(0)  # let eventlet do its thing
https://opendev.org/openstack/swift/src/branch/master/tools/playbooks/common/install_dependencies.yaml#n38 : - eventlet
https://opendev.org/openstack/swift-bench/src/branch/master/CHANGELOG#n9 : * eventlet dependency has been raised to >=0.17.4
https://opendev.org/openstack/swift-bench/src/branch/master/requirements.txt#n2 : eventlet>=0.17.4  # MIT
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n31 : import eventlet
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n32 : import eventlet.pools
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n33 : from eventlet.green.httplib import CannotSendRequest
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n55 : pool = eventlet.GreenPool(int(getattr(conf, concurrency_key)))
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n125 : class ConnectionPool(eventlet.pools.Pool):
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n129 : eventlet.pools.Pool.__init__(self, size, size)
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n279 : pool = eventlet.GreenPool(self.concurrency)
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n302 : swift-bench-client processes, each of which use eventlet for concurrency.
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n338 : eventlet.patcher.monkey_patch(socket=True)
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n339 : pool = eventlet.GreenPool(size=len(self.clients))
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n340 : pile = eventlet.GreenPile(pool)
https://opendev.org/openstack/swift-bench/src/branch/master/swiftbench/bench.py#n410 : eventlet.patcher.monkey_patch(socket=True)
https://opendev.org/openstack/tacker/src/branch/master/doc/source/contributor/api_layer.rst#n22 : .. _Eventlet: https://eventlet.net/
https://opendev.org/openstack/tacker/src/branch/master/doc/source/contributor/api_layer.rst#n24 : .. _GreenPool: https://eventlet.net/doc/modules/greenpool.html
https://opendev.org/openstack/tacker/src/branch/master/requirements.txt#n13 : eventlet>=0.30.1 # MIT
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n17 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n150 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n153 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n157 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_on_vm_package/Scripts/kubernetes_mgmt_free5gc.py#n14 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_on_vm_package/Scripts/kubernetes_mgmt_free5gc.py#n75 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_on_vm_package/Scripts/kubernetes_mgmt_free5gc.py#n78 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_on_vm_package/Scripts/kubernetes_mgmt_free5gc.py#n82 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n17 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n150 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n153 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/cnf_on_vm/no_affinity/sample_free5gc_cnf_package/Scripts/free5gc_mgmt_cnf.py#n157 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_nfvi_node/Scripts/free5gc_mgmt.py#n14 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_nfvi_node/Scripts/free5gc_mgmt.py#n140 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_nfvi_node/Scripts/free5gc_mgmt.py#n143 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_nfvi_node/Scripts/free5gc_mgmt.py#n147 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone/Scripts/free5gc_mgmt.py#n14 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone/Scripts/free5gc_mgmt.py#n140 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone/Scripts/free5gc_mgmt.py#n143 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone/Scripts/free5gc_mgmt.py#n147 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone_old/Scripts/free5gc_mgmt.py#n14 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone_old/Scripts/free5gc_mgmt.py#n140 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone_old/Scripts/free5gc_mgmt.py#n143 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/Affinity_Anti-Affinity/VNF/sample_free5gc_vnf_package_scope_zone_old/Scripts/free5gc_mgmt.py#n147 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/change_ext_conn/Scripts/free5gc_mgmt.py#n14 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/change_ext_conn/Scripts/free5gc_mgmt.py#n140 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/change_ext_conn/Scripts/free5gc_mgmt.py#n143 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/change_ext_conn/Scripts/free5gc_mgmt.py#n147 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/sample_free5gc_vnf_package/Scripts/free5gc_mgmt.py#n14 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/sample_free5gc_vnf_package/Scripts/free5gc_mgmt.py#n140 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/sample_free5gc_vnf_package/Scripts/free5gc_mgmt.py#n143 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/free5gc/vnf/sample_free5gc_vnf_package/Scripts/free5gc_mgmt.py#n147 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubernetes_mgmt.py#n16 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubernetes_mgmt.py#n91 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubernetes_mgmt.py#n94 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubernetes_mgmt.py#n98 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/cnf_nodeport_setting/cnf_nodeport_mgmt.py#n20 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/cnf_nodeport_setting/cnf_nodeport_mgmt.py#n133 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/cnf_nodeport_setting/cnf_nodeport_mgmt.py#n136 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/cnf_nodeport_setting/cnf_nodeport_mgmt.py#n140 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/kubespray_mgmt.py#n21 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/kubespray_mgmt.py#n306 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/kubespray_mgmt.py#n309 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/kubespray_mgmt.py#n313 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/kubespray_mgmt.py#n835 : with eventlet.Timeout(K8S_INSTALL_TIMEOUT, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/kubespray/kubespray_mgmt.py#n845 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/private_registry_mgmt.py#n19 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/private_registry_mgmt.py#n96 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/private_registry_mgmt.py#n99 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/samples/mgmt_driver/kubernetes/private_registry_mgmt.py#n104 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/setup.cfg#n45 : tacker-server = tacker.cmd.eventlet.tacker_server:main
https://opendev.org/openstack/tacker/src/branch/master/setup.cfg#n46 : tacker-conductor = tacker.cmd.eventlet.conductor:main
https://opendev.org/openstack/tacker/src/branch/master/tacker/agent/linux/utils.py#n19 : from eventlet.green import subprocess
https://opendev.org/openstack/tacker/src/branch/master/tacker/agent/linux/utils.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/tacker/src/branch/master/tacker/cmd/eventlet/__init__.py#n15 : from tacker.common import eventlet_utils
https://opendev.org/openstack/tacker/src/branch/master/tacker/cmd/eventlet/__init__.py#n17 : eventlet_utils.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/eventlet_utils.py#n18 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/eventlet_utils.py#n23 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/rpc.py#n210 : 'eventlet', serializer,
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n33 : from eventlet.green import subprocess
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n43 : from eventlet import sleep
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n293 : """Prevent eventlet thread starvation during iteration
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n296 : iteration. This can prevent eventlet thread starvation.
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n311 : """Prevent eventlet thread starvationafter each read operation.
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n314 : after each read. This can prevent eventlet thread starvation.
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n507 : """An eventlet thread friendly class for reading in image data.
https://opendev.org/openstack/tacker/src/branch/master/tacker/common/utils.py#n511 : one image being uploaded/downloaded this prevents eventlet thread
https://opendev.org/openstack/tacker/src/branch/master/tacker/nfvo/nfvo_plugin.py#n19 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/tacker/nfvo/nfvo_plugin.py#n63 : self._pool = eventlet.GreenPool()
https://opendev.org/openstack/tacker/src/branch/master/tacker/sol_refactored/infra_drivers/openstack/openstack.py#n26 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/tacker/sol_refactored/infra_drivers/openstack/openstack.py#n139 : eventlet.sleep(timeout)
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/base.py#n26 : import eventlet.timeout
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/base.py#n209 : with eventlet.timeout.Timeout(max_execution_time, False):
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/agent/linux/test_utils.py#n32 : self.process = mock.patch('eventlet.green.subprocess.Popen').start()
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/test_wsgi.py#n59 : with mock.patch.object(wsgi.eventlet, 'listen') as mock_listen:
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/vnfm/infra_drivers/kubernetes/test_kubernetes_driver_helm.py#n14 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/vnfm/infra_drivers/kubernetes/test_kubernetes_driver_helm.py#n123 : @mock.patch.object(eventlet, 'monkey_patch')
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/vnfm/infra_drivers/kubernetes/test_kubernetes_driver_helm.py#n132 : @mock.patch.object(eventlet, 'monkey_patch')
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/vnfm/infra_drivers/kubernetes/test_kubernetes_driver_helm.py#n142 : @mock.patch.object(eventlet, 'monkey_patch')
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/vnfm/infra_drivers/kubernetes/test_kubernetes_driver_helm.py#n146 : mock_execute_command.side_effect = eventlet.timeout.Timeout
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/vnfm/infra_drivers/kubernetes/test_kubernetes_driver_helm.py#n154 : @mock.patch.object(eventlet, 'monkey_patch')
https://opendev.org/openstack/tacker/src/branch/master/tacker/tests/unit/vnfm/infra_drivers/kubernetes/test_kubernetes_driver_helm.py#n161 : @mock.patch.object(eventlet, 'monkey_patch')
https://opendev.org/openstack/tacker/src/branch/master/tacker/vnfm/infra_drivers/kubernetes/helm/helm_client.py#n19 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/tacker/vnfm/infra_drivers/kubernetes/helm/helm_client.py#n51 : eventlet.monkey_patch()
https://opendev.org/openstack/tacker/src/branch/master/tacker/vnfm/infra_drivers/kubernetes/helm/helm_client.py#n54 : with eventlet.Timeout(timeout, True):
https://opendev.org/openstack/tacker/src/branch/master/tacker/vnfm/infra_drivers/kubernetes/helm/helm_client.py#n58 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/tacker/src/branch/master/tacker/vnfm/infra_drivers/openstack/openstack.py#n18 : import eventlet
https://opendev.org/openstack/tacker/src/branch/master/tacker/vnfm/infra_drivers/openstack/openstack.py#n57 : eventlet.monkey_patch(time=True)
https://opendev.org/openstack/tacker/src/branch/master/tacker/vnfm/infra_drivers/openstack/openstack.py#n231 : with eventlet.timeout.Timeout(USER_DATA_TIMEOUT, False):
https://opendev.org/openstack/tacker/src/branch/master/tacker/wsgi.py#n30 : import eventlet.wsgi
https://opendev.org/openstack/tacker/src/branch/master/tacker/wsgi.py#n171 : eventlet.wsgi.MAX_HEADER_LINE = CONF.max_header_line
https://opendev.org/openstack/tacker/src/branch/master/tacker/wsgi.py#n172 : self.pool = eventlet.GreenPool(threads)
https://opendev.org/openstack/tacker/src/branch/master/tacker/wsgi.py#n226 : sock = eventlet.listen(bind_addr,
https://opendev.org/openstack/tacker/src/branch/master/tacker/wsgi.py#n235 : eventlet.sleep(0.1)
https://opendev.org/openstack/tacker/src/branch/master/tacker/wsgi.py#n288 : eventlet.wsgi.server(socket, application, custom_pool=self.pool,
https://opendev.org/openstack/taskflow/src/branch/master/README.rst#n45 : you want to use the feature in question (`eventlet`_ or the worker based engine
https://opendev.org/openstack/taskflow/src/branch/master/README.rst#n72 : .. _eventlet: http://eventlet.net/
https://opendev.org/openstack/taskflow/src/branch/master/doc/source/user/engines.rst#n154 : If eventlet is used then this engine will not block other threads
https://opendev.org/openstack/taskflow/src/branch/master/doc/source/user/engines.rst#n155 : from running as eventlet automatically creates a implicit co-routine
https://opendev.org/openstack/taskflow/src/branch/master/doc/source/user/engines.rst#n157 : `eventlet <http://eventlet.net/>`_ and
https://opendev.org/openstack/taskflow/src/branch/master/doc/source/user/jobs.rst#n269 : when your program uses eventlet and you want to instruct kazoo to use an
https://opendev.org/openstack/taskflow/src/branch/master/doc/source/user/jobs.rst#n270 : eventlet compatible handler.
https://opendev.org/openstack/taskflow/src/branch/master/doc/source/user/utils.rst#n24 : .. automodule:: taskflow.utils.eventlet_utils
https://opendev.org/openstack/taskflow/src/branch/master/setup.cfg#n71 : eventlet =
https://opendev.org/openstack/taskflow/src/branch/master/setup.cfg#n72 : eventlet>=0.18.2 # MIT
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/conductors/backends/impl_executor.py#n90 : an eventlet *green* event works better for the conductor user)."""
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/engines/__init__.py#n17 : from oslo_utils import eventletutils as _eventletutils
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/engines/__init__.py#n22 : _eventletutils.warn_eventlet_not_patched(
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/engines/action_engine/executor.py#n226 : is more of a guess/somewhat arbitrary, but it does match what the eventlet
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/engines/action_engine/executor.py#n227 : greenpool default size is (so at least it's consistent with what eventlet
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/examples/hello_world.py#n83 : import eventlet as _eventlet  # noqa
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/examples/hello_world.py#n88 : print("-- Running in parallel using eventlet --")
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/examples/jobboard_produce_consume_colors.py#n154 : from taskflow.utils import eventlet_utils as _eu  # noqa
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/examples/jobboard_produce_consume_colors.py#n156 : import eventlet as _eventlet  # noqa
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/persistence/backends/impl_sqlalchemy.py#n34 : from taskflow.utils import eventlet_utils
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/persistence/backends/impl_sqlalchemy.py#n139 : If we use eventlet.monkey_patch(), eventlet.greenthread.sleep(0) will
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/persistence/backends/impl_sqlalchemy.py#n144 : implemented by C libraries that eventlet cannot monkey patch.
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/persistence/backends/impl_sqlalchemy.py#n309 : eventlet_utils.EVENTLET_AVAILABLE)
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/action_engine/test_creation.py#n26 : from taskflow.utils import eventlet_utils as eu
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/action_engine/test_creation.py#n71 : @testtools.skipIf(not eu.EVENTLET_AVAILABLE, 'eventlet is not available')
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_arguments_passing.py#n24 : from taskflow.utils import eventlet_utils as eu
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_arguments_passing.py#n215 : @testtools.skipIf(not eu.EVENTLET_AVAILABLE, 'eventlet is not available')
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_engines.py#n40 : from taskflow.utils import eventlet_utils as eu
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_engines.py#n1475 : @testtools.skipIf(not eu.EVENTLET_AVAILABLE, 'eventlet is not available')
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_retries.py#n31 : from taskflow.utils import eventlet_utils as eu
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_retries.py#n1358 : @testtools.skipIf(not eu.EVENTLET_AVAILABLE, 'eventlet is not available')
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_suspend.py#n26 : from taskflow.utils import eventlet_utils as eu
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/tests/unit/test_suspend.py#n220 : @testtools.skipIf(not eu.EVENTLET_AVAILABLE, 'eventlet is not available')
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/eventlet_utils.py#n19 : _eventlet = importutils.try_import('eventlet')
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/eventlet_utils.py#n21 : EVENTLET_AVAILABLE = bool(_eventlet)
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/eventlet_utils.py#n24 : def check_for_eventlet(exc=None):
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/eventlet_utils.py#n25 : """Check if eventlet is available and if not raise a runtime error.
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/kazoo_utils.py#n185 : based, but `gevent`_, or `eventlet`_ ones can be provided as needed)
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/kazoo_utils.py#n199 : .. _eventlet: https://kazoo.readthedocs.io/en/latest/api/\
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/kazoo_utils.py#n200 : handlers/eventlet.html
https://opendev.org/openstack/taskflow/src/branch/master/taskflow/utils/misc.py#n480 : run. This can happen when eventlet switches greenthreads or when running an
https://opendev.org/openstack/taskflow/src/branch/master/test-requirements.txt#n19 : eventlet>=0.18.2 # MIT
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n11 : https://blueprints.launchpad.net/ceilometer/+spec/remove-web-eventlet
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n17 : monkeypatched to use eventlet.
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n23 : unusual behaviors when it is monkeypatched to use eventlet. Since the Werkzeug
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n25 : multi-threaded interactions, the inclusion of eventlet should be removed.
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n35 : eventlet in place. We want our tooling to be as useful as possible *especially*
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n38 : When using the Werkzeug service, using eventlet is fairly redundant as the
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n44 : We can resolve this problem relatively easily. At the moment eventlet monkey
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n121 : * Separate eventlet and non-eventlet commands into two different module
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n123 : * Compare and contrast performance of the API server with and without eventlet
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n125 : Bayer has pointed out that removing eventlet has little impact on a properly
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n128 : Werkzeug with eventlet, Werkzeug without eventlet.
https://opendev.org/openstack/telemetry-specs/src/branch/master/specs/liberty/remove-web-eventlet.rst#n136 : Ceilometer project. Once the API server is not using eventlet we can
https://opendev.org/openstack/tooz/src/branch/master/tooz/drivers/zookeeper.py#n21 : from kazoo.handlers import eventlet as eventlet_handler
https://opendev.org/openstack/tooz/src/branch/master/tooz/drivers/zookeeper.py#n23 : eventlet_handler = None
https://opendev.org/openstack/tooz/src/branch/master/tooz/drivers/zookeeper.py#n122 : if eventlet_handler:
https://opendev.org/openstack/tooz/src/branch/master/tooz/drivers/zookeeper.py#n123 : HANDLERS['eventlet'] = eventlet_handler.SequentialEventletHandler
https://opendev.org/openstack/trove/src/branch/master/integration/scripts/files/deprecated-elements/fedora-guest/install.d/15-trove-dep#n11 : python-routes python-eventlet python-webob \
https://opendev.org/openstack/trove/src/branch/master/requirements.txt#n3 : eventlet!=0.18.3,!=0.20.1,>=0.18.2 # MIT
https://opendev.org/openstack/trove/src/branch/master/tools/trove-pylint.config#n1053 : "Module 'eventlet.green.subprocess' has no 'PIPE' member",
https://opendev.org/openstack/trove/src/branch/master/tools/trove-pylint.config#n1083 : "Module 'eventlet.green.subprocess' has no 'PIPE' member",
https://opendev.org/openstack/trove/src/branch/master/tools/trove-pylint.config#n1101 : "Module 'eventlet.green.subprocess' has no 'PIPE' member",
https://opendev.org/openstack/trove/src/branch/master/tools/trove-pylint.config#n1119 : "Module 'eventlet.green.subprocess' has no 'PIPE' member",
https://opendev.org/openstack/trove/src/branch/master/tools/trove-pylint.config#n1137 : "Module 'eventlet.green.subprocess' has no 'PIPE' member",
https://opendev.org/openstack/trove/src/branch/master/tools/trove-pylint.config#n1155 : "Module 'eventlet.green.subprocess' has no 'PIPE' member",
https://opendev.org/openstack/trove/src/branch/master/trove/cmd/__init__.py#n27 : import eventlet
https://opendev.org/openstack/trove/src/branch/master/trove/cmd/__init__.py#n28 : eventlet.monkey_patch(all=True)
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n18 : import eventlet
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n19 : eventlet.patcher.monkey_patch(all=False, socket=True)
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n27 : import eventlet.wsgi
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n63 : sock = eventlet.listen(('0.0.0.0', port))
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n64 : eventlet.wsgi.server(sock, application, **kwargs)
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n99 : sock = eventlet.listen(bind_addr,
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n108 : eventlet.sleep(0.1)
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n156 : logger = logging.getLogger('eventlet.wsgi')
https://opendev.org/openstack/trove/src/branch/master/trove/common/base_wsgi.py#n157 : eventlet.wsgi.server(socket,
https://opendev.org/openstack/trove/src/branch/master/trove/common/debug_utils.py#n98 : if threading.current_thread.__module__ == 'eventlet.green.threading':
https://opendev.org/openstack/trove/src/branch/master/trove/common/debug_utils.py#n99 : LOG.warning("Enabling debugging with eventlet monkey"
https://opendev.org/openstack/trove/src/branch/master/trove/common/strategies/cluster/experimental/cassandra/taskmanager.py#n16 : from eventlet.timeout import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/common/strategies/cluster/experimental/galera_common/taskmanager.py#n15 : from eventlet.timeout import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/common/strategies/cluster/experimental/mongodb/taskmanager.py#n16 : from eventlet.timeout import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/common/strategies/cluster/experimental/redis/taskmanager.py#n14 : from eventlet.timeout import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/common/strategies/cluster/experimental/vertica/taskmanager.py#n14 : from eventlet.timeout import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/common/utils.py#n25 : from eventlet.timeout import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/common/wsgi.py#n23 : import eventlet.wsgi
https://opendev.org/openstack/trove/src/branch/master/trove/common/wsgi.py#n51 : eventlet.wsgi.MAX_HEADER_LINE = CONF.max_header_line
https://opendev.org/openstack/trove/src/branch/master/trove/common/wsgi.py#n53 : eventlet.patcher.monkey_patch(all=False, socket=True)
https://opendev.org/openstack/trove/src/branch/master/trove/guestagent/api.py#n20 : from eventlet import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/rpc.py#n121 : executor = "blocking" if debug_utils.enabled() else "eventlet"
https://opendev.org/openstack/trove/src/branch/master/trove/taskmanager/models.py#n20 : from eventlet import greenthread
https://opendev.org/openstack/trove/src/branch/master/trove/taskmanager/models.py#n21 : from eventlet.timeout import Timeout
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/guestagent.py#n19 : import eventlet
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/guestagent.py#n244 : eventlet.spawn_after(3.5, update_db)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/guestagent.py#n325 : eventlet.spawn_after(10, finish_create_backup)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n19 : import eventlet
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n159 : eventlet.spawn_after(1, set_to_active)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n198 : eventlet.spawn_after(1, set_to_active)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n217 : eventlet.spawn_after(0.75, change_host)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n223 : eventlet.spawn_after(1, set_to_confirm_mode)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n225 : eventlet.spawn_after(0.8, set_flavor)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n231 : eventlet.spawn_after(time_from_now, set_status)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n322 : eventlet.spawn_after(time_from_now, delete_server)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n334 : eventlet.spawn_after(time_from_now, set_server_running)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n398 : eventlet.spawn_after(time_from_now, set_status)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n482 : eventlet.spawn_after(1.0, finish_resize)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n494 : eventlet.spawn_after(1.0, finish_detach)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/nova.py#n506 : eventlet.spawn_after(1.0, finish_attach)
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/taskmanager.py#n19 : import eventlet
https://opendev.org/openstack/trove/src/branch/master/trove/tests/fakes/taskmanager.py#n46 : eventlet.spawn_after(0.1, func)
https://opendev.org/openstack/upstream-institute-virtual-environment/src/branch/master/elements/upstream-training/static/tmp/requirements.txt#n59 : eventlet==0.26.1
https://opendev.org/openstack/venus/src/branch/master/etc/venus/logging_sample.conf#n54 : [logger_eventletwsgi]
https://opendev.org/openstack/venus/src/branch/master/etc/venus/logging_sample.conf#n57 : qualname = eventlet.wsgi.server
https://opendev.org/openstack/venus/src/branch/master/openstack_venus.egg-info/SOURCES.txt#n217 : venus/wsgi/eventlet_server.py
https://opendev.org/openstack/venus/src/branch/master/openstack_venus.egg-info/SOURCES.txt#n306 : venus/wsgi/eventlet_server.py
https://opendev.org/openstack/venus/src/branch/master/openstack_venus.egg-info/requires.txt#n4 : eventlet>=0.26.0
https://opendev.org/openstack/venus/src/branch/master/requirements.txt#n8 : eventlet>=0.26.0 # MIT
https://opendev.org/openstack/venus/src/branch/master/venus/rpc.py#n157 : executor='eventlet',
https://opendev.org/openstack/venus/src/branch/master/venus/service.py#n41 : from venus.wsgi import eventlet_server as wsgi
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n15 : """Methods for working with eventlet WSGI servers."""
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n25 : import eventlet
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n26 : import eventlet.wsgi
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n46 : protocol=eventlet.wsgi.HttpProtocol, backlog=128):
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n53 : :param pool_size: Maximum number of eventlets to spawn concurrently.
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n58 : eventlet.wsgi.MAX_HEADER_LINE = CONF.max_header_line
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n68 : self._pool = eventlet.GreenPool(self.pool_size)
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n69 : self._logger = logging.getLogger("eventlet.wsgi.server")
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n114 : self._socket = eventlet.listen(bind_addr, backlog=backlog,
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n119 : eventlet.sleep(0.1)
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n178 : 'func': eventlet.wsgi.server,
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n188 : self._server = eventlet.spawn(**wsgi_kwargs)
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n202 : server is stopped is by killing its eventlet.
https://opendev.org/openstack/venus/src/branch/master/venus/wsgi/eventlet_server.py#n216 : Waits on the server's eventlet to finish, then returns.
https://opendev.org/openstack/vitrage/src/branch/master/releasenotes/notes/services-management-improvements-899c011e57002e84.yaml#n8 : eventlets and timers.
https://opendev.org/openstack/vitrage/src/branch/master/requirements.txt#n38 : eventlet!=0.20.1,>=0.20.0 # MIT
https://opendev.org/openstack/watcher/src/branch/master/watcher/applier/workflow_engine/base.py#n22 : import eventlet
https://opendev.org/openstack/watcher/src/branch/master/watcher/applier/workflow_engine/base.py#n205 : et = eventlet.spawn(_do_execute_action, *args, **kwargs)
https://opendev.org/openstack/watcher/src/branch/master/watcher/applier/workflow_engine/base.py#n236 : except eventlet.greenlet.GreenletExit:
https://opendev.org/openstack/watcher/src/branch/master/watcher/cmd/__init__.py#n18 : import eventlet
https://opendev.org/openstack/watcher/src/branch/master/watcher/cmd/__init__.py#n20 : eventlet.monkey_patch()
https://opendev.org/openstack/watcher/src/branch/master/watcher/common/rpc.py#n140 : executor='eventlet',
https://opendev.org/openstack/watcher/src/branch/master/watcher/common/rpc.py#n154 : executor='eventlet',
https://opendev.org/openstack/watcher/src/branch/master/watcher/common/service.py#n61 : 'eventlet.wsgi.server=WARN', 'iso8601=WARN',
https://opendev.org/openstack/watcher/src/branch/master/watcher/common/utils.py#n27 : import eventlet
https://opendev.org/openstack/watcher/src/branch/master/watcher/common/utils.py#n28 : from eventlet import tpool
https://opendev.org/openstack/watcher/src/branch/master/watcher/common/utils.py#n199 : with eventlet.timeout.Timeout(
https://opendev.org/openstack/watcher/src/branch/master/watcher/decision_engine/scheduling.py#n19 : import eventlet
https://opendev.org/openstack/watcher/src/branch/master/watcher/decision_engine/scheduling.py#n58 : with eventlet.Timeout(
https://opendev.org/openstack/watcher/src/branch/master/watcher/tests/applier/workflow_engine/test_taskflow_action_container.py#n19 : import eventlet
https://opendev.org/openstack/watcher/src/branch/master/watcher/tests/applier/workflow_engine/test_taskflow_action_container.py#n94 : @mock.patch('eventlet.spawn')
https://opendev.org/openstack/watcher/src/branch/master/watcher/tests/applier/workflow_engine/test_taskflow_action_container.py#n95 : def test_execute_with_cancel_action_plan(self, mock_eventlet_spawn):
https://opendev.org/openstack/watcher/src/branch/master/watcher/tests/applier/workflow_engine/test_taskflow_action_container.py#n112 : et = eventlet.spawn(empty_test)
https://opendev.org/openstack/watcher/src/branch/master/watcher/tests/applier/workflow_engine/test_taskflow_action_container.py#n113 : mock_eventlet_spawn.return_value = et
https://opendev.org/openstack/watcher/src/branch/master/watcher/tests/decision_engine/test_scheduling.py#n21 : import eventlet
https://opendev.org/openstack/watcher/src/branch/master/watcher/tests/decision_engine/test_scheduling.py#n120 : side_effect=lambda: eventlet.sleep(.5))
https://opendev.org/openstack/zun/src/branch/master/contrib/nova-docker/nova/virt/zun/driver.py#n27 : import eventlet
https://opendev.org/openstack/zun/src/branch/master/contrib/nova-docker/nova/virt/zun/driver.py#n467 : except eventlet.timeout.Timeout:
https://opendev.org/openstack/zun/src/branch/master/contrib/nova-docker/nova/virt/zun/opencontrail.py#n16 : import eventlet
https://opendev.org/openstack/zun/src/branch/master/contrib/nova-docker/nova/virt/zun/opencontrail.py#n34 : self._vrouter_semaphore = eventlet.semaphore.Semaphore()
https://opendev.org/openstack/zun/src/branch/master/requirements.txt#n10 : eventlet>=0.28.0 # MIT
https://opendev.org/openstack/zun/src/branch/master/zun/cmd/__init__.py#n18 : import eventlet
https://opendev.org/openstack/zun/src/branch/master/zun/cmd/__init__.py#n20 : eventlet.monkey_patch()
https://opendev.org/openstack/zun/src/branch/master/zun/common/rpc_service.py#n55 : executor='eventlet',
https://opendev.org/openstack/zun/src/branch/master/zun/common/utils.py#n22 : import eventlet
https://opendev.org/openstack/zun/src/branch/master/zun/common/utils.py#n194 : """Passthrough method for eventlet.spawn_n.
https://opendev.org/openstack/zun/src/branch/master/zun/common/utils.py#n213 : eventlet.spawn_n(context_wrapper, *args, **kwargs)
https://opendev.org/openstack/zun/src/branch/master/zun/container/docker/driver.py#n16 : import eventlet
https://opendev.org/openstack/zun/src/branch/master/zun/container/docker/driver.py#n869 : with eventlet.Timeout(CONF.docker.execute_timeout):
https://opendev.org/openstack/zun/src/branch/master/zun/container/docker/driver.py#n871 : except eventlet.Timeout:
https://opendev.org/openstack/zun/src/branch/master/zun/websocket/websocketproxy.py#n178 : from eventlet import hubs
